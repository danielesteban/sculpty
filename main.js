!function(){"use strict";const e="149",t=0,n=1,i=2,r=0,a=1,s=2,A=3,o=100,l=301,c=302,h=306,u=1e3,d=1001,p=1002,m=1003,g=1004,f=1005,_=1006,v=1008,x=1009,y=1014,C=1015,M=1016,w=1020,b=1023,E=1026,S=1027,I=33776,T=33777,D=33778,B=33779,P=36492,R=3e3,L=3001,N="srgb",U="srgb-linear",Q=7680,F=35044,O="300 es",G=1035;class z{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const k=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let V=1234567;const H=Math.PI/180,W=180/Math.PI;function Y(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(k[255&e]+k[e>>8&255]+k[e>>16&255]+k[e>>24&255]+"-"+k[255&t]+k[t>>8&255]+"-"+k[t>>16&15|64]+k[t>>24&255]+"-"+k[63&n|128]+k[n>>8&255]+"-"+k[n>>16&255]+k[n>>24&255]+k[255&i]+k[i>>8&255]+k[i>>16&255]+k[i>>24&255]).toLowerCase()}function j(e,t,n){return Math.max(t,Math.min(n,e))}function X(e,t){return(e%t+t)%t}function J(e,t,n){return(1-n)*e+n*t}function q(e){return 0==(e&e-1)&&0!==e}function K(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Z(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function $(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var ee=Object.freeze({__proto__:null,DEG2RAD:H,RAD2DEG:W,ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},clamp:j,damp:function(e,t,n,i){return J(e,t,1-Math.exp(-n*i))},degToRad:function(e){return e*H},denormalize:Z,euclideanModulo:X,floorPowerOfTwo:K,generateUUID:Y,inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},isPowerOfTwo:q,lerp:J,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},normalize:$,pingpong:function(e,t=1){return t-Math.abs(X(e,2*t)-t)},radToDeg:function(e){return e*W},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},seededRandom:function(e){void 0!==e&&(V=e);let t=V+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},setQuaternionFromProperEuler:function(e,t,n,i,r){const a=Math.cos,s=Math.sin,A=a(n/2),o=s(n/2),l=a((t+i)/2),c=s((t+i)/2),h=a((t-i)/2),u=s((t-i)/2),d=a((i-t)/2),p=s((i-t)/2);switch(r){case"XYX":e.set(A*c,o*h,o*u,A*l);break;case"YZY":e.set(o*u,A*c,o*h,A*l);break;case"ZXZ":e.set(o*h,o*u,A*c,A*l);break;case"XZX":e.set(A*c,o*p,o*d,A*l);break;case"YXY":e.set(o*d,A*c,o*p,A*l);break;case"ZYZ":e.set(o*p,o*d,A*c,A*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)}});class te{constructor(e=0,t=0){te.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ne{constructor(){ne.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,s,A,o){const l=this.elements;return l[0]=e,l[1]=i,l[2]=s,l[3]=t,l[4]=r,l[5]=A,l[6]=n,l[7]=a,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[3],A=n[6],o=n[1],l=n[4],c=n[7],h=n[2],u=n[5],d=n[8],p=i[0],m=i[3],g=i[6],f=i[1],_=i[4],v=i[7],x=i[2],y=i[5],C=i[8];return r[0]=a*p+s*f+A*x,r[3]=a*m+s*_+A*y,r[6]=a*g+s*v+A*C,r[1]=o*p+l*f+c*x,r[4]=o*m+l*_+c*y,r[7]=o*g+l*v+c*C,r[2]=h*p+u*f+d*x,r[5]=h*m+u*_+d*y,r[8]=h*g+u*v+d*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],A=e[6],o=e[7],l=e[8];return t*a*l-t*s*o-n*r*l+n*s*A+i*r*o-i*a*A}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],A=e[6],o=e[7],l=e[8],c=l*a-s*o,h=s*A-l*r,u=o*r-a*A,d=t*c+n*h+i*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return e[0]=c*p,e[1]=(i*o-l*n)*p,e[2]=(s*n-i*a)*p,e[3]=h*p,e[4]=(l*t-i*A)*p,e[5]=(i*r-s*t)*p,e[6]=u*p,e[7]=(n*A-o*t)*p,e[8]=(a*t-n*r)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,s){const A=Math.cos(r),o=Math.sin(r);return this.set(n*A,n*o,-n*(A*a+o*s)+a+e,-i*o,i*A,-i*(-o*a+A*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(ie.makeScale(e,t)),this}rotate(e){return this.premultiply(ie.makeRotation(-e)),this}translate(e,t){return this.premultiply(ie.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const ie=new ne;function re(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function ae(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function se(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Ae(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const oe={[N]:{[U]:se},[U]:{[N]:Ae}},le={legacyMode:!0,get workingColorSpace(){return U},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(oe[t]&&void 0!==oe[t][n]){const i=oe[t][n];return e.r=i(e.r),e.g=i(e.g),e.b=i(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},ce={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},he={r:0,g:0,b:0},ue={h:0,s:0,l:0},de={h:0,s:0,l:0};function pe(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function me(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class ge{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=N){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,le.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=le.workingColorSpace){return this.r=e,this.g=t,this.b=n,le.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=le.workingColorSpace){if(e=X(e,1),t=j(t,0,1),n=j(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=pe(r,i,e+1/3),this.g=pe(r,i,e),this.b=pe(r,i,e-1/3)}return le.toWorkingColorSpace(this,i),this}setStyle(e,t=N){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,le.toWorkingColorSpace(this,t),n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,le.toWorkingColorSpace(this,t),n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const i=parseFloat(e[1])/360,r=parseFloat(e[2])/100,a=parseFloat(e[3])/100;return n(e[4]),this.setHSL(i,r,a,t)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=i[1],n=e.length;if(3===n)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,le.toWorkingColorSpace(this,t),this;if(6===n)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,le.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=N){const n=ce[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=se(e.r),this.g=se(e.g),this.b=se(e.b),this}copyLinearToSRGB(e){return this.r=Ae(e.r),this.g=Ae(e.g),this.b=Ae(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=N){return le.fromWorkingColorSpace(me(this,he),e),j(255*he.r,0,255)<<16^j(255*he.g,0,255)<<8^j(255*he.b,0,255)<<0}getHexString(e=N){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=le.workingColorSpace){le.fromWorkingColorSpace(me(this,he),t);const n=he.r,i=he.g,r=he.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let A,o;const l=(s+a)/2;if(s===a)A=0,o=0;else{const e=a-s;switch(o=l<=.5?e/(a+s):e/(2-a-s),a){case n:A=(i-r)/e+(i<r?6:0);break;case i:A=(r-n)/e+2;break;case r:A=(n-i)/e+4}A/=6}return e.h=A,e.s=o,e.l=l,e}getRGB(e,t=le.workingColorSpace){return le.fromWorkingColorSpace(me(this,he),t),e.r=he.r,e.g=he.g,e.b=he.b,e}getStyle(e=N){return le.fromWorkingColorSpace(me(this,he),e),e!==N?`color(${e} ${he.r} ${he.g} ${he.b})`:`rgb(${255*he.r|0},${255*he.g|0},${255*he.b|0})`}offsetHSL(e,t,n){return this.getHSL(ue),ue.h+=e,ue.s+=t,ue.l+=n,this.setHSL(ue.h,ue.s,ue.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ue),e.getHSL(de);const n=J(ue.h,de.h,t),i=J(ue.s,de.s,t),r=J(ue.l,de.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let fe;ge.NAMES=ce;class _e{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===fe&&(fe=ae("canvas")),fe.width=e.width,fe.height=e.height;const n=fe.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=fe}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=ae("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*se(r[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*se(t[e]/255)):t[e]=se(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ve{constructor(e=null){this.isSource=!0,this.uuid=Y(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(xe(i[t].image)):e.push(xe(i[t]))}else e=xe(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function xe(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?_e.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ye=0;class Ce extends z{constructor(e=Ce.DEFAULT_IMAGE,t=Ce.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,A=1009,o=Ce.DEFAULT_ANISOTROPY,l=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ye++}),this.uuid=Y(),this.name="",this.source=new ve(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=o,this.format=s,this.internalFormat=null,this.type=A,this.offset=new te(0,0),this.repeat=new te(1,1),this.center=new te(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ne,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case u:e.x=e.x-Math.floor(e.x);break;case d:e.x=e.x<0?0:1;break;case p:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case u:e.y=e.y-Math.floor(e.y);break;case d:e.y=e.y<0?0:1;break;case p:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}Ce.DEFAULT_IMAGE=null,Ce.DEFAULT_MAPPING=300,Ce.DEFAULT_ANISOTROPY=1;class Me{constructor(e=0,t=0,n=0,i=1){Me.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=.01,s=.1,A=e.elements,o=A[0],l=A[4],c=A[8],h=A[1],u=A[5],d=A[9],p=A[2],m=A[6],g=A[10];if(Math.abs(l-h)<a&&Math.abs(c-p)<a&&Math.abs(d-m)<a){if(Math.abs(l+h)<s&&Math.abs(c+p)<s&&Math.abs(d+m)<s&&Math.abs(o+u+g-3)<s)return this.set(1,0,0,0),this;t=Math.PI;const e=(o+1)/2,A=(u+1)/2,f=(g+1)/2,_=(l+h)/4,v=(c+p)/4,x=(d+m)/4;return e>A&&e>f?e<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=_/n,r=v/n):A>f?A<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(A),n=_/i,r=x/i):f<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(f),n=v/r,i=x/r),this.set(n,i,r,t),this}let f=Math.sqrt((m-d)*(m-d)+(c-p)*(c-p)+(h-l)*(h-l));return Math.abs(f)<.001&&(f=1),this.x=(m-d)/f,this.y=(c-p)/f,this.z=(h-l)/f,this.w=Math.acos((o+u+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class we extends z{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Me(0,0,e,t),this.scissorTest=!1,this.viewport=new Me(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new Ce(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:_,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ve(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class be extends Ce{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=m,this.minFilter=m,this.wrapR=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ee extends Ce{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=m,this.minFilter=m,this.wrapR=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Se extends we{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let e=0;e<n;e++)this.texture[e]=r.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Ie{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,s){let A=n[i+0],o=n[i+1],l=n[i+2],c=n[i+3];const h=r[a+0],u=r[a+1],d=r[a+2],p=r[a+3];if(0===s)return e[t+0]=A,e[t+1]=o,e[t+2]=l,void(e[t+3]=c);if(1===s)return e[t+0]=h,e[t+1]=u,e[t+2]=d,void(e[t+3]=p);if(c!==p||A!==h||o!==u||l!==d){let e=1-s;const t=A*h+o*u+l*d+c*p,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(A=A*e+h*r,o=o*e+u*r,l=l*e+d*r,c=c*e+p*r,e===1-s){const e=1/Math.sqrt(A*A+o*o+l*l+c*c);A*=e,o*=e,l*=e,c*=e}}e[t]=A,e[t+1]=o,e[t+2]=l,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,i,r,a){const s=n[i],A=n[i+1],o=n[i+2],l=n[i+3],c=r[a],h=r[a+1],u=r[a+2],d=r[a+3];return e[t]=s*d+l*c+A*u-o*h,e[t+1]=A*d+l*h+o*c-s*u,e[t+2]=o*d+l*u+s*h-A*c,e[t+3]=l*d-s*c-A*h-o*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,s=Math.cos,A=Math.sin,o=s(n/2),l=s(i/2),c=s(r/2),h=A(n/2),u=A(i/2),d=A(r/2);switch(a){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],s=t[5],A=t[9],o=t[2],l=t[6],c=t[10],h=n+s+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(l-A)*e,this._y=(r-o)*e,this._z=(a-i)*e}else if(n>s&&n>c){const e=2*Math.sqrt(1+n-s-c);this._w=(l-A)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+o)/e}else if(s>c){const e=2*Math.sqrt(1+s-n-c);this._w=(r-o)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(A+l)/e}else{const e=2*Math.sqrt(1+c-n-s);this._w=(a-i)/e,this._x=(r+o)/e,this._y=(A+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(j(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,A=t._y,o=t._z,l=t._w;return this._x=n*l+a*s+i*o-r*A,this._y=i*l+a*A+r*s-n*o,this._z=r*l+a*o+n*A-i*s,this._w=a*l-n*s-i*A-r*o,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const A=1-s*s;if(A<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(A),l=Math.atan2(o,s),c=Math.sin((1-t)*l)/o,h=Math.sin(t*l)/o;return this._w=a*c+this._w*h,this._x=n*c+this._x*h,this._y=i*c+this._y*h,this._z=r*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Te{constructor(e=0,t=0,n=0){Te.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Be.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Be.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z,A=e.w,o=A*t+a*i-s*n,l=A*n+s*t-r*i,c=A*i+r*n-a*t,h=-r*t-a*n-s*i;return this.x=o*A+h*-r+l*-s-c*-a,this.y=l*A+h*-a+c*-r-o*-s,this.z=c*A+h*-s+o*-a-l*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,s=t.y,A=t.z;return this.x=i*A-r*s,this.y=r*a-n*A,this.z=n*s-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return De.copy(this).projectOnVector(e),this.sub(De)}reflect(e){return this.sub(De.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(j(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const De=new Te,Be=new Ie;class Pe{constructor(e=new Te(1/0,1/0,1/0),t=new Te(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let A=0,o=e.length;A<o;A+=3){const o=e[A],l=e[A+1],c=e[A+2];o<t&&(t=o),l<n&&(n=l),c<i&&(i=c),o>r&&(r=o),l>a&&(a=l),c>s&&(s=c)}return this.min.set(t,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let A=0,o=e.count;A<o;A++){const o=e.getX(A),l=e.getY(A),c=e.getZ(A);o<t&&(t=o),l<n&&(n=l),c<i&&(i=c),o>r&&(r=o),l>a&&(a=l),c>s&&(s=c)}return this.min.set(t,n,i),this.max.set(r,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Le.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,i=t.count;n<i;n++)Le.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint(Le)}else null===n.boundingBox&&n.computeBoundingBox(),Ne.copy(n.boundingBox),Ne.applyMatrix4(e.matrixWorld),this.union(Ne);const i=e.children;for(let e=0,n=i.length;e<n;e++)this.expandByObject(i[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Le),Le.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ke),Ve.subVectors(this.max,ke),Ue.subVectors(e.a,ke),Qe.subVectors(e.b,ke),Fe.subVectors(e.c,ke),Oe.subVectors(Qe,Ue),Ge.subVectors(Fe,Qe),ze.subVectors(Ue,Fe);let t=[0,-Oe.z,Oe.y,0,-Ge.z,Ge.y,0,-ze.z,ze.y,Oe.z,0,-Oe.x,Ge.z,0,-Ge.x,ze.z,0,-ze.x,-Oe.y,Oe.x,0,-Ge.y,Ge.x,0,-ze.y,ze.x,0];return!!Ye(t,Ue,Qe,Fe,Ve)&&(t=[1,0,0,0,1,0,0,0,1],!!Ye(t,Ue,Qe,Fe,Ve)&&(He.crossVectors(Oe,Ge),t=[He.x,He.y,He.z],Ye(t,Ue,Qe,Fe,Ve)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Le.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Le).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Re[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Re[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Re[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Re[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Re[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Re[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Re[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Re[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Re)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Re=[new Te,new Te,new Te,new Te,new Te,new Te,new Te,new Te],Le=new Te,Ne=new Pe,Ue=new Te,Qe=new Te,Fe=new Te,Oe=new Te,Ge=new Te,ze=new Te,ke=new Te,Ve=new Te,He=new Te,We=new Te;function Ye(e,t,n,i,r){for(let a=0,s=e.length-3;a<=s;a+=3){We.fromArray(e,a);const s=r.x*Math.abs(We.x)+r.y*Math.abs(We.y)+r.z*Math.abs(We.z),A=t.dot(We),o=n.dot(We),l=i.dot(We);if(Math.max(-Math.max(A,o,l),Math.min(A,o,l))>s)return!1}return!0}const je=new Pe,Xe=new Te,Je=new Te;class qe{constructor(e=new Te,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):je.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Xe.subVectors(e,this.center);const t=Xe.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(Xe,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Je.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Xe.copy(e.center).add(Je)),this.expandByPoint(Xe.copy(e.center).sub(Je))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ke=new Te,Ze=new Te,$e=new Te,et=new Te,tt=new Te,nt=new Te,it=new Te;class rt{constructor(e=new Te,t=new Te(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ke)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ke.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ke.copy(this.direction).multiplyScalar(t).add(this.origin),Ke.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ze.copy(e).add(t).multiplyScalar(.5),$e.copy(t).sub(e).normalize(),et.copy(this.origin).sub(Ze);const r=.5*e.distanceTo(t),a=-this.direction.dot($e),s=et.dot(this.direction),A=-et.dot($e),o=et.lengthSq(),l=Math.abs(1-a*a);let c,h,u,d;if(l>0)if(c=a*A-s,h=a*s-A,d=r*l,c>=0)if(h>=-d)if(h<=d){const e=1/l;c*=e,h*=e,u=c*(c+a*h+2*s)+h*(a*c+h+2*A)+o}else h=r,c=Math.max(0,-(a*h+s)),u=-c*c+h*(h+2*A)+o;else h=-r,c=Math.max(0,-(a*h+s)),u=-c*c+h*(h+2*A)+o;else h<=-d?(c=Math.max(0,-(-a*r+s)),h=c>0?-r:Math.min(Math.max(-r,-A),r),u=-c*c+h*(h+2*A)+o):h<=d?(c=0,h=Math.min(Math.max(-r,-A),r),u=h*(h+2*A)+o):(c=Math.max(0,-(a*r+s)),h=c>0?r:Math.min(Math.max(-r,-A),r),u=-c*c+h*(h+2*A)+o);else h=a>0?-r:r,c=Math.max(0,-(a*h+s)),u=-c*c+h*(h+2*A)+o;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),i&&i.copy($e).multiplyScalar(h).add(Ze),u}intersectSphere(e,t){Ke.subVectors(e.center,this.origin);const n=Ke.dot(this.direction),i=Ke.dot(Ke)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,A=n+a;return s<0&&A<0?null:s<0?this.at(A,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,s,A;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,h=this.origin;return o>=0?(n=(e.min.x-h.x)*o,i=(e.max.x-h.x)*o):(n=(e.max.x-h.x)*o,i=(e.min.x-h.x)*o),l>=0?(r=(e.min.y-h.y)*l,a=(e.max.y-h.y)*l):(r=(e.max.y-h.y)*l,a=(e.min.y-h.y)*l),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),c>=0?(s=(e.min.z-h.z)*c,A=(e.max.z-h.z)*c):(s=(e.max.z-h.z)*c,A=(e.min.z-h.z)*c),n>A||s>i?null:((s>n||n!=n)&&(n=s),(A<i||i!=i)&&(i=A),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,Ke)}intersectTriangle(e,t,n,i,r){tt.subVectors(t,e),nt.subVectors(n,e),it.crossVectors(tt,nt);let a,s=this.direction.dot(it);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}et.subVectors(this.origin,e);const A=a*this.direction.dot(nt.crossVectors(et,nt));if(A<0)return null;const o=a*this.direction.dot(tt.cross(et));if(o<0)return null;if(A+o>s)return null;const l=-a*et.dot(it);return l<0?null:this.at(l/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class at{constructor(){at.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,s,A,o,l,c,h,u,d,p,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=A,g[2]=o,g[6]=l,g[10]=c,g[14]=h,g[3]=u,g[7]=d,g[11]=p,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new at).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/st.setFromMatrixColumn(e,0).length(),r=1/st.setFromMatrixColumn(e,1).length(),a=1/st.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),s=Math.sin(n),A=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){const e=a*l,n=a*c,i=s*l,r=s*c;t[0]=A*l,t[4]=-A*c,t[8]=o,t[1]=n+i*o,t[5]=e-r*o,t[9]=-s*A,t[2]=r-e*o,t[6]=i+n*o,t[10]=a*A}else if("YXZ"===e.order){const e=A*l,n=A*c,i=o*l,r=o*c;t[0]=e+r*s,t[4]=i*s-n,t[8]=a*o,t[1]=a*c,t[5]=a*l,t[9]=-s,t[2]=n*s-i,t[6]=r+e*s,t[10]=a*A}else if("ZXY"===e.order){const e=A*l,n=A*c,i=o*l,r=o*c;t[0]=e-r*s,t[4]=-a*c,t[8]=i+n*s,t[1]=n+i*s,t[5]=a*l,t[9]=r-e*s,t[2]=-a*o,t[6]=s,t[10]=a*A}else if("ZYX"===e.order){const e=a*l,n=a*c,i=s*l,r=s*c;t[0]=A*l,t[4]=i*o-n,t[8]=e*o+r,t[1]=A*c,t[5]=r*o+e,t[9]=n*o-i,t[2]=-o,t[6]=s*A,t[10]=a*A}else if("YZX"===e.order){const e=a*A,n=a*o,i=s*A,r=s*o;t[0]=A*l,t[4]=r-e*c,t[8]=i*c+n,t[1]=c,t[5]=a*l,t[9]=-s*l,t[2]=-o*l,t[6]=n*c+i,t[10]=e-r*c}else if("XZY"===e.order){const e=a*A,n=a*o,i=s*A,r=s*o;t[0]=A*l,t[4]=-c,t[8]=o*l,t[1]=e*c+r,t[5]=a*l,t[9]=n*c-i,t[2]=i*c-n,t[6]=s*l,t[10]=r*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ot,e,lt)}lookAt(e,t,n){const i=this.elements;return ut.subVectors(e,t),0===ut.lengthSq()&&(ut.z=1),ut.normalize(),ct.crossVectors(n,ut),0===ct.lengthSq()&&(1===Math.abs(n.z)?ut.x+=1e-4:ut.z+=1e-4,ut.normalize(),ct.crossVectors(n,ut)),ct.normalize(),ht.crossVectors(ut,ct),i[0]=ct.x,i[4]=ht.x,i[8]=ut.x,i[1]=ct.y,i[5]=ht.y,i[9]=ut.y,i[2]=ct.z,i[6]=ht.z,i[10]=ut.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[4],A=n[8],o=n[12],l=n[1],c=n[5],h=n[9],u=n[13],d=n[2],p=n[6],m=n[10],g=n[14],f=n[3],_=n[7],v=n[11],x=n[15],y=i[0],C=i[4],M=i[8],w=i[12],b=i[1],E=i[5],S=i[9],I=i[13],T=i[2],D=i[6],B=i[10],P=i[14],R=i[3],L=i[7],N=i[11],U=i[15];return r[0]=a*y+s*b+A*T+o*R,r[4]=a*C+s*E+A*D+o*L,r[8]=a*M+s*S+A*B+o*N,r[12]=a*w+s*I+A*P+o*U,r[1]=l*y+c*b+h*T+u*R,r[5]=l*C+c*E+h*D+u*L,r[9]=l*M+c*S+h*B+u*N,r[13]=l*w+c*I+h*P+u*U,r[2]=d*y+p*b+m*T+g*R,r[6]=d*C+p*E+m*D+g*L,r[10]=d*M+p*S+m*B+g*N,r[14]=d*w+p*I+m*P+g*U,r[3]=f*y+_*b+v*T+x*R,r[7]=f*C+_*E+v*D+x*L,r[11]=f*M+_*S+v*B+x*N,r[15]=f*w+_*I+v*P+x*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],A=e[9],o=e[13],l=e[2],c=e[6],h=e[10],u=e[14];return e[3]*(+r*A*c-i*o*c-r*s*h+n*o*h+i*s*u-n*A*u)+e[7]*(+t*A*u-t*o*h+r*a*h-i*a*u+i*o*l-r*A*l)+e[11]*(+t*o*c-t*s*u-r*a*c+n*a*u+r*s*l-n*o*l)+e[15]*(-i*s*l-t*A*c+t*s*h+i*a*c-n*a*h+n*A*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],A=e[6],o=e[7],l=e[8],c=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],f=c*m*o-p*h*o+p*A*u-s*m*u-c*A*g+s*h*g,_=d*h*o-l*m*o-d*A*u+a*m*u+l*A*g-a*h*g,v=l*p*o-d*c*o+d*s*u-a*p*u-l*s*g+a*c*g,x=d*c*A-l*p*A-d*s*h+a*p*h+l*s*m-a*c*m,y=t*f+n*_+i*v+r*x;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/y;return e[0]=f*C,e[1]=(p*h*r-c*m*r-p*i*u+n*m*u+c*i*g-n*h*g)*C,e[2]=(s*m*r-p*A*r+p*i*o-n*m*o-s*i*g+n*A*g)*C,e[3]=(c*A*r-s*h*r-c*i*o+n*h*o+s*i*u-n*A*u)*C,e[4]=_*C,e[5]=(l*m*r-d*h*r+d*i*u-t*m*u-l*i*g+t*h*g)*C,e[6]=(d*A*r-a*m*r-d*i*o+t*m*o+a*i*g-t*A*g)*C,e[7]=(a*h*r-l*A*r+l*i*o-t*h*o-a*i*u+t*A*u)*C,e[8]=v*C,e[9]=(d*c*r-l*p*r-d*n*u+t*p*u+l*n*g-t*c*g)*C,e[10]=(a*p*r-d*s*r+d*n*o-t*p*o-a*n*g+t*s*g)*C,e[11]=(l*s*r-a*c*r-l*n*o+t*c*o+a*n*u-t*s*u)*C,e[12]=x*C,e[13]=(l*p*i-d*c*i+d*n*h-t*p*h-l*n*m+t*c*m)*C,e[14]=(d*s*i-a*p*i-d*n*A+t*p*A+a*n*m-t*s*m)*C,e[15]=(a*c*i-l*s*i+l*n*A-t*c*A-a*n*h+t*s*h)*C,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,s=e.y,A=e.z,o=r*a,l=r*s;return this.set(o*a+n,o*s-i*A,o*A+i*s,0,o*s+i*A,l*s+n,l*A-i*a,0,o*A-i*s,l*A+i*a,r*A*A+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,s=t._z,A=t._w,o=r+r,l=a+a,c=s+s,h=r*o,u=r*l,d=r*c,p=a*l,m=a*c,g=s*c,f=A*o,_=A*l,v=A*c,x=n.x,y=n.y,C=n.z;return i[0]=(1-(p+g))*x,i[1]=(u+v)*x,i[2]=(d-_)*x,i[3]=0,i[4]=(u-v)*y,i[5]=(1-(h+g))*y,i[6]=(m+f)*y,i[7]=0,i[8]=(d+_)*C,i[9]=(m-f)*C,i[10]=(1-(h+p))*C,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=st.set(i[0],i[1],i[2]).length();const a=st.set(i[4],i[5],i[6]).length(),s=st.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],At.copy(this);const A=1/r,o=1/a,l=1/s;return At.elements[0]*=A,At.elements[1]*=A,At.elements[2]*=A,At.elements[4]*=o,At.elements[5]*=o,At.elements[6]*=o,At.elements[8]*=l,At.elements[9]*=l,At.elements[10]*=l,t.setFromRotationMatrix(At),n.x=r,n.y=a,n.z=s,this}makePerspective(e,t,n,i,r,a){const s=this.elements,A=2*r/(t-e),o=2*r/(n-i),l=(t+e)/(t-e),c=(n+i)/(n-i),h=-(a+r)/(a-r),u=-2*a*r/(a-r);return s[0]=A,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=c,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=u,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,a){const s=this.elements,A=1/(t-e),o=1/(n-i),l=1/(a-r),c=(t+e)*A,h=(n+i)*o,u=(a+r)*l;return s[0]=2*A,s[4]=0,s[8]=0,s[12]=-c,s[1]=0,s[5]=2*o,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-u,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const st=new Te,At=new at,ot=new Te(0,0,0),lt=new Te(1,1,1),ct=new Te,ht=new Te,ut=new Te,dt=new at,pt=new Ie;class mt{constructor(e=0,t=0,n=0,i=mt.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],s=i[8],A=i[1],o=i[5],l=i[9],c=i[2],h=i[6],u=i[10];switch(t){case"XYZ":this._y=Math.asin(j(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-j(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,u),this._z=Math.atan2(A,o)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(j(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-a,o)):(this._y=0,this._z=Math.atan2(A,r));break;case"ZYX":this._y=Math.asin(-j(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(A,r)):(this._x=0,this._z=Math.atan2(-a,o));break;case"YZX":this._z=Math.asin(j(A,-1,1)),Math.abs(A)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(s,u));break;case"XZY":this._z=Math.asin(-j(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return dt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(dt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return pt.setFromEuler(this),this.setFromQuaternion(pt,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}mt.DEFAULT_ORDER="XYZ";class gt{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let ft=0;const _t=new Te,vt=new Ie,xt=new at,yt=new Te,Ct=new Te,Mt=new Te,wt=new Ie,bt=new Te(1,0,0),Et=new Te(0,1,0),St=new Te(0,0,1),It={type:"added"},Tt={type:"removed"};class Dt extends z{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ft++}),this.uuid=Y(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Dt.DEFAULT_UP.clone();const e=new Te,t=new mt,n=new Ie,i=new Te(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new at},normalMatrix:{value:new ne}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=Dt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new gt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return vt.setFromAxisAngle(e,t),this.quaternion.multiply(vt),this}rotateOnWorldAxis(e,t){return vt.setFromAxisAngle(e,t),this.quaternion.premultiply(vt),this}rotateX(e){return this.rotateOnAxis(bt,e)}rotateY(e){return this.rotateOnAxis(Et,e)}rotateZ(e){return this.rotateOnAxis(St,e)}translateOnAxis(e,t){return _t.copy(e).applyQuaternion(this.quaternion),this.position.add(_t.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(bt,e)}translateY(e){return this.translateOnAxis(Et,e)}translateZ(e){return this.translateOnAxis(St,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(xt.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?yt.copy(e):yt.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ct.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?xt.lookAt(Ct,yt,this.up):xt.lookAt(yt,Ct,this.up),this.quaternion.setFromRotationMatrix(xt),i&&(xt.extractRotation(i.matrixWorld),vt.setFromRotationMatrix(xt),this.quaternion.premultiply(vt.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(It)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Tt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Tt)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),xt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),xt.multiply(e.parent.matrixWorld)),e.applyMatrix4(xt),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(e,t);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,e,Mt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,wt,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const i=t[n];!0!==i.matrixWorldAutoUpdate&&!0!==e||i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),s=a(e.images),A=a(e.shapes),o=a(e.skeletons),l=a(e.animations),c=a(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),A.length>0&&(n.shapes=A),o.length>0&&(n.skeletons=o),l.length>0&&(n.animations=l),c.length>0&&(n.nodes=c)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Dt.DEFAULT_UP=new Te(0,1,0),Dt.DEFAULT_MATRIX_AUTO_UPDATE=!0,Dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Bt=new Te,Pt=new Te,Rt=new Te,Lt=new Te,Nt=new Te,Ut=new Te,Qt=new Te,Ft=new Te,Ot=new Te,Gt=new Te;class zt{constructor(e=new Te,t=new Te,n=new Te){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Bt.subVectors(e,t),i.cross(Bt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Bt.subVectors(i,t),Pt.subVectors(n,t),Rt.subVectors(e,t);const a=Bt.dot(Bt),s=Bt.dot(Pt),A=Bt.dot(Rt),o=Pt.dot(Pt),l=Pt.dot(Rt),c=a*o-s*s;if(0===c)return r.set(-2,-1,-1);const h=1/c,u=(o*A-s*l)*h,d=(a*l-s*A)*h;return r.set(1-u-d,d,u)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Lt),Lt.x>=0&&Lt.y>=0&&Lt.x+Lt.y<=1}static getUV(e,t,n,i,r,a,s,A){return this.getBarycoord(e,t,n,i,Lt),A.set(0,0),A.addScaledVector(r,Lt.x),A.addScaledVector(a,Lt.y),A.addScaledVector(s,Lt.z),A}static isFrontFacing(e,t,n,i){return Bt.subVectors(n,t),Pt.subVectors(e,t),Bt.cross(Pt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bt.subVectors(this.c,this.b),Pt.subVectors(this.a,this.b),.5*Bt.cross(Pt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return zt.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return zt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,s;Nt.subVectors(i,n),Ut.subVectors(r,n),Ft.subVectors(e,n);const A=Nt.dot(Ft),o=Ut.dot(Ft);if(A<=0&&o<=0)return t.copy(n);Ot.subVectors(e,i);const l=Nt.dot(Ot),c=Ut.dot(Ot);if(l>=0&&c<=l)return t.copy(i);const h=A*c-l*o;if(h<=0&&A>=0&&l<=0)return a=A/(A-l),t.copy(n).addScaledVector(Nt,a);Gt.subVectors(e,r);const u=Nt.dot(Gt),d=Ut.dot(Gt);if(d>=0&&u<=d)return t.copy(r);const p=u*o-A*d;if(p<=0&&o>=0&&d<=0)return s=o/(o-d),t.copy(n).addScaledVector(Ut,s);const m=l*d-u*c;if(m<=0&&c-l>=0&&u-d>=0)return Qt.subVectors(r,i),s=(c-l)/(c-l+(u-d)),t.copy(i).addScaledVector(Qt,s);const g=1/(m+p+h);return a=p*g,s=h*g,t.copy(n).addScaledVector(Nt,a).addScaledVector(Ut,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let kt=0;class Vt extends z{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:kt++}),this.uuid=Y(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=o,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Q,this.stencilZFail=Q,this.stencilZPass=Q,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(n.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Ht extends Vt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Wt=new Te,Yt=new te;class jt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=F,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Yt.fromBufferAttribute(this,t),Yt.applyMatrix3(e),this.setXY(t,Yt.x,Yt.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix3(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix4(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyNormalMatrix(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.transformDirection(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Z(t,this.array)),t}setX(e,t){return this.normalized&&(t=$(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Z(t,this.array)),t}setY(e,t){return this.normalized&&(t=$(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Z(t,this.array)),t}setZ(e,t){return this.normalized&&(t=$(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Z(t,this.array)),t}setW(e,t){return this.normalized&&(t=$(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=$(t,this.array),n=$(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=$(t,this.array),n=$(n,this.array),i=$(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=$(t,this.array),n=$(n,this.array),i=$(i,this.array),r=$(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==F&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Xt extends jt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Jt extends jt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class qt extends jt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Kt=0;const Zt=new at,$t=new Dt,en=new Te,tn=new Pe,nn=new Pe,rn=new Te;class an extends z{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Kt++}),this.uuid=Y(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(re(e)?Jt:Xt)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new ne).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Zt.makeRotationFromQuaternion(e),this.applyMatrix4(Zt),this}rotateX(e){return Zt.makeRotationX(e),this.applyMatrix4(Zt),this}rotateY(e){return Zt.makeRotationY(e),this.applyMatrix4(Zt),this}rotateZ(e){return Zt.makeRotationZ(e),this.applyMatrix4(Zt),this}translate(e,t,n){return Zt.makeTranslation(e,t,n),this.applyMatrix4(Zt),this}scale(e,t,n){return Zt.makeScale(e,t,n),this.applyMatrix4(Zt),this}lookAt(e){return $t.lookAt(e),$t.updateMatrix(),this.applyMatrix4($t.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(en).negate(),this.translate(en.x,en.y,en.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new qt(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Pe);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Te(-1/0,-1/0,-1/0),new Te(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];tn.setFromBufferAttribute(n),this.morphTargetsRelative?(rn.addVectors(this.boundingBox.min,tn.min),this.boundingBox.expandByPoint(rn),rn.addVectors(this.boundingBox.max,tn.max),this.boundingBox.expandByPoint(rn)):(this.boundingBox.expandByPoint(tn.min),this.boundingBox.expandByPoint(tn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new qe);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Te,1/0);if(e){const n=this.boundingSphere.center;if(tn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];nn.setFromBufferAttribute(n),this.morphTargetsRelative?(rn.addVectors(tn.min,nn.min),tn.expandByPoint(rn),rn.addVectors(tn.max,nn.max),tn.expandByPoint(rn)):(tn.expandByPoint(nn.min),tn.expandByPoint(nn.max))}tn.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)rn.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(rn));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],s=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)rn.fromBufferAttribute(a,t),s&&(en.fromBufferAttribute(e,t),rn.add(en)),i=Math.max(i,n.distanceToSquared(rn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,s=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new jt(new Float32Array(4*s),4));const A=this.getAttribute("tangent").array,o=[],l=[];for(let e=0;e<s;e++)o[e]=new Te,l[e]=new Te;const c=new Te,h=new Te,u=new Te,d=new te,p=new te,m=new te,g=new Te,f=new Te;function _(e,t,n){c.fromArray(i,3*e),h.fromArray(i,3*t),u.fromArray(i,3*n),d.fromArray(a,2*e),p.fromArray(a,2*t),m.fromArray(a,2*n),h.sub(c),u.sub(c),p.sub(d),m.sub(d);const r=1/(p.x*m.y-m.x*p.y);isFinite(r)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(u,-p.y).multiplyScalar(r),f.copy(u).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(r),o[e].add(g),o[t].add(g),o[n].add(g),l[e].add(f),l[t].add(f),l[n].add(f))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){const t=v[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)_(n[e+0],n[e+1],n[e+2])}const x=new Te,y=new Te,C=new Te,M=new Te;function w(e){C.fromArray(r,3*e),M.copy(C);const t=o[e];x.copy(t),x.sub(C.multiplyScalar(C.dot(t))).normalize(),y.crossVectors(M,t);const n=y.dot(l[e])<0?-1:1;A[4*e]=x.x,A[4*e+1]=x.y,A[4*e+2]=x.z,A[4*e+3]=n}for(let e=0,t=v.length;e<t;++e){const t=v[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)w(n[e+0]),w(n[e+1]),w(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new jt(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new Te,r=new Te,a=new Te,s=new Te,A=new Te,o=new Te,l=new Te,c=new Te;if(e)for(let h=0,u=e.count;h<u;h+=3){const u=e.getX(h+0),d=e.getX(h+1),p=e.getX(h+2);i.fromBufferAttribute(t,u),r.fromBufferAttribute(t,d),a.fromBufferAttribute(t,p),l.subVectors(a,r),c.subVectors(i,r),l.cross(c),s.fromBufferAttribute(n,u),A.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),s.add(l),A.add(l),o.add(l),n.setXYZ(u,s.x,s.y,s.z),n.setXYZ(d,A.x,A.y,A.z),n.setXYZ(p,o.x,o.y,o.z)}else for(let e=0,s=t.count;e<s;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),l.subVectors(a,r),c.subVectors(i,r),l.cross(c),n.setXYZ(e+0,l.x,l.y,l.z),n.setXYZ(e+1,l.x,l.y,l.z),n.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)rn.fromBufferAttribute(e,t),rn.normalize(),e.setXYZ(t,rn.x,rn.y,rn.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let s=0,A=0;for(let r=0,o=t.length;r<o;r++){s=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*i;for(let e=0;e<i;e++)a[A++]=n[s++]}return new jt(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new an,n=this.index.array,i=this.attributes;for(const r in i){const a=e(i[r],n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let t=0,i=s.length;t<i;t++){const i=e(s[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());const A=e.boundingSphere;return null!==A&&(this.boundingSphere=A.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const sn=new at,An=new rt,on=new qe,ln=new Te,cn=new Te,hn=new Te,un=new Te,dn=new Te,pn=new te,mn=new te,gn=new te,fn=new Te,_n=new Te;class vn extends Dt{constructor(e=new an,t=new Ht){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const s=this.morphTargetInfluences;if(r&&s){dn.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=s[n],A=r[n];0!==i&&(un.fromBufferAttribute(A,e),a?dn.addScaledVector(un,i):dn.addScaledVector(un.sub(t),i))}t.add(dn)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),on.copy(n.boundingSphere),on.applyMatrix4(r),!1===e.ray.intersectsSphere(on))return;if(sn.copy(r).invert(),An.copy(e.ray).applyMatrix4(sn),null!==n.boundingBox&&!1===An.intersectsBox(n.boundingBox))return;let a;const s=n.index,A=n.attributes.position,o=n.attributes.uv,l=n.attributes.uv2,c=n.groups,h=n.drawRange;if(null!==s)if(Array.isArray(i))for(let n=0,r=c.length;n<r;n++){const r=c[n],A=i[r.materialIndex];for(let n=Math.max(r.start,h.start),i=Math.min(s.count,Math.min(r.start+r.count,h.start+h.count));n<i;n+=3){const i=s.getX(n),c=s.getX(n+1),h=s.getX(n+2);a=xn(this,A,e,An,o,l,i,c,h),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,t.push(a))}}else{for(let n=Math.max(0,h.start),r=Math.min(s.count,h.start+h.count);n<r;n+=3){const r=s.getX(n),A=s.getX(n+1),c=s.getX(n+2);a=xn(this,i,e,An,o,l,r,A,c),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}else if(void 0!==A)if(Array.isArray(i))for(let n=0,r=c.length;n<r;n++){const r=c[n],s=i[r.materialIndex];for(let n=Math.max(r.start,h.start),i=Math.min(A.count,Math.min(r.start+r.count,h.start+h.count));n<i;n+=3){a=xn(this,s,e,An,o,l,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,t.push(a))}}else{for(let n=Math.max(0,h.start),r=Math.min(A.count,h.start+h.count);n<r;n+=3){a=xn(this,i,e,An,o,l,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}}}function xn(e,t,n,i,r,a,s,A,o){e.getVertexPosition(s,ln),e.getVertexPosition(A,cn),e.getVertexPosition(o,hn);const l=function(e,t,n,i,r,a,s,A){let o;if(o=1===t.side?i.intersectTriangle(s,a,r,!0,A):i.intersectTriangle(r,a,s,0===t.side,A),null===o)return null;_n.copy(A),_n.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(_n);return l<n.near||l>n.far?null:{distance:l,point:_n.clone(),object:e}}(e,t,n,i,ln,cn,hn,fn);if(l){r&&(pn.fromBufferAttribute(r,s),mn.fromBufferAttribute(r,A),gn.fromBufferAttribute(r,o),l.uv=zt.getUV(fn,ln,cn,hn,pn,mn,gn,new te)),a&&(pn.fromBufferAttribute(a,s),mn.fromBufferAttribute(a,A),gn.fromBufferAttribute(a,o),l.uv2=zt.getUV(fn,ln,cn,hn,pn,mn,gn,new te));const e={a:s,b:A,c:o,normal:new Te,materialIndex:0};zt.getNormal(ln,cn,hn,e.normal),l.face=e}return l}class yn extends an{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const A=[],o=[],l=[],c=[];let h=0,u=0;function d(e,t,n,i,r,a,d,p,m,g,f){const _=a/m,v=d/g,x=a/2,y=d/2,C=p/2,M=m+1,w=g+1;let b=0,E=0;const S=new Te;for(let a=0;a<w;a++){const s=a*v-y;for(let A=0;A<M;A++){const h=A*_-x;S[e]=h*i,S[t]=s*r,S[n]=C,o.push(S.x,S.y,S.z),S[e]=0,S[t]=0,S[n]=p>0?1:-1,l.push(S.x,S.y,S.z),c.push(A/m),c.push(1-a/g),b+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+M*e,i=h+t+M*(e+1),r=h+(t+1)+M*(e+1),a=h+(t+1)+M*e;A.push(n,i,a),A.push(i,r,a),E+=6}s.addGroup(u,E,f),u+=E,h+=b}d("z","y","x",-1,-1,n,t,e,a,r,0),d("z","y","x",1,-1,n,t,-e,a,r,1),d("x","z","y",1,1,e,n,t,i,a,2),d("x","z","y",1,-1,e,n,-t,i,a,3),d("x","y","z",1,-1,e,t,n,i,r,4),d("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(A),this.setAttribute("position",new qt(o,3)),this.setAttribute("normal",new qt(l,3)),this.setAttribute("uv",new qt(c,2))}static fromJSON(e){return new yn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Cn(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Mn(e){const t={};for(let n=0;n<e.length;n++){const i=Cn(e[n]);for(const e in i)t[e]=i[e]}return t}function wn(e){return null===e.getRenderTarget()&&e.outputEncoding===L?N:U}const bn={clone:Cn,merge:Mn};class En extends Vt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Cn(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Sn extends Dt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class In extends Sn{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*W*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*H*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*W*Math.atan(Math.tan(.5*H*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*H*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/s,i*=a.width/e,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Tn=-90;class Dn extends Dt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new In(Tn,1,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new In(Tn,1,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const a=new In(Tn,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const s=new In(Tn,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(0,-1,0),this.add(s);const A=new In(Tn,1,e,t);A.layers=this.layers,A.up.set(0,1,0),A.lookAt(0,0,1),this.add(A);const o=new In(Tn,1,e,t);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(0,0,-1),this.add(o)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,A,o]=this.children,l=e.getRenderTarget(),c=e.toneMapping,h=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,A),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,o),e.setRenderTarget(l),e.toneMapping=c,e.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class Bn extends Ce{constructor(e,t,n,i,r,a,s,A,o,c){super(e=void 0!==e?e:[],t=void 0!==t?t:l,n,i,r,a,s,A,o,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Pn extends we{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Bn(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:_}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new yn(5,5,5),r=new En({name:"CubemapFromEquirect",uniforms:Cn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const a=new vn(i,r),s=t.minFilter;t.minFilter===v&&(t.minFilter=_);return new Dn(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}const Rn=new Te,Ln=new Te,Nn=new ne;class Un{constructor(e=new Te(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Rn.subVectors(n,t).cross(Ln.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Rn),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Nn.getNormalMatrix(e),i=this.coplanarPoint(Rn).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Qn=new qe,Fn=new Te;class On{constructor(e=new Un,t=new Un,n=new Un,i=new Un,r=new Un,a=new Un){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],A=n[4],o=n[5],l=n[6],c=n[7],h=n[8],u=n[9],d=n[10],p=n[11],m=n[12],g=n[13],f=n[14],_=n[15];return t[0].setComponents(s-i,c-A,p-h,_-m).normalize(),t[1].setComponents(s+i,c+A,p+h,_+m).normalize(),t[2].setComponents(s+r,c+o,p+u,_+g).normalize(),t[3].setComponents(s-r,c-o,p-u,_-g).normalize(),t[4].setComponents(s-a,c-l,p-d,_-f).normalize(),t[5].setComponents(s+a,c+l,p+d,_+f).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Qn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Qn)}intersectsSprite(e){return Qn.center.set(0,0,0),Qn.radius=.7071067811865476,Qn.applyMatrix4(e.matrixWorld),this.intersectsSphere(Qn)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(n)<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Fn.x=i.normal.x>0?e.max.x:e.min.x,Fn.y=i.normal.y>0?e.max.y:e.min.y,Fn.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Fn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Gn(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function zn(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=i.get(t);void 0===a?i.set(t,function(t,i){const r=t.array,a=t.usage,s=e.createBuffer();let A;if(e.bindBuffer(i,s),e.bufferData(i,r,a),t.onUploadCallback(),r instanceof Float32Array)A=5126;else if(r instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");A=5131}else A=5123;else if(r instanceof Int16Array)A=5122;else if(r instanceof Uint32Array)A=5125;else if(r instanceof Int32Array)A=5124;else if(r instanceof Int8Array)A=5120;else if(r instanceof Uint8Array)A=5121;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);A=5121}return{buffer:s,type:A,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(!function(t,i,r){const a=i.array,s=i.updateRange;e.bindBuffer(r,t),-1===s.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1),i.onUploadCallback()}(a.buffer,t,r),a.version=t.version)}}}class kn extends an{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,s=Math.floor(n),A=Math.floor(i),o=s+1,l=A+1,c=e/s,h=t/A,u=[],d=[],p=[],m=[];for(let e=0;e<l;e++){const t=e*h-a;for(let n=0;n<o;n++){const i=n*c-r;d.push(i,-t,0),p.push(0,0,1),m.push(n/s),m.push(1-e/A)}}for(let e=0;e<A;e++)for(let t=0;t<s;t++){const n=t+o*e,i=t+o*(e+1),r=t+1+o*(e+1),a=t+1+o*e;u.push(n,i,a),u.push(i,r,a)}this.setIndex(u),this.setAttribute("position",new qt(d,3)),this.setAttribute("normal",new qt(p,3)),this.setAttribute("uv",new qt(m,2))}static fromJSON(e){return new kn(e.width,e.height,e.widthSegments,e.heightSegments)}}const Vn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Hn={common:{diffuse:{value:new ge(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new ne},uv2Transform:{value:new ne},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new te(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ge(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ne}},sprite:{diffuse:{value:new ge(16777215)},opacity:{value:1},center:{value:new te(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ne}}},Wn={basic:{uniforms:Mn([Hn.common,Hn.specularmap,Hn.envmap,Hn.aomap,Hn.lightmap,Hn.fog]),vertexShader:Vn.meshbasic_vert,fragmentShader:Vn.meshbasic_frag},lambert:{uniforms:Mn([Hn.common,Hn.specularmap,Hn.envmap,Hn.aomap,Hn.lightmap,Hn.emissivemap,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,Hn.fog,Hn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Vn.meshlambert_vert,fragmentShader:Vn.meshlambert_frag},phong:{uniforms:Mn([Hn.common,Hn.specularmap,Hn.envmap,Hn.aomap,Hn.lightmap,Hn.emissivemap,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,Hn.fog,Hn.lights,{emissive:{value:new ge(0)},specular:{value:new ge(1118481)},shininess:{value:30}}]),vertexShader:Vn.meshphong_vert,fragmentShader:Vn.meshphong_frag},standard:{uniforms:Mn([Hn.common,Hn.envmap,Hn.aomap,Hn.lightmap,Hn.emissivemap,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,Hn.roughnessmap,Hn.metalnessmap,Hn.fog,Hn.lights,{emissive:{value:new ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Vn.meshphysical_vert,fragmentShader:Vn.meshphysical_frag},toon:{uniforms:Mn([Hn.common,Hn.aomap,Hn.lightmap,Hn.emissivemap,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,Hn.gradientmap,Hn.fog,Hn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Vn.meshtoon_vert,fragmentShader:Vn.meshtoon_frag},matcap:{uniforms:Mn([Hn.common,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,Hn.fog,{matcap:{value:null}}]),vertexShader:Vn.meshmatcap_vert,fragmentShader:Vn.meshmatcap_frag},points:{uniforms:Mn([Hn.points,Hn.fog]),vertexShader:Vn.points_vert,fragmentShader:Vn.points_frag},dashed:{uniforms:Mn([Hn.common,Hn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Vn.linedashed_vert,fragmentShader:Vn.linedashed_frag},depth:{uniforms:Mn([Hn.common,Hn.displacementmap]),vertexShader:Vn.depth_vert,fragmentShader:Vn.depth_frag},normal:{uniforms:Mn([Hn.common,Hn.bumpmap,Hn.normalmap,Hn.displacementmap,{opacity:{value:1}}]),vertexShader:Vn.meshnormal_vert,fragmentShader:Vn.meshnormal_frag},sprite:{uniforms:Mn([Hn.sprite,Hn.fog]),vertexShader:Vn.sprite_vert,fragmentShader:Vn.sprite_frag},background:{uniforms:{uvTransform:{value:new ne},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Vn.background_vert,fragmentShader:Vn.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Vn.backgroundCube_vert,fragmentShader:Vn.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Vn.cube_vert,fragmentShader:Vn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Vn.equirect_vert,fragmentShader:Vn.equirect_frag},distanceRGBA:{uniforms:Mn([Hn.common,Hn.displacementmap,{referencePosition:{value:new Te},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Vn.distanceRGBA_vert,fragmentShader:Vn.distanceRGBA_frag},shadow:{uniforms:Mn([Hn.lights,Hn.fog,{color:{value:new ge(0)},opacity:{value:1}}]),vertexShader:Vn.shadow_vert,fragmentShader:Vn.shadow_frag}};Wn.physical={uniforms:Mn([Wn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new te(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ge(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new te},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ge(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ge(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Vn.meshphysical_vert,fragmentShader:Vn.meshphysical_frag};const Yn={r:0,b:0,g:0};function jn(e,t,n,i,r,a,s){const A=new ge(0);let o,l,c=!0===a?0:1,u=null,d=0,p=null;function m(t,n){t.getRGB(Yn,wn(e)),i.buffers.color.setClear(Yn.r,Yn.g,Yn.b,n,s)}return{getClearColor:function(){return A},setClearColor:function(e,t=1){A.set(e),c=t,m(A,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,m(A,c)},render:function(i,a){let s=!1,g=!0===a.isScene?a.background:null;if(g&&g.isTexture){g=(a.backgroundBlurriness>0?n:t).get(g)}const f=e.xr,_=f.getSession&&f.getSession();_&&"additive"===_.environmentBlendMode&&(g=null),null===g?m(A,c):g&&g.isColor&&(m(g,1),s=!0),(e.autoClear||s)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===h)?(void 0===l&&(l=new vn(new yn(1,1,1),new En({name:"BackgroundCubeMaterial",uniforms:Cn(Wn.backgroundCube.uniforms),vertexShader:Wn.backgroundCube.vertexShader,fragmentShader:Wn.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=a.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,l.material.toneMapped=g.encoding!==L,u===g&&d===g.version&&p===e.toneMapping||(l.material.needsUpdate=!0,u=g,d=g.version,p=e.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(void 0===o&&(o=new vn(new kn(2,2),new En({name:"BackgroundMaterial",uniforms:Cn(Wn.background.uniforms),vertexShader:Wn.background.vertexShader,fragmentShader:Wn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=g,o.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,o.material.toneMapped=g.encoding!==L,!0===g.matrixAutoUpdate&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),u===g&&d===g.version&&p===e.toneMapping||(o.material.needsUpdate=!0,u=g,d=g.version,p=e.toneMapping),o.layers.enableAll(),i.unshift(o,o.geometry,o.material,0,0,null))}}}function Xn(e,t,n,i){const r=e.getParameter(34921),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,A={},o=d(null);let l=o,c=!1;function h(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function u(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function p(){const e=l.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){g(e,0)}function g(n,r){const a=l.newAttributes,s=l.enabledAttributes,A=l.attributeDivisors;if(a[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),A[n]!==r){(i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),A[n]=r}}function f(){const t=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function _(t,n,r,a,s,A){!0!==i.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,n,r,a,s,A):e.vertexAttribIPointer(t,n,r,s,A)}function v(){x(),c=!0,l!==o&&(l=o,h(l.object))}function x(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function(r,o,u,v,x){let y=!1;if(s){const t=function(t,n,r){const s=!0===r.wireframe;let o=A[t.id];void 0===o&&(o={},A[t.id]=o);let l=o[n.id];void 0===l&&(l={},o[n.id]=l);let c=l[s];void 0===c&&(c=d(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),l[s]=c);return c}(v,u,o);l!==t&&(l=t,h(l.object)),y=function(e,t,n,i){const r=l.attributes,a=t.attributes;let s=0;const A=n.getAttributes();for(const t in A){if(A[t].location>=0){const n=r[t];let i=a[t];if(void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;s++}}return l.attributesNum!==s||l.index!==i}(r,v,u,x),y&&function(e,t,n,i){const r={},a=t.attributes;let s=0;const A=n.getAttributes();for(const t in A){if(A[t].location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[t]=i,s++}}l.attributes=r,l.attributesNum=s,l.index=i}(r,v,u,x)}else{const e=!0===o.wireframe;l.geometry===v.id&&l.program===u.id&&l.wireframe===e||(l.geometry=v.id,l.program=u.id,l.wireframe=e,y=!0)}null!==x&&n.update(x,34963),(y||c)&&(c=!1,function(r,a,s,A){if(!1===i.isWebGL2&&(r.isInstancedMesh||A.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const o=A.attributes,l=s.getAttributes(),c=a.defaultAttributeValues;for(const t in l){const i=l[t];if(i.location>=0){let a=o[t];if(void 0===a&&("instanceMatrix"===t&&r.instanceMatrix&&(a=r.instanceMatrix),"instanceColor"===t&&r.instanceColor&&(a=r.instanceColor)),void 0!==a){const t=a.normalized,s=a.itemSize,o=n.get(a);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,o=n.stride,u=a.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)g(i.location+e,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===A._maxInstanceCount&&(A._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<i.locationSize;e++)m(i.location+e);e.bindBuffer(34962,l);for(let e=0;e<i.locationSize;e++)_(i.location+e,s/i.locationSize,c,t,o*h,(u+s/i.locationSize*e)*h)}else{if(a.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)g(i.location+e,a.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===A._maxInstanceCount&&(A._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let e=0;e<i.locationSize;e++)m(i.location+e);e.bindBuffer(34962,l);for(let e=0;e<i.locationSize;e++)_(i.location+e,s/i.locationSize,c,t,s*h,s/i.locationSize*e*h)}}else if(void 0!==c){const n=c[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(i.location,n);break;case 3:e.vertexAttrib3fv(i.location,n);break;case 4:e.vertexAttrib4fv(i.location,n);break;default:e.vertexAttrib1fv(i.location,n)}}}}f()}(r,o,u,v),null!==x&&e.bindBuffer(34963,n.get(x).buffer))},reset:v,resetDefaultState:x,dispose:function(){v();for(const e in A){const t=A[e];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete A[e]}},releaseStatesOfGeometry:function(e){if(void 0===A[e.id])return;const t=A[e.id];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete A[e.id]},releaseStatesOfProgram:function(e){for(const t in A){const n=A[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)u(i[e].object),delete i[e];delete n[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:f}}function Jn(e,t,n,i){const r=i.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,i){e.drawArrays(a,t,i),n.update(i,a,1)},this.renderInstances=function(i,s,A){if(0===A)return;let o,l;if(r)o=e,l="drawArraysInstanced";else if(o=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===o)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[l](a,i,s,A),n.update(s,a,A)}}function qn(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext;let s=void 0!==n.precision?n.precision:"highp";const A=r(s);A!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",A,"instead."),s=A);const o=a||t.has("WEBGL_draw_buffers"),l=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),f=e.getParameter(36349),_=h>0,v=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:f,vertexTextures:_,floatFragmentTextures:v,floatVertexTextures:_&&v,maxSamples:a?e.getParameter(36183):0}}function Kn(e){const t=this;let n=null,i=0,r=!1,a=!1;const s=new Un,A=new ne,o={value:null,needsUpdate:!1};function l(e,n,i,r){const a=null!==e?e.length:0;let l=null;if(0!==a){if(l=o.value,!0!==r||null===l){const t=i+4*a,r=n.matrixWorldInverse;A.getNormalMatrix(r),(null===l||l.length<t)&&(l=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)s.copy(e[t]).applyMatrix4(r,A),s.normal.toArray(l,n),l[n+3]=s.constant}o.value=l,o.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,l}this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){a=!0,l(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=l(e,t,0)},this.setState=function(s,A,c){const h=s.clippingPlanes,u=s.clipIntersection,d=s.clipShadows,p=e.get(s);if(!r||null===h||0===h.length||a&&!d)a?l(null):function(){o.value!==n&&(o.value=n,o.needsUpdate=i>0);t.numPlanes=i,t.numIntersection=0}();else{const e=a?0:i,t=4*e;let r=p.clippingState||null;o.value=r,r=l(h,A,t,c);for(let e=0;e!==t;++e)r[e]=n[e];p.clippingState=r,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=e}}}function Zn(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=l:304===t&&(e.mapping=c),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(303===a||304===a){if(t.has(r)){return n(t.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const s=new Pn(a.height/2);return s.fromEquirectangularTexture(e,r),t.set(r,s),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}class $n extends Sn{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,s=i+t,A=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,s-=t*this.view.offsetY,A=s-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,A,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const ei=[.125,.215,.35,.446,.526,.582],ti=20,ni=new $n,ii=new ge;let ri=null;const ai=(1+Math.sqrt(5))/2,si=1/ai,Ai=[new Te(1,1,1),new Te(-1,1,1),new Te(1,1,-1),new Te(-1,1,-1),new Te(0,ai,si),new Te(0,ai,-si),new Te(si,0,ai),new Te(-si,0,ai),new Te(ai,si,0),new Te(-ai,si,0)];class oi{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){ri=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ui(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=hi(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ri),e.scissorTest=!1,ci(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===l||e.mapping===c?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ri=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:_,minFilter:_,generateMipmaps:!1,type:M,format:b,encoding:R,depthBuffer:!1},i=li(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=li(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let r=e;const a=e-4+1+ei.length;for(let s=0;s<a;s++){const a=Math.pow(2,r);n.push(a);let A=1/a;s>e-4?A=ei[s-e+4-1]:0===s&&(A=0),i.push(A);const o=1/(a-2),l=-o,c=1+o,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,m=2,g=1,f=new Float32Array(p*d*u),_=new Float32Array(m*d*u),v=new Float32Array(g*d*u);for(let e=0;e<u;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];f.set(i,p*d*e),_.set(h,m*d*e);const r=[e,e,e,e,e,e];v.set(r,g*d*e)}const x=new an;x.setAttribute("position",new jt(f,p)),x.setAttribute("uv",new jt(_,m)),x.setAttribute("faceIndex",new jt(v,g)),t.push(x),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(ti),r=new Te(0,1,0),a=new En({name:"SphericalGaussianBlur",defines:{n:ti,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:di(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(i,e,t)}return i}_compileMaterial(e){const t=new vn(this._lodPlanes[0],e);this._renderer.compile(t,ni)}_sceneToCubeUV(e,t,n,i){const r=new In(90,1,t,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],A=this._renderer,o=A.autoClear,l=A.toneMapping;A.getClearColor(ii),A.toneMapping=0,A.autoClear=!1;const c=new Ht({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new vn(new yn,c);let u=!1;const d=e.background;d?d.isColor&&(c.color.copy(d),e.background=null,u=!0):(c.color.copy(ii),u=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(r.up.set(0,a[t],0),r.lookAt(s[t],0,0)):1===n?(r.up.set(0,0,a[t]),r.lookAt(0,s[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,s[t]));const o=this._cubeSize;ci(i,n*o,t>2?o:0,o,o),A.setRenderTarget(i),u&&A.render(h,r),A.render(e,r)}h.geometry.dispose(),h.material.dispose(),A.toneMapping=l,A.autoClear=o,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===l||e.mapping===c;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=ui()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=hi());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new vn(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const s=this._cubeSize;ci(t,0,0,3*s,2*s),n.setRenderTarget(t),n.render(a,ni)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=Ai[(t-1)%Ai.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,s){const A=this._renderer,o=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new vn(this._lodPlanes[i],o),c=o.uniforms,h=this._sizeLods[n]-1,u=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,d=r/u,p=isFinite(r)?1+Math.floor(3*d):ti;p>ti&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<ti;++e){const t=e/d,n=Math.exp(-t*t/2);m.push(n),0===e?g+=n:e<p&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;c.envMap.value=e.texture,c.samples.value=p,c.weights.value=m,c.latitudinal.value="latitudinal"===a,s&&(c.poleAxis.value=s);const{_lodMax:f}=this;c.dTheta.value=u,c.mipInt.value=f-n;const _=this._sizeLods[i];ci(t,3*_*(i>f-4?i-f+4:0),4*(this._cubeSize-_),3*_,2*_),A.setRenderTarget(t),A.render(l,ni)}}function li(e,t,n){const i=new we(e,t,n);return i.texture.mapping=h,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function ci(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function hi(){return new En({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:di(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ui(){return new En({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:di(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function di(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function pi(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,s=303===a||304===a,A=a===l||a===c;if(s||A){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=t.get(r);return null===n&&(n=new oi(e)),i=s?n.fromEquirectangular(r,i):n.fromCubemap(r,i),t.set(r,i),i.texture}if(t.has(r))return t.get(r).texture;{const a=r.image;if(s&&a&&a.height>0||A&&a&&function(e){let t=0;const n=6;for(let i=0;i<n;i++)void 0!==e[i]&&t++;return t===n}(a)){null===n&&(n=new oi(e));const a=s?n.fromEquirectangular(r):n.fromCubemap(r);return t.set(r,a),r.addEventListener("dispose",i),a.texture}return null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function mi(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function gi(e,t,n,i){const r={},a=new WeakMap;function s(e){const A=e.target;null!==A.index&&t.remove(A.index);for(const e in A.attributes)t.remove(A.attributes[e]);A.removeEventListener("dispose",s),delete r[A.id];const o=a.get(A);o&&(t.remove(o),a.delete(A)),i.releaseStatesOfGeometry(A),!0===A.isInstancedBufferGeometry&&delete A._maxInstanceCount,n.memory.geometries--}function A(e){const n=[],i=e.index,r=e.attributes.position;let s=0;if(null!==i){const e=i.array;s=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{const e=r.array;s=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}const A=new(re(n)?Jt:Xt)(n,1);A.version=s;const o=a.get(e);o&&t.remove(o),a.set(e,A)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const i=e.morphAttributes;for(const e in i){const n=i[e];for(let e=0,i=n.length;e<i;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&A(e)}else A(e);return a.get(e)}}}function fi(e,t,n,i){const r=i.isWebGL2;let a,s,A;this.setMode=function(e){a=e},this.setIndex=function(e){s=e.type,A=e.bytesPerElement},this.render=function(t,i){e.drawElements(a,i,s,t*A),n.update(i,a,1)},this.renderInstances=function(i,o,l){if(0===l)return;let c,h;if(r)c=e,h="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](a,o,s,i*A,l),n.update(o,a,l)}}function _i(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function vi(e,t){return e[0]-t[0]}function xi(e,t){return Math.abs(t[1])-Math.abs(e[1])}function yi(e,t,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new Me,A=[];for(let e=0;e<8;e++)A[e]=[e,0];return{update:function(o,l,c,h){const u=o.morphTargetInfluences;if(!0===t.isWebGL2){const d=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,p=void 0!==d?d.length:0;let m=a.get(l);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();const _=void 0!==l.morphAttributes.position,v=void 0!==l.morphAttributes.normal,x=void 0!==l.morphAttributes.color,y=l.morphAttributes.position||[],M=l.morphAttributes.normal||[],w=l.morphAttributes.color||[];let b=0;!0===_&&(b=1),!0===v&&(b=2),!0===x&&(b=3);let E=l.attributes.position.count*b,S=1;E>t.maxTextureSize&&(S=Math.ceil(E/t.maxTextureSize),E=t.maxTextureSize);const I=new Float32Array(E*S*4*p),T=new be(I,E,S,p);T.type=C,T.needsUpdate=!0;const D=4*b;for(let P=0;P<p;P++){const R=y[P],L=M[P],N=w[P],U=E*S*4*P;for(let Q=0;Q<R.count;Q++){const F=Q*D;!0===_&&(s.fromBufferAttribute(R,Q),I[U+F+0]=s.x,I[U+F+1]=s.y,I[U+F+2]=s.z,I[U+F+3]=0),!0===v&&(s.fromBufferAttribute(L,Q),I[U+F+4]=s.x,I[U+F+5]=s.y,I[U+F+6]=s.z,I[U+F+7]=0),!0===x&&(s.fromBufferAttribute(N,Q),I[U+F+8]=s.x,I[U+F+9]=s.y,I[U+F+10]=s.z,I[U+F+11]=4===N.itemSize?s.w:1)}}function B(){T.dispose(),a.delete(l),l.removeEventListener("dispose",B)}m={count:p,texture:T,size:new te(E,S)},a.set(l,m),l.addEventListener("dispose",B)}let g=0;for(let O=0;O<u.length;O++)g+=u[O];const f=l.morphTargetsRelative?1:1-g;h.getUniforms().setValue(e,"morphTargetBaseInfluence",f),h.getUniforms().setValue(e,"morphTargetInfluences",u),h.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),h.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{const G=void 0===u?0:u.length;let z=i[l.id];if(void 0===z||z.length!==G){z=[];for(let Y=0;Y<G;Y++)z[Y]=[Y,0];i[l.id]=z}for(let j=0;j<G;j++){const X=z[j];X[0]=j,X[1]=u[j]}z.sort(xi);for(let J=0;J<8;J++)J<G&&z[J][1]?(A[J][0]=z[J][0],A[J][1]=z[J][1]):(A[J][0]=Number.MAX_SAFE_INTEGER,A[J][1]=0);A.sort(vi);const k=l.morphAttributes.position,V=l.morphAttributes.normal;let H=0;for(let q=0;q<8;q++){const K=A[q],Z=K[0],$=K[1];Z!==Number.MAX_SAFE_INTEGER&&$?(k&&l.getAttribute("morphTarget"+q)!==k[Z]&&l.setAttribute("morphTarget"+q,k[Z]),V&&l.getAttribute("morphNormal"+q)!==V[Z]&&l.setAttribute("morphNormal"+q,V[Z]),r[q]=$,H+=$):(k&&!0===l.hasAttribute("morphTarget"+q)&&l.deleteAttribute("morphTarget"+q),V&&!0===l.hasAttribute("morphNormal"+q)&&l.deleteAttribute("morphNormal"+q),r[q]=0)}const W=l.morphTargetsRelative?1:1-H;h.getUniforms().setValue(e,"morphTargetBaseInfluence",W),h.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function Ci(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const s=i.render.frame,A=e.geometry,o=t.get(e,A);return r.get(o)!==s&&(t.update(o),r.set(o,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),o},dispose:function(){r=new WeakMap}}}const Mi=new Ce,wi=new be,bi=new Ee,Ei=new Bn,Si=[],Ii=[],Ti=new Float32Array(16),Di=new Float32Array(9),Bi=new Float32Array(4);function Pi(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=Si[r];if(void 0===a&&(a=new Float32Array(r),Si[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function Ri(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Li(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Ni(e,t){let n=Ii[t];void 0===n&&(n=new Int32Array(t),Ii[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Ui(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Qi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ri(n,t))return;e.uniform2fv(this.addr,t),Li(n,t)}}function Fi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Ri(n,t))return;e.uniform3fv(this.addr,t),Li(n,t)}}function Oi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ri(n,t))return;e.uniform4fv(this.addr,t),Li(n,t)}}function Gi(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Ri(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Li(n,t)}else{if(Ri(n,i))return;Bi.set(i),e.uniformMatrix2fv(this.addr,!1,Bi),Li(n,i)}}function zi(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Ri(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Li(n,t)}else{if(Ri(n,i))return;Di.set(i),e.uniformMatrix3fv(this.addr,!1,Di),Li(n,i)}}function ki(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Ri(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Li(n,t)}else{if(Ri(n,i))return;Ti.set(i),e.uniformMatrix4fv(this.addr,!1,Ti),Li(n,i)}}function Vi(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Hi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ri(n,t))return;e.uniform2iv(this.addr,t),Li(n,t)}}function Wi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Ri(n,t))return;e.uniform3iv(this.addr,t),Li(n,t)}}function Yi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ri(n,t))return;e.uniform4iv(this.addr,t),Li(n,t)}}function ji(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Xi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ri(n,t))return;e.uniform2uiv(this.addr,t),Li(n,t)}}function Ji(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Ri(n,t))return;e.uniform3uiv(this.addr,t),Li(n,t)}}function qi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ri(n,t))return;e.uniform4uiv(this.addr,t),Li(n,t)}}function Ki(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(t||Mi,r)}function Zi(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||bi,r)}function $i(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||Ei,r)}function er(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||wi,r)}function tr(e,t){e.uniform1fv(this.addr,t)}function nr(e,t){const n=Pi(t,this.size,2);e.uniform2fv(this.addr,n)}function ir(e,t){const n=Pi(t,this.size,3);e.uniform3fv(this.addr,n)}function rr(e,t){const n=Pi(t,this.size,4);e.uniform4fv(this.addr,n)}function ar(e,t){const n=Pi(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function sr(e,t){const n=Pi(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ar(e,t){const n=Pi(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function or(e,t){e.uniform1iv(this.addr,t)}function lr(e,t){e.uniform2iv(this.addr,t)}function cr(e,t){e.uniform3iv(this.addr,t)}function hr(e,t){e.uniform4iv(this.addr,t)}function ur(e,t){e.uniform1uiv(this.addr,t)}function dr(e,t){e.uniform2uiv(this.addr,t)}function pr(e,t){e.uniform3uiv(this.addr,t)}function mr(e,t){e.uniform4uiv(this.addr,t)}function gr(e,t,n){const i=this.cache,r=t.length,a=Ni(n,r);Ri(i,a)||(e.uniform1iv(this.addr,a),Li(i,a));for(let e=0;e!==r;++e)n.setTexture2D(t[e]||Mi,a[e])}function fr(e,t,n){const i=this.cache,r=t.length,a=Ni(n,r);Ri(i,a)||(e.uniform1iv(this.addr,a),Li(i,a));for(let e=0;e!==r;++e)n.setTexture3D(t[e]||bi,a[e])}function _r(e,t,n){const i=this.cache,r=t.length,a=Ni(n,r);Ri(i,a)||(e.uniform1iv(this.addr,a),Li(i,a));for(let e=0;e!==r;++e)n.setTextureCube(t[e]||Ei,a[e])}function vr(e,t,n){const i=this.cache,r=t.length,a=Ni(n,r);Ri(i,a)||(e.uniform1iv(this.addr,a),Li(i,a));for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||wi,a[e])}class xr{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ui;case 35664:return Qi;case 35665:return Fi;case 35666:return Oi;case 35674:return Gi;case 35675:return zi;case 35676:return ki;case 5124:case 35670:return Vi;case 35667:case 35671:return Hi;case 35668:case 35672:return Wi;case 35669:case 35673:return Yi;case 5125:return ji;case 36294:return Xi;case 36295:return Ji;case 36296:return qi;case 35678:case 36198:case 36298:case 36306:case 35682:return Ki;case 35679:case 36299:case 36307:return Zi;case 35680:case 36300:case 36308:case 36293:return $i;case 36289:case 36303:case 36311:case 36292:return er}}(t.type)}}class yr{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return tr;case 35664:return nr;case 35665:return ir;case 35666:return rr;case 35674:return ar;case 35675:return sr;case 35676:return Ar;case 5124:case 35670:return or;case 35667:case 35671:return lr;case 35668:case 35672:return cr;case 35669:case 35673:return hr;case 5125:return ur;case 36294:return dr;case 36295:return pr;case 36296:return mr;case 35678:case 36198:case 36298:case 36306:case 35682:return gr;case 35679:case 36299:case 36307:return fr;case 35680:case 36300:case 36308:case 36293:return _r;case 36289:case 36303:case 36311:case 36292:return vr}}(t.type)}}class Cr{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Mr=/(\w+)(\])?(\[|\.)?/g;function wr(e,t){e.seq.push(t),e.map[t.id]=t}function br(e,t,n){const i=e.name,r=i.length;for(Mr.lastIndex=0;;){const a=Mr.exec(i),s=Mr.lastIndex;let A=a[1];const o="]"===a[2],l=a[3];if(o&&(A|=0),void 0===l||"["===l&&s+2===r){wr(n,void 0===l?new xr(A,e,t):new yr(A,e,t));break}{let e=n.map[A];void 0===e&&(e=new Cr(A),wr(n,e)),n=e}}}class Er{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);br(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function Sr(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let Ir=0;function Tr(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=r;e<a;e++){const r=e+1;i.push(`${r===t?">":" "} ${r}: ${n[e]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return r}function Dr(e,t){const n=function(e){switch(e){case R:return["Linear","( value )"];case L:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Br(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Pr(e){return""!==e}function Rr(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Lr(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Nr=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ur(e){return e.replace(Nr,Qr)}function Qr(e,t){const n=Vn[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Ur(n)}const Fr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Or(e){return e.replace(Fr,Gr)}function Gr(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function zr(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function kr(e,t,n,i){const r=e.getContext(),a=n.defines;let s=n.vertexShader,A=n.fragmentShader;const o=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),u=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case l:case c:t="ENVMAP_TYPE_CUBE";break;case h:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),d=function(e){let t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===c&&(t="ENVMAP_MODE_REFRACTION");return t}(n),p=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),m=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),g=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Pr).join("\n")}(n),f=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),_=r.createProgram();let v,x,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[f].filter(Pr).join("\n"),v.length>0&&(v+="\n"),x=[g,f].filter(Pr).join("\n"),x.length>0&&(x+="\n")):(v=[zr(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+o:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Pr).join("\n"),x=[g,zr(n),"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+d:"",n.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+o:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Vn.tonemapping_pars_fragment:"",0!==n.toneMapping?Br("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Vn.encodings_pars_fragment,Dr("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Pr).join("\n")),s=Ur(s),s=Rr(s,n),s=Lr(s,n),A=Ur(A),A=Rr(A,n),A=Lr(A,n),s=Or(s),A=Or(A),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,x=["#define varying in",n.glslVersion===O?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===O?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const C=y+x+A,M=Sr(r,35633,y+v+s),w=Sr(r,35632,C);if(r.attachShader(_,M),r.attachShader(_,w),void 0!==n.index0AttributeName?r.bindAttribLocation(_,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_),e.debug.checkShaderErrors){const e=r.getProgramInfoLog(_).trim(),t=r.getShaderInfoLog(M).trim(),n=r.getShaderInfoLog(w).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(_,35714)){i=!1;const t=Tr(r,M,"vertex"),n=Tr(r,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+n)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:e,vertexShader:{log:t,prefix:v},fragmentShader:{log:n,prefix:x}})}let b,E;return r.deleteShader(M),r.deleteShader(w),this.getUniforms=function(){return void 0===b&&(b=new Er(r,_)),b},this.getAttributes=function(){return void 0===E&&(E=function(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r),a=i.name;let s=1;35674===i.type&&(s=2),35675===i.type&&(s=3),35676===i.type&&(s=4),n[a]={type:i.type,location:e.getAttribLocation(t,a),locationSize:s}}return n}(r,_)),E},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=Ir++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=M,this.fragmentShader=w,this}let Vr=0;class Hr{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new Wr(e),t.set(e,n)),n}}class Wr{constructor(e){this.id=Vr++,this.code=e,this.usedTimes=0}}function Yr(e,t,n,i,r,a,s){const A=new gt,o=new Hr,l=[],c=r.isWebGL2,u=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,A,l,g,f){const _=g.fog,v=f.geometry,x=a.isMeshStandardMaterial?g.environment:null,y=(a.isMeshStandardMaterial?n:t).get(a.envMap||x),C=y&&y.mapping===h?y.image.height:null,M=m[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const w=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,b=void 0!==w?w.length:0;let E,S,I,T,D=0;if(void 0!==v.morphAttributes.position&&(D=1),void 0!==v.morphAttributes.normal&&(D=2),void 0!==v.morphAttributes.color&&(D=3),M){const e=Wn[M];E=e.vertexShader,S=e.fragmentShader}else E=a.vertexShader,S=a.fragmentShader,o.update(a),I=o.getVertexShaderID(a),T=o.getFragmentShaderID(a);const B=e.getRenderTarget(),P=a.alphaTest>0,N=a.clearcoat>0,U=a.iridescence>0;return{isWebGL2:c,shaderID:M,shaderName:a.type,vertexShader:E,fragmentShader:S,defines:a.defines,customVertexShaderID:I,customFragmentShaderID:T,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===f.isInstancedMesh,instancingColor:!0===f.isInstancedMesh&&null!==f.instanceColor,supportsVertexTextures:d,outputEncoding:null===B?e.outputEncoding:!0===B.isXRRenderTarget?B.texture.encoding:R,map:!!a.map,matcap:!!a.matcap,envMap:!!y,envMapMode:y&&y.mapping,envMapCubeUVHeight:C,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===L,clearcoat:N,clearcoatMap:N&&!!a.clearcoatMap,clearcoatRoughnessMap:N&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:N&&!!a.clearcoatNormalMap,iridescence:U,iridescenceMap:U&&!!a.iridescenceMap,iridescenceThicknessMap:U&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&1===a.blending,alphaMap:!!a.alphaMap,alphaTest:P,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!v.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.displacementMap||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheenColorMap||a.sheenRoughnessMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap||!a.displacementMap),fog:!!_,useFog:!0===a.fog,fogExp2:_&&_.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===f.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:b,morphTextureStride:D,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(!function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){A.disableAll(),t.isWebGL2&&A.enable(0);t.supportsVertexTextures&&A.enable(1);t.instancing&&A.enable(2);t.instancingColor&&A.enable(3);t.map&&A.enable(4);t.matcap&&A.enable(5);t.envMap&&A.enable(6);t.lightMap&&A.enable(7);t.aoMap&&A.enable(8);t.emissiveMap&&A.enable(9);t.bumpMap&&A.enable(10);t.normalMap&&A.enable(11);t.objectSpaceNormalMap&&A.enable(12);t.tangentSpaceNormalMap&&A.enable(13);t.clearcoat&&A.enable(14);t.clearcoatMap&&A.enable(15);t.clearcoatRoughnessMap&&A.enable(16);t.clearcoatNormalMap&&A.enable(17);t.iridescence&&A.enable(18);t.iridescenceMap&&A.enable(19);t.iridescenceThicknessMap&&A.enable(20);t.displacementMap&&A.enable(21);t.specularMap&&A.enable(22);t.roughnessMap&&A.enable(23);t.metalnessMap&&A.enable(24);t.gradientMap&&A.enable(25);t.alphaMap&&A.enable(26);t.alphaTest&&A.enable(27);t.vertexColors&&A.enable(28);t.vertexAlphas&&A.enable(29);t.vertexUvs&&A.enable(30);t.vertexTangents&&A.enable(31);t.uvsVertexOnly&&A.enable(32);e.push(A.mask),A.disableAll(),t.fog&&A.enable(0);t.useFog&&A.enable(1);t.flatShading&&A.enable(2);t.logarithmicDepthBuffer&&A.enable(3);t.skinning&&A.enable(4);t.morphTargets&&A.enable(5);t.morphNormals&&A.enable(6);t.morphColors&&A.enable(7);t.premultipliedAlpha&&A.enable(8);t.shadowMapEnabled&&A.enable(9);t.physicallyCorrectLights&&A.enable(10);t.doubleSided&&A.enable(11);t.flipSided&&A.enable(12);t.useDepthPacking&&A.enable(13);t.dithering&&A.enable(14);t.specularIntensityMap&&A.enable(15);t.specularColorMap&&A.enable(16);t.transmission&&A.enable(17);t.transmissionMap&&A.enable(18);t.thicknessMap&&A.enable(19);t.sheen&&A.enable(20);t.sheenColorMap&&A.enable(21);t.sheenRoughnessMap&&A.enable(22);t.decodeVideoTexture&&A.enable(23);t.opaque&&A.enable(24);e.push(A.mask)}(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Wn[t];n=bn.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=l.length;e<t;e++){const t=l[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new kr(e,n,t,a),l.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=l.indexOf(e);l[t]=l[l.length-1],l.pop(),e.destroy()}},releaseShaderCache:function(e){o.remove(e)},programs:l,dispose:function(){o.dispose()}}}function jr(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function Xr(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Jr(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function qr(){const e=[];let t=0;const n=[],i=[],r=[];function a(n,i,r,a,s,A){let o=e[t];return void 0===o?(o={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:A},e[t]=o):(o.id=n.id,o.object=n,o.geometry=i,o.material=r,o.groupOrder=a,o.renderOrder=n.renderOrder,o.z=s,o.group=A),t++,o}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,s,A,o,l){const c=a(e,t,s,A,o,l);s.transmission>0?i.push(c):!0===s.transparent?r.push(c):n.push(c)},unshift:function(e,t,s,A,o,l){const c=a(e,t,s,A,o,l);s.transmission>0?i.unshift(c):!0===s.transparent?r.unshift(c):n.unshift(c)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||Xr),i.length>1&&i.sort(t||Jr),r.length>1&&r.sort(t||Jr)}}}function Kr(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let r;return void 0===i?(r=new qr,e.set(t,[r])):n>=i.length?(r=new qr,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function Zr(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new Te,color:new ge};break;case"SpotLight":n={position:new Te,direction:new Te,color:new ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Te,color:new ge,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Te,skyColor:new ge,groundColor:new ge};break;case"RectAreaLight":n={color:new ge,position:new Te,halfWidth:new Te,halfHeight:new Te}}return e[t.id]=n,n}}}let $r=0;function ea(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function ta(e,t){const n=new Zr,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new te};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new te,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let e=0;e<9;e++)r.probe.push(new Te);const a=new Te,s=new at,A=new at;return{setup:function(a,s){let A=0,o=0,l=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let c=0,h=0,u=0,d=0,p=0,m=0,g=0,f=0,_=0,v=0;a.sort(ea);const x=!0!==s?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],s=t.color,y=t.intensity,C=t.distance,M=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)A+=s.r*y*x,o+=s.g*y*x,l+=s.b*y*x;else if(t.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(t.sh.coefficients[e],y);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[c]=n,r.directionalShadowMap[c]=M,r.directionalShadowMatrix[c]=t.shadow.matrix,m++}r.directional[c]=e,c++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(s).multiplyScalar(y*x),e.distance=C,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,r.spot[u]=e;const a=t.shadow;if(t.map&&(r.spotLightMap[_]=t.map,_++,a.updateMatrices(t),t.castShadow&&v++),r.spotLightMatrix[u]=a.matrix,t.castShadow){const e=i.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,r.spotShadow[u]=e,r.spotShadowMap[u]=M,f++}u++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(s).multiplyScalar(y),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),r.rectArea[d]=e,d++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=M,r.pointShadowMatrix[h]=t.shadow.matrix,g++}r.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(y*x),e.groundColor.copy(t.groundColor).multiplyScalar(y*x),r.hemi[p]=e,p++}}d>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=Hn.LTC_FLOAT_1,r.rectAreaLTC2=Hn.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Hn.LTC_HALF_1,r.rectAreaLTC2=Hn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=A,r.ambient[1]=o,r.ambient[2]=l;const y=r.hash;y.directionalLength===c&&y.pointLength===h&&y.spotLength===u&&y.rectAreaLength===d&&y.hemiLength===p&&y.numDirectionalShadows===m&&y.numPointShadows===g&&y.numSpotShadows===f&&y.numSpotMaps===_||(r.directional.length=c,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=f,r.spotShadowMap.length=f,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=f+_-v,r.spotLightMap.length=_,r.numSpotLightShadowsWithMaps=v,y.directionalLength=c,y.pointLength=h,y.spotLength=u,y.rectAreaLength=d,y.hemiLength=p,y.numDirectionalShadows=m,y.numPointShadows=g,y.numSpotShadows=f,y.numSpotMaps=_,r.version=$r++)},setupView:function(e,t){let n=0,i=0,o=0,l=0,c=0;const h=t.matrixWorldInverse;for(let t=0,u=e.length;t<u;t++){const u=e[t];if(u.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(u.matrixWorld),a.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),n++}else if(u.isSpotLight){const e=r.spot[o];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(u.matrixWorld),a.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),o++}else if(u.isRectAreaLight){const e=r.rectArea[l];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),A.identity(),s.copy(u.matrixWorld),s.premultiply(h),A.extractRotation(s),e.halfWidth.set(.5*u.width,0,0),e.halfHeight.set(0,.5*u.height,0),e.halfWidth.applyMatrix4(A),e.halfHeight.applyMatrix4(A),l++}else if(u.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),i++}else if(u.isHemisphereLight){const e=r.hemi[c];e.direction.setFromMatrixPosition(u.matrixWorld),e.direction.transformDirection(h),c++}}},state:r}}function na(e,t){const n=new ta(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function ia(e,t){let n=new WeakMap;return{get:function(i,r=0){const a=n.get(i);let s;return void 0===a?(s=new na(e,t),n.set(i,[s])):r>=a.length?(s=new na(e,t),a.push(s)):s=a[r],s},dispose:function(){n=new WeakMap}}}class ra extends Vt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class aa extends Vt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Te,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sa(e,t,n){let i=new On;const r=new te,a=new te,s=new Me,A=new ra({depthPacking:3201}),o=new aa,l={},c=n.maxTextureSize,h={0:1,1:0,2:2},u=new En({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new te},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const p=new an;p.setAttribute("position",new jt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new vn(p,u),f=this;function _(n,i){const a=t.update(g);u.defines.VSM_SAMPLES!==n.blurSamples&&(u.defines.VSM_SAMPLES=n.blurSamples,d.defines.VSM_SAMPLES=n.blurSamples,u.needsUpdate=!0,d.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new we(r.x,r.y)),u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,a,u,g,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,a,d,g,null)}function v(t,n,i,r,a,s){let c=null;const u=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==u)c=u;else if(c=!0===i.isPointLight?o:A,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=c.uuid,t=n.uuid;let i=l[e];void 0===i&&(i={},l[e]=i);let r=i[t];void 0===r&&(r=c.clone(),i[t]=r),c=r}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=3===s?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],c.alphaMap=n.alphaMap,c.alphaTest=n.alphaTest,c.map=n.map,c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.displacementMap=n.displacementMap,c.displacementScale=n.displacementScale,c.displacementBias=n.displacementBias,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,!0===i.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(i.matrixWorld),c.nearDistance=r,c.farDistance=a),c}function x(n,r,a,s,A){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===A)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),r=n.material;if(Array.isArray(r)){const t=i.groups;for(let o=0,l=t.length;o<l;o++){const l=t[o],c=r[l.materialIndex];if(c&&c.visible){const t=v(n,c,s,a.near,a.far,A);e.renderBufferDirect(a,null,i,t,n,l)}}}else if(r.visible){const t=v(n,r,s,a.near,a.far,A);e.renderBufferDirect(a,null,i,t,n,null)}}const o=n.children;for(let e=0,t=o.length;e<t;e++)x(o[e],r,a,s,A)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,A){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===t.length)return;const o=e.getRenderTarget(),l=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),u=e.state;u.setBlending(0),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);for(let o=0,l=t.length;o<l;o++){const l=t[o],h=l.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;r.copy(h.mapSize);const d=h.getFrameExtents();if(r.multiply(d),a.copy(h.mapSize),(r.x>c||r.y>c)&&(r.x>c&&(a.x=Math.floor(c/d.x),r.x=a.x*d.x,h.mapSize.x=a.x),r.y>c&&(a.y=Math.floor(c/d.y),r.y=a.y*d.y,h.mapSize.y=a.y)),null===h.map){const e=3!==this.type?{minFilter:m,magFilter:m}:{};h.map=new we(r.x,r.y,e),h.map.texture.name=l.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const p=h.getViewportCount();for(let e=0;e<p;e++){const t=h.getViewport(e);s.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),u.viewport(s),h.updateMatrices(l,e),i=h.getFrustum(),x(n,A,h.camera,l,this.type)}!0!==h.isPointLightShadow&&3===this.type&&_(h,A),h.needsUpdate=!1}f.needsUpdate=!1,e.setRenderTarget(o,l,h)}}function Aa(e,t,n){const i=n.isWebGL2;const r=new function(){let t=!1;const n=new Me;let i=null;const r=new Me(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,A){!0===A&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(e){e?z(2929):k(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},s=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,A=null,o=null,l=null;return{setTest:function(e){t||(e?z(2960):k(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&r===n&&a===s||(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){s===t&&A===n&&o===i||(e.stencilOp(t,n,i),s=t,A=n,o=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,A=null,o=null,l=null}}},A=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,m=!1,g=null,f=null,_=null,v=null,x=null,y=null,C=null,M=!1,w=null,b=null,E=null,S=null,I=null;const T=e.getParameter(35661);let D=!1,B=0;const P=e.getParameter(7938);-1!==P.indexOf("WebGL")?(B=parseFloat(/^WebGL (\d)/.exec(P)[1]),D=B>=1):-1!==P.indexOf("OpenGL ES")&&(B=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),D=B>=2);let R=null,L={};const N=e.getParameter(3088),U=e.getParameter(2978),Q=(new Me).fromArray(N),F=(new Me).fromArray(U);function O(t,n,i){const r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,r);return a}const G={};function z(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function k(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}G[3553]=O(3553,3553,1),G[34067]=O(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),z(2929),a.setFunc(3),Y(!1),j(1),z(2884),W(0);const V={[o]:32774,101:32778,102:32779};if(i)V[103]=32775,V[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(V[103]=e.MIN_EXT,V[104]=e.MAX_EXT)}const H={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function W(t,n,i,r,a,s,A,l){if(0!==t){if(!1===m&&(z(3042),m=!0),5===t)a=a||n,s=s||i,A=A||r,n===f&&a===x||(e.blendEquationSeparate(V[n],V[a]),f=n,x=a),i===_&&r===v&&s===y&&A===C||(e.blendFuncSeparate(H[i],H[r],H[s],H[A]),_=i,v=r,y=s,C=A),g=t,M=!1;else if(t!==g||l!==M){if(f===o&&x===o||(e.blendEquation(32774),f=o,x=o),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}_=null,v=null,y=null,C=null,g=t,M=l}}else!0===m&&(k(3042),m=!1)}function Y(t){w!==t&&(t?e.frontFace(2304):e.frontFace(2305),w=t)}function j(t){0!==t?(z(2884),t!==b&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):k(2884),b=t}function X(t,n,i){t?(z(32823),S===n&&I===i||(e.polygonOffset(n,i),S=n,I=i)):k(32823)}return{buffers:{color:r,depth:a,stencil:s},enable:z,disable:k,bindFramebuffer:function(t,n){return h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n,i&&(36009===t&&(h[36160]=n),36160===t&&(h[36009]=n)),!0)},drawBuffers:function(i,r){let a=d,s=!1;if(i)if(a=u.get(r),void 0===a&&(a=[],u.set(r,a)),i.isWebGLMultipleRenderTargets){const e=i.texture;if(a.length!==e.length||36064!==a[0]){for(let t=0,n=e.length;t<n;t++)a[t]=36064+t;a.length=e.length,s=!0}}else 36064!==a[0]&&(a[0]=36064,s=!0);else 1029!==a[0]&&(a[0]=1029,s=!0);s&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:W,setMaterial:function(e,t){2===e.side?k(2884):z(2884);let n=1===e.side;t&&(n=!n),Y(n),1===e.blending&&!1===e.transparent?W(0):W(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);const i=e.stencilWrite;s.setTest(i),i&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),X(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?z(32926):k(32926)},setFlipSided:Y,setCullFace:j,setLineWidth:function(t){t!==E&&(D&&e.lineWidth(t),E=t)},setPolygonOffset:X,setScissorTest:function(e){e?z(3089):k(3089)},activeTexture:function(t){void 0===t&&(t=33984+T-1),R!==t&&(e.activeTexture(t),R=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===R?33984+T-1:R);let r=L[i];void 0===r&&(r={type:void 0,texture:void 0},L[i]=r),r.type===t&&r.texture===n||(R!==i&&(e.activeTexture(i),R=i),e.bindTexture(t,n||G[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=L[R];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let i=l.get(n);void 0===i&&(i=new WeakMap,l.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){const i=l.get(n).get(t);A.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),A.set(n,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===Q.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),Q.copy(t))},viewport:function(t){!1===F.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),F.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},R=null,L={},h={},u=new WeakMap,d=[],p=null,m=!1,g=null,f=null,_=null,v=null,x=null,y=null,C=null,M=!1,w=null,b=null,E=null,S=null,I=null,Q.set(0,0,e.canvas.width,e.canvas.height),F.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),s.reset()}}}function oa(e,t,n,i,r,a,s){const A=r.isWebGL2,o=r.maxTextures,l=r.maxCubemapSize,c=r.maxTextureSize,h=r.maxSamples,I=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,T="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),D=new WeakMap;let B;const P=new WeakMap;let N=!1;try{N="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function U(e,t){return N?new OffscreenCanvas(e,t):ae("canvas")}function Q(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?K:Math.floor,a=i(r*e.width),s=i(r*e.height);void 0===B&&(B=U(a,s));const A=n?U(a,s):B;A.width=a,A.height=s;return A.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),A}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function F(e){return q(e.width)&&q(e.height)}function O(e,t){return e.generateMipmaps&&t&&e.minFilter!==m&&e.minFilter!==_}function z(t){e.generateMipmap(t)}function k(n,i,r,a,s=!1){if(!1===A)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;return 6403===i&&(5126===r&&(o=33326),5131===r&&(o=33325),5121===r&&(o=33321)),33319===i&&(5126===r&&(o=33328),5131===r&&(o=33327),5121===r&&(o=33323)),6408===i&&(5126===r&&(o=34836),5131===r&&(o=34842),5121===r&&(o=a===L&&!1===s?35907:32856),32819===r&&(o=32854),32820===r&&(o=32855)),33325!==o&&33326!==o&&33327!==o&&33328!==o&&34842!==o&&34836!==o||t.get("EXT_color_buffer_float"),o}function V(e,t,n){return!0===O(e,n)||e.isFramebufferTexture&&e.minFilter!==m&&e.minFilter!==_?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function H(e){return e===m||e===g||e===f?9728:9729}function W(e){const t=e.target;t.removeEventListener("dispose",W),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,r=P.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&j(e),0===Object.keys(r).length&&P.delete(n)}i.remove(e)}(t),t.isVideoTexture&&D.delete(t)}function Y(t){const n=t.target;n.removeEventListener("dispose",Y),function(t){const n=t.texture,r=i.get(t),a=i.get(n);void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let t=0;t<r.__webglColorRenderbuffer.length;t++)r.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[t]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);r.__webglTexture&&(e.deleteTexture(r.__webglTexture),s.memory.textures--),i.remove(n[t])}i.remove(n),i.remove(t)}(n)}function j(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;delete P.get(r)[n.__cacheKey],s.memory.textures--}let X=0;function J(e,t){const r=i.get(e);if(e.isVideoTexture&&function(e){const t=s.render.frame;D.get(e)!==t&&(D.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){const n=e.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void ne(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(3553,r.__webglTexture,33984+t)}const Z={[u]:10497,[d]:33071,[p]:33648},$={[m]:9728,[g]:9984,[f]:9986,[_]:9729,1007:9985,[v]:9987};function ee(n,a,s){if(s?(e.texParameteri(n,10242,Z[a.wrapS]),e.texParameteri(n,10243,Z[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,Z[a.wrapR]),e.texParameteri(n,10240,$[a.magFilter]),e.texParameteri(n,10241,$[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),a.wrapS===d&&a.wrapT===d||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,H(a.magFilter)),e.texParameteri(n,10241,H(a.minFilter)),a.minFilter!==m&&a.minFilter!==_&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===m)return;if(a.minFilter!==f&&a.minFilter!==v)return;if(a.type===C&&!1===t.has("OES_texture_float_linear"))return;if(!1===A&&a.type===M&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function te(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",W));const r=n.source;let a=P.get(r);void 0===a&&(a={},P.set(r,a));const A=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(A!==t.__cacheKey){void 0===a[A]&&(a[A]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[A].usedTimes++;const r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&j(n)),t.__cacheKey=A,t.__webglTexture=a[A].texture}return i}function ne(t,r,s){let o=3553;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(o=35866),r.isData3DTexture&&(o=32879);const l=te(t,r),h=r.source;n.bindTexture(o,t.__webglTexture,33984+s);const u=i.get(h);if(h.version!==u.__version||!0===l){n.activeTexture(33984+s),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const t=function(e){return!A&&(e.wrapS!==d||e.wrapT!==d||e.minFilter!==m&&e.minFilter!==_)}(r)&&!1===F(r.image);let i=Q(r.image,t,!1,c);i=le(r,i);const p=F(i)||A,g=a.convert(r.format,r.encoding);let f,v=a.convert(r.type),x=k(r.internalFormat,g,v,r.encoding,r.isVideoTexture);ee(o,r,p);const M=r.mipmaps,I=A&&!0!==r.isVideoTexture,T=void 0===u.__version||!0===l,D=V(r,i,p);if(r.isDepthTexture)x=6402,A?x=r.type===C?36012:r.type===y?33190:r.type===w?35056:33189:r.type===C&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===E&&6402===x&&1012!==r.type&&r.type!==y&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=y,v=a.convert(r.type)),r.format===S&&6402===x&&(x=34041,r.type!==w&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=w,v=a.convert(r.type))),T&&(I?n.texStorage2D(3553,1,x,i.width,i.height):n.texImage2D(3553,0,x,i.width,i.height,0,g,v,null));else if(r.isDataTexture)if(M.length>0&&p){I&&T&&n.texStorage2D(3553,D,x,M[0].width,M[0].height);for(let e=0,t=M.length;e<t;e++)f=M[e],I?n.texSubImage2D(3553,e,0,0,f.width,f.height,g,v,f.data):n.texImage2D(3553,e,x,f.width,f.height,0,g,v,f.data);r.generateMipmaps=!1}else I?(T&&n.texStorage2D(3553,D,x,i.width,i.height),n.texSubImage2D(3553,0,0,0,i.width,i.height,g,v,i.data)):n.texImage2D(3553,0,x,i.width,i.height,0,g,v,i.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){I&&T&&n.texStorage3D(35866,D,x,M[0].width,M[0].height,i.depth);for(let e=0,t=M.length;e<t;e++)f=M[e],r.format!==b?null!==g?I?n.compressedTexSubImage3D(35866,e,0,0,0,f.width,f.height,i.depth,g,f.data,0,0):n.compressedTexImage3D(35866,e,x,f.width,f.height,i.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):I?n.texSubImage3D(35866,e,0,0,0,f.width,f.height,i.depth,g,v,f.data):n.texImage3D(35866,e,x,f.width,f.height,i.depth,0,g,v,f.data)}else{I&&T&&n.texStorage2D(3553,D,x,M[0].width,M[0].height);for(let e=0,t=M.length;e<t;e++)f=M[e],r.format!==b?null!==g?I?n.compressedTexSubImage2D(3553,e,0,0,f.width,f.height,g,f.data):n.compressedTexImage2D(3553,e,x,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):I?n.texSubImage2D(3553,e,0,0,f.width,f.height,g,v,f.data):n.texImage2D(3553,e,x,f.width,f.height,0,g,v,f.data)}else if(r.isDataArrayTexture)I?(T&&n.texStorage3D(35866,D,x,i.width,i.height,i.depth),n.texSubImage3D(35866,0,0,0,0,i.width,i.height,i.depth,g,v,i.data)):n.texImage3D(35866,0,x,i.width,i.height,i.depth,0,g,v,i.data);else if(r.isData3DTexture)I?(T&&n.texStorage3D(32879,D,x,i.width,i.height,i.depth),n.texSubImage3D(32879,0,0,0,0,i.width,i.height,i.depth,g,v,i.data)):n.texImage3D(32879,0,x,i.width,i.height,i.depth,0,g,v,i.data);else if(r.isFramebufferTexture){if(T)if(I)n.texStorage2D(3553,D,x,i.width,i.height);else{let e=i.width,t=i.height;for(let i=0;i<D;i++)n.texImage2D(3553,i,x,e,t,0,g,v,null),e>>=1,t>>=1}}else if(M.length>0&&p){I&&T&&n.texStorage2D(3553,D,x,M[0].width,M[0].height);for(let e=0,t=M.length;e<t;e++)f=M[e],I?n.texSubImage2D(3553,e,0,0,g,v,f):n.texImage2D(3553,e,x,g,v,f);r.generateMipmaps=!1}else I?(T&&n.texStorage2D(3553,D,x,i.width,i.height),n.texSubImage2D(3553,0,0,0,g,v,i)):n.texImage2D(3553,0,x,g,v,i);O(r,p)&&z(o),u.__version=h.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function ie(t,r,s,A,o){const l=a.convert(s.format,s.encoding),c=a.convert(s.type),h=k(s.internalFormat,l,c,s.encoding);i.get(r).__hasExternalTextures||(32879===o||35866===o?n.texImage3D(o,0,h,r.width,r.height,r.depth,0,l,c,null):n.texImage2D(o,0,h,r.width,r.height,0,l,c,null)),n.bindFramebuffer(36160,t),oe(r)?I.framebufferTexture2DMultisampleEXT(36160,A,o,i.get(s).__webglTexture,0,Ae(r)):(3553===o||o>=34069&&o<=34074)&&e.framebufferTexture2D(36160,A,o,i.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function re(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i||oe(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===C?r=36012:t.type===y&&(r=33190));const i=Ae(n);oe(n)?I.renderbufferStorageMultisampleEXT(36161,i,r,n.width,n.height):e.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){const r=Ae(n);i&&!1===oe(n)?e.renderbufferStorageMultisample(36161,r,35056,n.width,n.height):oe(n)?I.renderbufferStorageMultisampleEXT(36161,r,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<t.length;r++){const s=t[r],A=a.convert(s.format,s.encoding),o=a.convert(s.type),l=k(s.internalFormat,A,o,s.encoding),c=Ae(n);i&&!1===oe(n)?e.renderbufferStorageMultisample(36161,c,l,n.width,n.height):oe(n)?I.renderbufferStorageMultisampleEXT(36161,c,l,n.width,n.height):e.renderbufferStorage(36161,l,n.width,n.height)}}e.bindRenderbuffer(36161,null)}function se(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),J(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,s=Ae(r);if(r.depthTexture.format===E)oe(r)?I.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,s):e.framebufferTexture2D(36160,36096,3553,a,0);else{if(r.depthTexture.format!==S)throw new Error("Unknown depthTexture format");oe(r)?I.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,s):e.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),re(r.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),re(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function Ae(e){return Math.min(h,e.samples)}function oe(e){const n=i.get(e);return A&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function le(e,n){const i=e.encoding,r=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===G||i!==R&&(i===L?!1===A?!0===t.has("EXT_sRGB")&&r===b?(e.format=G,e.minFilter=_,e.generateMipmaps=!1):n=_e.sRGBToLinear(n):r===b&&a===x||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)),n}this.allocateTextureUnit=function(){const e=X;return e>=o&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+o),X+=1,e},this.resetTextureUnits=function(){X=0},this.setTexture2D=J,this.setTexture2DArray=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?ne(r,e,t):n.bindTexture(35866,r.__webglTexture,33984+t)},this.setTexture3D=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?ne(r,e,t):n.bindTexture(32879,r.__webglTexture,33984+t)},this.setTextureCube=function(t,r){const s=i.get(t);t.version>0&&s.__version!==t.version?function(t,r,s){if(6!==r.image.length)return;const o=te(t,r),c=r.source;n.bindTexture(34067,t.__webglTexture,33984+s);const h=i.get(c);if(c.version!==h.__version||!0===o){n.activeTexture(33984+s),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const t=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=t||i?i?r.image[e].image:r.image[e]:Q(r.image[e],!1,!0,l),u[e]=le(r,u[e]);const d=u[0],p=F(d)||A,m=a.convert(r.format,r.encoding),g=a.convert(r.type),f=k(r.internalFormat,m,g,r.encoding),_=A&&!0!==r.isVideoTexture,v=void 0===h.__version||!0===o;let x,y=V(r,d,p);if(ee(34067,r,p),t){_&&v&&n.texStorage2D(34067,y,f,d.width,d.height);for(let e=0;e<6;e++){x=u[e].mipmaps;for(let t=0;t<x.length;t++){const i=x[t];r.format!==b?null!==m?_?n.compressedTexSubImage2D(34069+e,t,0,0,i.width,i.height,m,i.data):n.compressedTexImage2D(34069+e,t,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?n.texSubImage2D(34069+e,t,0,0,i.width,i.height,m,g,i.data):n.texImage2D(34069+e,t,f,i.width,i.height,0,m,g,i.data)}}}else{x=r.mipmaps,_&&v&&(x.length>0&&y++,n.texStorage2D(34067,y,f,u[0].width,u[0].height));for(let e=0;e<6;e++)if(i){_?n.texSubImage2D(34069+e,0,0,0,u[e].width,u[e].height,m,g,u[e].data):n.texImage2D(34069+e,0,f,u[e].width,u[e].height,0,m,g,u[e].data);for(let t=0;t<x.length;t++){const i=x[t].image[e].image;_?n.texSubImage2D(34069+e,t+1,0,0,i.width,i.height,m,g,i.data):n.texImage2D(34069+e,t+1,f,i.width,i.height,0,m,g,i.data)}}else{_?n.texSubImage2D(34069+e,0,0,0,m,g,u[e]):n.texImage2D(34069+e,0,f,m,g,u[e]);for(let t=0;t<x.length;t++){const i=x[t];_?n.texSubImage2D(34069+e,t+1,0,0,m,g,i.image[e]):n.texImage2D(34069+e,t+1,f,m,g,i.image[e])}}}O(r,p)&&z(34067),h.__version=c.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}(s,t,r):n.bindTexture(34067,s.__webglTexture,33984+r)},this.rebindTextures=function(e,t,n){const r=i.get(e);void 0!==t&&ie(r.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&se(e)},this.setupRenderTarget=function(t){const o=t.texture,l=i.get(t),c=i.get(o);t.addEventListener("dispose",Y),!0!==t.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=o.version,s.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultipleRenderTargets,d=F(t)||A;if(h){l.__webglFramebuffer=[];for(let t=0;t<6;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else{if(l.__webglFramebuffer=e.createFramebuffer(),u)if(r.drawBuffers){const n=t.texture;for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);void 0===r.__webglTexture&&(r.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(A&&t.samples>0&&!1===oe(t)){const i=u?o:[o];l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];l.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer[n]);const s=a.convert(r.format,r.encoding),A=a.convert(r.type),o=k(r.internalFormat,s,A,r.encoding,!0===t.isXRRenderTarget),c=Ae(t);e.renderbufferStorageMultisample(36161,c,o,t.width,t.height),e.framebufferRenderbuffer(36160,36064+n,36161,l.__webglColorRenderbuffer[n])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),re(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}}if(h){n.bindTexture(34067,c.__webglTexture),ee(34067,o,d);for(let e=0;e<6;e++)ie(l.__webglFramebuffer[e],t,o,36064,34069+e);O(o,d)&&z(34067),n.unbindTexture()}else if(u){const e=t.texture;for(let r=0,a=e.length;r<a;r++){const a=e[r],s=i.get(a);n.bindTexture(3553,s.__webglTexture),ee(3553,a,d),ie(l.__webglFramebuffer,t,a,36064+r,3553),O(a,d)&&z(3553)}n.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(A?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(e,c.__webglTexture),ee(e,o,d),ie(l.__webglFramebuffer,t,o,36064,e),O(o,d)&&z(e),n.unbindTexture()}t.depthBuffer&&se(t)},this.updateRenderTargetMipmap=function(e){const t=F(e)||A,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,s=r.length;a<s;a++){const s=r[a];if(O(s,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,r=i.get(s).__webglTexture;n.bindTexture(t,r),z(t),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(A&&t.samples>0&&!1===oe(t)){const r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,s=t.height;let A=16384;const o=[],l=t.stencilBuffer?33306:36096,c=i.get(t),h=!0===t.isWebGLMultipleRenderTargets;if(h)for(let t=0;t<r.length;t++)n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,null),n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,null,0);n.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,c.__webglFramebuffer);for(let n=0;n<r.length;n++){o.push(36064+n),t.depthBuffer&&o.push(l);const u=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===u&&(t.depthBuffer&&(A|=256),t.stencilBuffer&&(A|=1024)),h&&e.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[n]),!0===u&&(e.invalidateFramebuffer(36008,[l]),e.invalidateFramebuffer(36009,[l])),h){const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,t,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,A,9728),T&&e.invalidateFramebuffer(36008,o)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),h)for(let t=0;t<r.length;t++){n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,c.__webglColorRenderbuffer[t]);const a=i.get(r[t]).__webglTexture;n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,a,0)}n.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=se,this.setupFrameBufferTexture=ie,this.useMultisampledRTT=oe}function la(e,t,n){const i=n.isWebGL2;return{convert:function(n,r=null){let a;if(n===x)return 5121;if(1017===n)return 32819;if(1018===n)return 32820;if(1010===n)return 5120;if(1011===n)return 5122;if(1012===n)return 5123;if(1013===n)return 5124;if(n===y)return 5125;if(n===C)return 5126;if(n===M)return i?5131:(a=t.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return 6406;if(n===b)return 6408;if(1024===n)return 6409;if(1025===n)return 6410;if(n===E)return 6402;if(n===S)return 34041;if(n===G)return a=t.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return 6403;if(1029===n)return 36244;if(1030===n)return 33319;if(1031===n)return 33320;if(1033===n)return 36249;if(n===I||n===T||n===D||n===B)if(r===L){if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===I)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===T)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===D)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===B)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=t.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===I)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===T)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===D)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===B)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=t.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=t.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=t.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return r===L?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=t.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return r===L?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===P){if(a=t.get("EXT_texture_compression_bptc"),null===a)return null;if(n===P)return r===L?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=t.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===P)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===w?i?34042:(a=t.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class ca extends In{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ha extends Dt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ua={type:"move"};class da{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ha,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ha,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Te,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Te),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ha,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Te,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Te),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const s=this._targetRay,A=this._grip,o=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(o&&e.hand){a=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n),r=this._getHandJoint(o,i);null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=e.radius),r.visible=null!==e}const i=o.joints["index-finger-tip"],r=o.joints["thumb-tip"],s=i.position.distanceTo(r.position),A=.02,l=.005;o.inputState.pinching&&s>A+l?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!o.inputState.pinching&&s<=A-l&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==A&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(A.matrix.fromArray(r.transform.matrix),A.matrix.decompose(A.position,A.rotation,A.scale),r.linearVelocity?(A.hasLinearVelocity=!0,A.linearVelocity.copy(r.linearVelocity)):A.hasLinearVelocity=!1,r.angularVelocity?(A.hasAngularVelocity=!0,A.angularVelocity.copy(r.angularVelocity)):A.hasAngularVelocity=!1));null!==s&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(ua)))}return null!==s&&(s.visible=null!==i),null!==A&&(A.visible=null!==r),null!==o&&(o.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new ha;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class pa extends Ce{constructor(e,t,n,i,r,a,s,A,o,l){if((l=void 0!==l?l:E)!==E&&l!==S)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===E&&(n=y),void 0===n&&l===S&&(n=w),super(null,i,r,a,s,A,l,n,o),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:m,this.minFilter=void 0!==A?A:m,this.flipY=!1,this.generateMipmaps=!1}}class ma extends z{constructor(e,t){super();const n=this;let i=null,r=1,a=null,s="local-floor",A=1,o=null,l=null,c=null,h=null,u=null,d=null;const p=t.getContextAttributes();let m=null,g=null;const f=[],_=[],v=new Set,C=new Map,M=new In;M.layers.enable(1),M.viewport=new Me;const I=new In;I.layers.enable(2),I.viewport=new Me;const T=[M,I],D=new ca;D.layers.enable(1),D.layers.enable(2);let B=null,P=null;function R(e){const t=_.indexOf(e.inputSource);if(-1===t)return;const n=f[t];void 0!==n&&n.dispatchEvent({type:e.type,data:e.inputSource})}function L(){i.removeEventListener("select",R),i.removeEventListener("selectstart",R),i.removeEventListener("selectend",R),i.removeEventListener("squeeze",R),i.removeEventListener("squeezestart",R),i.removeEventListener("squeezeend",R),i.removeEventListener("end",L),i.removeEventListener("inputsourceschange",N);for(let e=0;e<f.length;e++){const t=_[e];null!==t&&(_[e]=null,f[e].disconnect(t))}B=null,P=null,e.setRenderTarget(m),u=null,h=null,c=null,i=null,g=null,G.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function N(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=_.indexOf(n);i>=0&&(_[i]=null,f[i].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=_.indexOf(n);if(-1===i){for(let e=0;e<f.length;e++){if(e>=_.length){_.push(n),i=e;break}if(null===_[e]){_[e]=n,i=e;break}}if(-1===i)break}const r=f[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=f[e];return void 0===t&&(t=new da,f[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=f[e];return void 0===t&&(t=new da,f[e]=t),t.getGripSpace()},this.getHand=function(e){let t=f[e];return void 0===t&&(t=new da,f[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||a},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(l){if(i=l,null!==i){if(m=e.getRenderTarget(),i.addEventListener("select",R),i.addEventListener("selectstart",R),i.addEventListener("selectend",R),i.addEventListener("squeeze",R),i.addEventListener("squeezestart",R),i.addEventListener("squeezeend",R),i.addEventListener("end",L),i.addEventListener("inputsourceschange",N),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};u=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:u}),g=new we(u.framebufferWidth,u.framebufferHeight,{format:b,type:x,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let n=null,a=null,s=null;p.depth&&(s=p.stencil?35056:33190,n=p.stencil?S:E,a=p.stencil?w:y);const A={colorFormat:32856,depthFormat:s,scaleFactor:r};c=new XRWebGLBinding(i,t),h=c.createProjectionLayer(A),i.updateRenderState({layers:[h]}),g=new we(h.textureWidth,h.textureHeight,{format:b,type:x,depthTexture:new pa(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});e.properties.get(g).__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(A),o=null,a=await i.requestReferenceSpace(s),G.setContext(i),G.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const U=new Te,Q=new Te;function F(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;D.near=I.near=M.near=e.near,D.far=I.far=M.far=e.far,B===D.near&&P===D.far||(i.updateRenderState({depthNear:D.near,depthFar:D.far}),B=D.near,P=D.far);const t=e.parent,n=D.cameras;F(D,t);for(let e=0;e<n.length;e++)F(n[e],t);D.matrixWorld.decompose(D.position,D.quaternion,D.scale),e.matrix.copy(D.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){U.setFromMatrixPosition(t.matrixWorld),Q.setFromMatrixPosition(n.matrixWorld);const i=U.distanceTo(Q),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),A=r[14]/(r[10]+1),o=(r[9]+1)/r[5],l=(r[9]-1)/r[5],c=(r[8]-1)/r[0],h=(a[8]+1)/a[0],u=s*c,d=s*h,p=i/(-c+h),m=p*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=s+p,f=A+p,_=u-m,v=d+(i-m),x=o*A/f*g,y=l*A/f*g;e.projectionMatrix.makePerspective(_,v,x,y,g,f)}(D,M,I):D.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return D},this.getFoveation=function(){if(null!==h||null!==u)return A},this.setFoveation=function(e){A=e,null!==h&&(h.fixedFoveation=e),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=e)},this.getPlanes=function(){return v};let O=null;const G=new Gn;G.setAnimationLoop((function(t,i){if(l=i.getViewerPose(o||a),d=i,null!==l){const t=l.views;null!==u&&(e.setRenderTargetFramebuffer(g,u.framebuffer),e.setRenderTarget(g));let n=!1;t.length!==D.cameras.length&&(D.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i];let a=null;if(null!==u)a=u.getViewport(r);else{const t=c.getViewSubImage(h,r);a=t.viewport,0===i&&(e.setRenderTargetTextures(g,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let s=T[i];void 0===s&&(s=new In,s.layers.enable(i),s.viewport=new Me,T[i]=s),s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&D.matrix.copy(s.matrix),!0===n&&D.cameras.push(s)}}for(let e=0;e<f.length;e++){const t=_[e],n=f[e];null!==t&&void 0!==n&&n.update(t,i,o||a)}if(O&&O(t,i),i.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:i.detectedPlanes});let e=null;for(const t of v)i.detectedPlanes.has(t)||(null===e&&(e=[]),e.push(t));if(null!==e)for(const t of e)v.delete(t),C.delete(t),n.dispatchEvent({type:"planeremoved",data:t});for(const e of i.detectedPlanes)if(v.has(e)){const t=C.get(e);e.lastChangedTime>t&&(C.set(e,e.lastChangedTime),n.dispatchEvent({type:"planechanged",data:e}))}else v.add(e),C.set(e,i.lastChangedTime),n.dispatchEvent({type:"planeadded",data:e})}d=null})),this.setAnimationLoop=function(e){O=e},this.dispose=function(){}}}function ga(e,t){function n(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map),i.alphaMap&&(n.alphaMap.value=i.alphaMap),i.bumpMap&&(n.bumpMap.value=i.bumpMap,n.bumpScale.value=i.bumpScale,1===i.side&&(n.bumpScale.value*=-1)),i.displacementMap&&(n.displacementMap.value=i.displacementMap,n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap),i.normalMap&&(n.normalMap.value=i.normalMap,n.normalScale.value.copy(i.normalScale),1===i.side&&n.normalScale.value.negate()),i.specularMap&&(n.specularMap.value=i.specularMap),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);const r=t.get(i).envMap;if(r&&(n.envMap.value=r,n.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;const t=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*t}let a,s;i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity),i.map?a=i.map:i.specularMap?a=i.specularMap:i.displacementMap?a=i.displacementMap:i.normalMap?a=i.normalMap:i.bumpMap?a=i.bumpMap:i.roughnessMap?a=i.roughnessMap:i.metalnessMap?a=i.metalnessMap:i.alphaMap?a=i.alphaMap:i.emissiveMap?a=i.emissiveMap:i.clearcoatMap?a=i.clearcoatMap:i.clearcoatNormalMap?a=i.clearcoatNormalMap:i.clearcoatRoughnessMap?a=i.clearcoatRoughnessMap:i.iridescenceMap?a=i.iridescenceMap:i.iridescenceThicknessMap?a=i.iridescenceThicknessMap:i.specularIntensityMap?a=i.specularIntensityMap:i.specularColorMap?a=i.specularColorMap:i.transmissionMap?a=i.transmissionMap:i.thicknessMap?a=i.thicknessMap:i.sheenColorMap?a=i.sheenColorMap:i.sheenRoughnessMap&&(a=i.sheenRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uvTransform.value.copy(a.matrix)),i.aoMap?s=i.aoMap:i.lightMap&&(s=i.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uv2Transform.value.copy(s.matrix))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,wn(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,i,r,a,s){i.isMeshBasicMaterial||i.isMeshLambertMaterial?n(e,i):i.isMeshToonMaterial?(n(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,i)):i.isMeshPhongMaterial?(n(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,i)):i.isMeshStandardMaterial?(n(e,i),function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap);n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap);const i=t.get(n).envMap;i&&(e.envMapIntensity.value=n.envMapIntensity)}(e,i),i.isMeshPhysicalMaterial&&function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate()));t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap);t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,i,s)):i.isMeshMatcapMaterial?(n(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,i)):i.isMeshDepthMaterial?n(e,i):i.isMeshDistanceMaterial?(n(e,i),function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,i)):i.isMeshNormalMaterial?n(e,i):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,n,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,i,r,a):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function fa(e,t,n,i){let r={},a={},s=[];const A=n.isWebGL2?e.getParameter(35375):0;function o(e,t,n){const i=e.value;if(void 0===n[t]){if("number"==typeof i)n[t]=i;else{const e=Array.isArray(i)?i:[i],r=[];for(let t=0;t<e.length;t++)r.push(e[t].clone());n[t]=r}return!0}if("number"==typeof i){if(n[t]!==i)return n[t]=i,!0}else{const e=Array.isArray(n[t])?n[t]:[n[t]],r=Array.isArray(i)?i:[i];for(let t=0;t<e.length;t++){const n=e[t];if(!1===n.equals(r[t]))return n.copy(r[t]),!0}}return!1}function l(e){const t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function c(t){const n=t.target;n.removeEventListener("dispose",c);const i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,h){let u=r[n.id];void 0===u&&(!function(e){const t=e.uniforms;let n=0;const i=16;let r=0;for(let e=0,a=t.length;e<a;e++){const a=t[e],s={boundary:0,storage:0},A=Array.isArray(a.value)?a.value:[a.value];for(let e=0,t=A.length;e<t;e++){const t=l(A[e]);s.boundary+=t.boundary,s.storage+=t.storage}if(a.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),a.__offset=n,e>0){r=n%i;0!==r&&i-r-s.boundary<0&&(n+=i-r,a.__offset=n)}n+=s.storage}r=n%i,r>0&&(n+=i-r);e.__size=n,e.__cache={}}(n),u=function(t){const n=function(){for(let e=0;e<A;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(35345,i),e.bufferData(35345,r,a),e.bindBuffer(35345,null),e.bindBufferBase(35345,n,i),i}(n),r[n.id]=u,n.addEventListener("dispose",c));const d=h.program;i.updateUBOMapping(n,d);const p=t.render.frame;a[n.id]!==p&&(!function(t){const n=r[t.id],i=t.uniforms,a=t.__cache;e.bindBuffer(35345,n);for(let t=0,n=i.length;t<n;t++){const n=i[t];if(!0===o(n,t,a)){const t=n.__offset,i=Array.isArray(n.value)?n.value:[n.value];let r=0;for(let a=0;a<i.length;a++){const s=i[a],A=l(s);"number"==typeof s?(n.__data[0]=s,e.bufferSubData(35345,t+r,n.__data)):s.isMatrix3?(n.__data[0]=s.elements[0],n.__data[1]=s.elements[1],n.__data[2]=s.elements[2],n.__data[3]=s.elements[0],n.__data[4]=s.elements[3],n.__data[5]=s.elements[4],n.__data[6]=s.elements[5],n.__data[7]=s.elements[0],n.__data[8]=s.elements[6],n.__data[9]=s.elements[7],n.__data[10]=s.elements[8],n.__data[11]=s.elements[0]):(s.toArray(n.__data,r),r+=A.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(35345,t,n.__data)}}e.bindBuffer(35345,null)}(n),a[n.id]=p)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);s=[],r={},a={}}}}function _a(t={}){this.isWebGLRenderer=!0;const n=void 0!==t.canvas?t.canvas:function(){const e=ae("canvas");return e.style.display="block",e}(),i=void 0!==t.context?t.context:null,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,A=void 0===t.premultipliedAlpha||t.premultipliedAlpha,o=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let h;h=null!==i?i.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let u=null,d=null;const p=[],m=[];this.domElement=n,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=R,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const g=this;let f=!1,_=0,y=0,w=null,E=-1,S=null;const I=new Me,T=new Me;let D=null,B=n.width,P=n.height,L=1,N=null,U=null;const Q=new Me(0,0,B,P),F=new Me(0,0,B,P);let O=!1;const G=new On;let z=!1,k=!1,V=null;const H=new at,W=new te,Y=new Te,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===w?L:1}let J,q,Z,$,ee,ne,ie,re,se,Ae,oe,le,ce,he,ue,de,pe,me,ge,fe,_e,ve,xe,ye,Ce=i;function be(e,t){for(let i=0;i<e.length;i++){const r=e[i],a=n.getContext(r,t);if(null!==a)return a}return null}try{const t={alpha:!0,depth:r,stencil:a,antialias:s,premultipliedAlpha:A,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${e}`),n.addEventListener("webglcontextlost",Ie,!1),n.addEventListener("webglcontextrestored",De,!1),n.addEventListener("webglcontextcreationerror",Be,!1),null===Ce){const e=["webgl2","webgl","experimental-webgl"];if(!0===g.isWebGL1Renderer&&e.shift(),Ce=be(e,t),null===Ce)throw be(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Ce.getShaderPrecisionFormat&&(Ce.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Ee(){J=new mi(Ce),q=new qn(Ce,J,t),J.init(q),ve=new la(Ce,J,q),Z=new Aa(Ce,J,q),$=new _i,ee=new jr,ne=new oa(Ce,J,Z,ee,q,ve,$),ie=new Zn(g),re=new pi(g),se=new zn(Ce,q),xe=new Xn(Ce,J,se,q),Ae=new gi(Ce,se,$,xe),oe=new Ci(Ce,Ae,se,$),ge=new yi(Ce,q,ne),de=new Kn(ee),le=new Yr(g,ie,re,J,q,xe,de),ce=new ga(g,ee),he=new Kr,ue=new ia(J,q),me=new jn(g,ie,re,Z,oe,h,A),pe=new sa(g,oe,q),ye=new fa(Ce,$,q,Z),fe=new Jn(Ce,J,$,q),_e=new fi(Ce,J,$,q),$.programs=le.programs,g.capabilities=q,g.extensions=J,g.properties=ee,g.renderLists=he,g.shadowMap=pe,g.state=Z,g.info=$}Ee();const Se=new ma(g,Ce);function Ie(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function De(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1;const e=$.autoReset,t=pe.enabled,n=pe.autoUpdate,i=pe.needsUpdate,r=pe.type;Ee(),$.autoReset=e,pe.enabled=t,pe.autoUpdate=n,pe.needsUpdate=i,pe.type=r}function Be(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Pe(e){const t=e.target;t.removeEventListener("dispose",Pe),function(e){(function(e){const t=ee.get(e).programs;void 0!==t&&(t.forEach((function(e){le.releaseProgram(e)})),e.isShaderMaterial&&le.releaseShaderCache(e))})(e),ee.remove(e)}(t)}this.xr=Se,this.getContext=function(){return Ce},this.getContextAttributes=function(){return Ce.getContextAttributes()},this.forceContextLoss=function(){const e=J.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=J.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(e){void 0!==e&&(L=e,this.setSize(B,P,!1))},this.getSize=function(e){return e.set(B,P)},this.setSize=function(e,t,i){Se.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(B=e,P=t,n.width=Math.floor(e*L),n.height=Math.floor(t*L),!1!==i&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(B*L,P*L).floor()},this.setDrawingBufferSize=function(e,t,i){B=e,P=t,L=i,n.width=Math.floor(e*i),n.height=Math.floor(t*i),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(I)},this.getViewport=function(e){return e.copy(Q)},this.setViewport=function(e,t,n,i){e.isVector4?Q.set(e.x,e.y,e.z,e.w):Q.set(e,t,n,i),Z.viewport(I.copy(Q).multiplyScalar(L).floor())},this.getScissor=function(e){return e.copy(F)},this.setScissor=function(e,t,n,i){e.isVector4?F.set(e.x,e.y,e.z,e.w):F.set(e,t,n,i),Z.scissor(T.copy(F).multiplyScalar(L).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(e){Z.setScissorTest(O=e)},this.setOpaqueSort=function(e){N=e},this.setTransparentSort=function(e){U=e},this.getClearColor=function(e){return e.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;e&&(i|=16384),t&&(i|=256),n&&(i|=1024),Ce.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Ie,!1),n.removeEventListener("webglcontextrestored",De,!1),n.removeEventListener("webglcontextcreationerror",Be,!1),he.dispose(),ue.dispose(),ee.dispose(),ie.dispose(),re.dispose(),oe.dispose(),xe.dispose(),ye.dispose(),le.dispose(),Se.dispose(),Se.removeEventListener("sessionstart",Le),Se.removeEventListener("sessionend",Ne),V&&(V.dispose(),V=null),Ue.stop()},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=j);const s=r.isMesh&&r.matrixWorld.determinant()<0,A=function(e,t,n,i,r){!0!==t.isScene&&(t=j);ne.resetTextureUnits();const a=t.fog,s=i.isMeshStandardMaterial?t.environment:null,A=null===w?g.outputEncoding:!0===w.isXRRenderTarget?w.texture.encoding:R,o=(i.isMeshStandardMaterial?re:ie).get(i.envMap||s),l=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!i.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,u=!!n.morphAttributes.normal,p=!!n.morphAttributes.color,m=i.toneMapped?g.toneMapping:0,f=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==f?f.length:0,v=ee.get(i),x=d.state.lights;if(!0===z&&(!0===k||e!==S)){const t=e===S&&i.id===E;de.setState(i,e,t)}let y=!1;i.version===v.__version?v.needsLights&&v.lightsStateVersion!==x.state.version||v.outputEncoding!==A||r.isInstancedMesh&&!1===v.instancing?y=!0:r.isInstancedMesh||!0!==v.instancing?r.isSkinnedMesh&&!1===v.skinning?y=!0:r.isSkinnedMesh||!0!==v.skinning?v.envMap!==o||!0===i.fog&&v.fog!==a?y=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===de.numPlanes&&v.numIntersection===de.numIntersection?(v.vertexAlphas!==l||v.vertexTangents!==c||v.morphTargets!==h||v.morphNormals!==u||v.morphColors!==p||v.toneMapping!==m||!0===q.isWebGL2&&v.morphTargetsCount!==_)&&(y=!0):y=!0:y=!0:y=!0:(y=!0,v.__version=i.version);let C=v.currentProgram;!0===y&&(C=ze(i,t,r));let M=!1,b=!1,I=!1;const T=C.getUniforms(),D=v.uniforms;Z.useProgram(C.program)&&(M=!0,b=!0,I=!0);i.id!==E&&(E=i.id,b=!0);if(M||S!==e){if(T.setValue(Ce,"projectionMatrix",e.projectionMatrix),q.logarithmicDepthBuffer&&T.setValue(Ce,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),S!==e&&(S=e,b=!0,I=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=T.map.cameraPosition;void 0!==t&&t.setValue(Ce,Y.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&T.setValue(Ce,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&T.setValue(Ce,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){T.setOptional(Ce,r,"bindMatrix"),T.setOptional(Ce,r,"bindMatrixInverse");const e=r.skeleton;e&&(q.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),T.setValue(Ce,"boneTexture",e.boneTexture,ne),T.setValue(Ce,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const B=n.morphAttributes;(void 0!==B.position||void 0!==B.normal||void 0!==B.color&&!0===q.isWebGL2)&&ge.update(r,n,i,C);(b||v.receiveShadow!==r.receiveShadow)&&(v.receiveShadow=r.receiveShadow,T.setValue(Ce,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(D.envMap.value=o,D.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1);b&&(T.setValue(Ce,"toneMappingExposure",g.toneMappingExposure),v.needsLights&&(U=I,(N=D).ambientLightColor.needsUpdate=U,N.lightProbe.needsUpdate=U,N.directionalLights.needsUpdate=U,N.directionalLightShadows.needsUpdate=U,N.pointLights.needsUpdate=U,N.pointLightShadows.needsUpdate=U,N.spotLights.needsUpdate=U,N.spotLightShadows.needsUpdate=U,N.rectAreaLights.needsUpdate=U,N.hemisphereLights.needsUpdate=U),a&&!0===i.fog&&ce.refreshFogUniforms(D,a),ce.refreshMaterialUniforms(D,i,L,P,V),Er.upload(Ce,v.uniformsList,D,ne));var N,U;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Er.upload(Ce,v.uniformsList,D,ne),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&T.setValue(Ce,"center",r.center);if(T.setValue(Ce,"modelViewMatrix",r.modelViewMatrix),T.setValue(Ce,"normalMatrix",r.normalMatrix),T.setValue(Ce,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(q.isWebGL2){const n=e[t];ye.update(n,C),ye.bind(n,C)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return C}(e,t,n,i,r);Z.setMaterial(i,s);let o=n.index,l=1;!0===i.wireframe&&(o=Ae.getWireframeAttribute(n),l=2);const c=n.drawRange,h=n.attributes.position;let u=c.start*l,p=(c.start+c.count)*l;null!==a&&(u=Math.max(u,a.start*l),p=Math.min(p,(a.start+a.count)*l)),null!==o?(u=Math.max(u,0),p=Math.min(p,o.count)):null!=h&&(u=Math.max(u,0),p=Math.min(p,h.count));const m=p-u;if(m<0||m===1/0)return;let f;xe.setup(r,i,A,n,o);let _=fe;if(null!==o&&(f=se.get(o),_=_e,_.setIndex(f)),r.isMesh)!0===i.wireframe?(Z.setLineWidth(i.wireframeLinewidth*X()),_.setMode(1)):_.setMode(4);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),Z.setLineWidth(e*X()),r.isLineSegments?_.setMode(1):r.isLineLoop?_.setMode(2):_.setMode(3)}else r.isPoints?_.setMode(0):r.isSprite&&_.setMode(4);if(r.isInstancedMesh)_.renderInstances(u,m,r.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);_.renderInstances(u,m,t)}else _.render(u,m)},this.compile=function(e,t){function n(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,ze(e,t,n),e.side=0,e.needsUpdate=!0,ze(e,t,n),e.side=2):ze(e,t,n)}d=ue.get(e),d.init(),m.push(d),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(g.physicallyCorrectLights),e.traverse((function(t){const i=t.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){n(i[r],e,t)}else n(i,e,t)})),m.pop(),d=null};let Re=null;function Le(){Ue.stop()}function Ne(){Ue.start()}const Ue=new Gn;function Qe(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||G.intersectsSprite(e)){i&&Y.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);const t=oe.update(e),r=e.material;r.visible&&u.push(e,t,r,n,Y.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==$.render.frame&&(e.skeleton.update(),e.skeleton.frame=$.render.frame),!e.frustumCulled||G.intersectsObject(e))){i&&Y.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);const t=oe.update(e),r=e.material;if(Array.isArray(r)){const i=t.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],A=r[s.materialIndex];A&&A.visible&&u.push(e,t,A,n,Y.z,s)}}else r.visible&&u.push(e,t,r,n,Y.z,null)}const r=e.children;for(let e=0,a=r.length;e<a;e++)Qe(r[e],t,n,i)}function Fe(e,t,n,i){const r=e.opaque,a=e.transmissive,A=e.transparent;d.setupLightsView(n),!0===z&&de.setGlobalState(g.clippingPlanes,n),a.length>0&&function(e,t,n){const i=q.isWebGL2;null===V&&(V=new we(1,1,{generateMipmaps:!0,type:J.has("EXT_color_buffer_half_float")?M:x,minFilter:v,samples:i&&!0===s?4:0}));g.getDrawingBufferSize(W),i?V.setSize(W.x,W.y):V.setSize(K(W.x),K(W.y));const r=g.getRenderTarget();g.setRenderTarget(V),g.clear();const a=g.toneMapping;g.toneMapping=0,Oe(e,t,n),g.toneMapping=a,ne.updateMultisampleRenderTarget(V),ne.updateRenderTargetMipmap(V),g.setRenderTarget(r)}(r,t,n),i&&Z.viewport(I.copy(i)),r.length>0&&Oe(r,t,n),a.length>0&&Oe(a,t,n),A.length>0&&Oe(A,t,n),Z.buffers.depth.setTest(!0),Z.buffers.depth.setMask(!0),Z.buffers.color.setMask(!0),Z.setPolygonOffset(!1)}function Oe(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],s=a.object,A=a.geometry,o=null===i?a.material:i,l=a.group;s.layers.test(n.layers)&&Ge(s,t,n,A,o,l)}}function Ge(e,t,n,i,r,a){e.onBeforeRender(g,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(g,t,n,i,e,a),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,g.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,g.renderBufferDirect(n,t,i,r,e,a),r.side=2):g.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(g,t,n,i,r,a)}function ze(e,t,n){!0!==t.isScene&&(t=j);const i=ee.get(e),r=d.state.lights,a=d.state.shadowsArray,s=r.state.version,A=le.getParameters(e,r.state,a,t,n),o=le.getProgramCacheKey(A);let l=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?re:ie).get(e.envMap||i.environment),void 0===l&&(e.addEventListener("dispose",Pe),l=new Map,i.programs=l);let c=l.get(o);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===s)return ke(e,A),c}else A.uniforms=le.getUniforms(e),e.onBuild(n,A,g),e.onBeforeCompile(A,g),c=le.acquireProgram(A,o),l.set(o,c),i.uniforms=A.uniforms;const h=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=de.uniform),ke(e,A),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=s,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);const u=c.getUniforms(),p=Er.seqWithValue(u.seq,h);return i.currentProgram=c,i.uniformsList=p,c}function ke(e,t){const n=ee.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Ue.setAnimationLoop((function(e){Re&&Re(e)})),"undefined"!=typeof self&&Ue.setContext(self),this.setAnimationLoop=function(e){Re=e,Se.setAnimationLoop(e),null===e?Ue.stop():Ue.start()},Se.addEventListener("sessionstart",Le),Se.addEventListener("sessionend",Ne),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===f)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Se.enabled&&!0===Se.isPresenting&&(!0===Se.cameraAutoUpdate&&Se.updateCamera(t),t=Se.getCamera()),!0===e.isScene&&e.onBeforeRender(g,e,t,w),d=ue.get(e,m.length),d.init(),m.push(d),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),G.setFromProjectionMatrix(H),k=this.localClippingEnabled,z=de.init(this.clippingPlanes,k),u=he.get(e,p.length),u.init(),p.push(u),Qe(e,t,0,g.sortObjects),u.finish(),!0===g.sortObjects&&u.sort(N,U),!0===z&&de.beginShadows();const n=d.state.shadowsArray;if(pe.render(n,e,t),!0===z&&de.endShadows(),!0===this.info.autoReset&&this.info.reset(),me.render(u,e),d.setupLights(g.physicallyCorrectLights),t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];Fe(u,e,i,i.viewport)}}else Fe(u,e,t);null!==w&&(ne.updateMultisampleRenderTarget(w),ne.updateRenderTargetMipmap(w)),!0===e.isScene&&e.onAfterRender(g,e,t),xe.resetDefaultState(),E=-1,S=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(e,t,n){ee.get(e.texture).__webglTexture=t,ee.get(e.depthTexture).__webglTexture=n;const i=ee.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===J.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=ee.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){w=e,_=t,y=n;let i=!0,r=null,a=!1,s=!1;if(e){const n=ee.get(e);void 0!==n.__useDefaultFramebuffer?(Z.bindFramebuffer(36160,null),i=!1):void 0===n.__webglFramebuffer?ne.setupRenderTarget(e):n.__hasExternalTextures&&ne.rebindTextures(e,ee.get(e.texture).__webglTexture,ee.get(e.depthTexture).__webglTexture);const A=e.texture;(A.isData3DTexture||A.isDataArrayTexture||A.isCompressedArrayTexture)&&(s=!0);const o=ee.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=o[t],a=!0):r=q.isWebGL2&&e.samples>0&&!1===ne.useMultisampledRTT(e)?ee.get(e).__webglMultisampledFramebuffer:o,I.copy(e.viewport),T.copy(e.scissor),D=e.scissorTest}else I.copy(Q).multiplyScalar(L).floor(),T.copy(F).multiplyScalar(L).floor(),D=O;if(Z.bindFramebuffer(36160,r)&&q.drawBuffers&&i&&Z.drawBuffers(e,r),Z.viewport(I),Z.scissor(T),Z.setScissorTest(D),a){const i=ee.get(e.texture);Ce.framebufferTexture2D(36160,36064,34069+t,i.__webglTexture,n)}else if(s){const i=ee.get(e.texture),r=t||0;Ce.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}E=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,s){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let A=ee.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(A=A[s]),A){Z.bindFramebuffer(36160,A);try{const s=e.texture,A=s.format,o=s.type;if(A!==b&&ve.convert(A)!==Ce.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=o===M&&(J.has("EXT_color_buffer_half_float")||q.isWebGL2&&J.has("EXT_color_buffer_float"));if(!(o===x||ve.convert(o)===Ce.getParameter(35738)||o===C&&(q.isWebGL2||J.has("OES_texture_float")||J.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&Ce.readPixels(t,n,i,r,ve.convert(A),ve.convert(o),a)}finally{const e=null!==w?ee.get(w).__webglFramebuffer:null;Z.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i);ne.setTexture2D(t,0),Ce.copyTexSubImage2D(3553,n,0,0,e.x,e.y,r,a),Z.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width,a=t.image.height,s=ve.convert(n.format),A=ve.convert(n.type);ne.setTexture2D(n,0),Ce.pixelStorei(37440,n.flipY),Ce.pixelStorei(37441,n.premultiplyAlpha),Ce.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?Ce.texSubImage2D(3553,i,e.x,e.y,r,a,s,A,t.image.data):t.isCompressedTexture?Ce.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):Ce.texSubImage2D(3553,i,e.x,e.y,s,A,t.image),0===i&&n.generateMipmaps&&Ce.generateMipmap(3553),Z.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(g.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,A=e.max.z-e.min.z+1,o=ve.convert(i.format),l=ve.convert(i.type);let c;if(i.isData3DTexture)ne.setTexture3D(i,0),c=32879;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ne.setTexture2DArray(i,0),c=35866}Ce.pixelStorei(37440,i.flipY),Ce.pixelStorei(37441,i.premultiplyAlpha),Ce.pixelStorei(3317,i.unpackAlignment);const h=Ce.getParameter(3314),u=Ce.getParameter(32878),d=Ce.getParameter(3316),p=Ce.getParameter(3315),m=Ce.getParameter(32877),f=n.isCompressedTexture?n.mipmaps[0]:n.image;Ce.pixelStorei(3314,f.width),Ce.pixelStorei(32878,f.height),Ce.pixelStorei(3316,e.min.x),Ce.pixelStorei(3315,e.min.y),Ce.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?Ce.texSubImage3D(c,r,t.x,t.y,t.z,a,s,A,o,l,f.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ce.compressedTexSubImage3D(c,r,t.x,t.y,t.z,a,s,A,o,f.data)):Ce.texSubImage3D(c,r,t.x,t.y,t.z,a,s,A,o,l,f),Ce.pixelStorei(3314,h),Ce.pixelStorei(32878,u),Ce.pixelStorei(3316,d),Ce.pixelStorei(3315,p),Ce.pixelStorei(32877,m),0===r&&i.generateMipmaps&&Ce.generateMipmap(c),Z.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ne.setTextureCube(e,0):e.isData3DTexture?ne.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ne.setTexture2DArray(e,0):ne.setTexture2D(e,0),Z.unbindTexture()},this.resetState=function(){_=0,y=0,w=null,Z.reset(),xe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends _a{}).prototype.isWebGL1Renderer=!0;class va extends Dt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class xa{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=F,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Y()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Y()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Y()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ya=new Te;class Ca{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ya.fromBufferAttribute(this,t),ya.applyMatrix4(e),this.setXYZ(t,ya.x,ya.y,ya.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ya.fromBufferAttribute(this,t),ya.applyNormalMatrix(e),this.setXYZ(t,ya.x,ya.y,ya.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ya.fromBufferAttribute(this,t),ya.transformDirection(e),this.setXYZ(t,ya.x,ya.y,ya.z);return this}setX(e,t){return this.normalized&&(t=$(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=$(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=$(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=$(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Z(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Z(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Z(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Z(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=$(t,this.array),n=$(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=$(t,this.array),n=$(n,this.array),i=$(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=$(t,this.array),n=$(n,this.array),i=$(i,this.array),r=$(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new jt(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ca(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ma extends En{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class wa extends Vt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ba extends Dt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ge(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}const Ea=new at,Sa=new Te,Ia=new Te;class Ta{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new te(512,512),this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new On,this._frameExtents=new te(1,1),this._viewportCount=1,this._viewports=[new Me(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Sa.setFromMatrixPosition(e.matrixWorld),t.position.copy(Sa),Ia.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ia),t.updateMatrixWorld(),Ea.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ea),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ea)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const Da=new at,Ba=new Te,Pa=new Te;class Ra extends Ta{constructor(){super(new In(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new te(4,2),this._viewportCount=6,this._viewports=[new Me(2,1,1,1),new Me(0,1,1,1),new Me(3,1,1,1),new Me(1,1,1,1),new Me(3,0,1,1),new Me(1,0,1,1)],this._cubeDirections=[new Te(1,0,0),new Te(-1,0,0),new Te(0,0,1),new Te(0,0,-1),new Te(0,1,0),new Te(0,-1,0)],this._cubeUps=[new Te(0,1,0),new Te(0,1,0),new Te(0,1,0),new Te(0,1,0),new Te(0,0,1),new Te(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ba.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ba),Pa.copy(n.position),Pa.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Pa),n.updateMatrixWorld(),i.makeTranslation(-Ba.x,-Ba.y,-Ba.z),Da.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Da)}}class La extends ba{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Ra}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Na extends an{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}const Ua="\\[\\]\\.:\\/",Qa=new RegExp("["+Ua+"]","g"),Fa="[^"+Ua+"]",Oa="[^"+Ua.replace("\\.","")+"]",Ga=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Fa)+/(WCOD+)?/.source.replace("WCOD",Oa)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fa)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fa)+"$"),za=["material","materials","bones","map"];class ka{constructor(e,t,n){this.path=t,this.parsedPath=n||ka.parseTrackName(t),this.node=ka.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new ka.Composite(e,t,n):new ka(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Qa,"")}static parseTrackName(e){const t=Ga.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==za.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t)return r;const a=n(r.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=ka.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const a=e[i];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let A=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}A=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(A=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(A=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[A],this.setValue=this.SetterByBindingTypeAndVersioning[A][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ka.Composite=class{constructor(e,t,n){const i=n||ka.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},ka.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ka.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ka.prototype.GetterByBindingType=[ka.prototype._getValue_direct,ka.prototype._getValue_array,ka.prototype._getValue_arrayElement,ka.prototype._getValue_toArray],ka.prototype.SetterByBindingTypeAndVersioning=[[ka.prototype._setValue_direct,ka.prototype._setValue_direct_setNeedsUpdate,ka.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ka.prototype._setValue_array,ka.prototype._setValue_array_setNeedsUpdate,ka.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ka.prototype._setValue_arrayElement,ka.prototype._setValue_arrayElement_setNeedsUpdate,ka.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ka.prototype._setValue_fromArray,ka.prototype._setValue_fromArray_setNeedsUpdate,ka.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Va extends xa{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}function Ha(e,t){return e.distance-t.distance}function Wa(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===i){const i=e.children;for(let e=0,r=i.length;e<r;e++)Wa(i[e],t,n,!0)}}class Ya{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(j(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:e}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=e);class ja extends vn{constructor(e){super(new an,e),this.castShadow=!0,this.receiveShadow=!0,this.matrixAutoUpdate=!1}dispose(){const{geometry:e}=this;e.dispose()}raycast(){}update({bounds:e,vertices:t}){const{geometry:n}=this,i=new xa(t,9);n.setAttribute("position",new Ca(i,3,0)),n.setAttribute("normal",new Ca(i,3,3)),n.setAttribute("color",new Ca(i,3,6)),n.boundingBox||(n.boundingBox=new Pe),n.boundingBox.min.set(e[0],e[1],e[2]),n.boundingBox.max.set(e[3],e[4],e[5]),n.boundingSphere||(n.boundingSphere=new qe),n.boundingBox.getBoundingSphere(n.boundingSphere)}}const Xa=new ge,Ja=new vn(new yn(1,1,1)),qa=[],Ka=new qe,Za=new at,$a=new Te;class es extends vn{constructor(e){const t=new Na;t.boundingSphere=new qe,t.setIndex(Ja.geometry.getIndex()),t.setAttribute("position",Ja.geometry.getAttribute("position")),t.setAttribute("normal",Ja.geometry.getAttribute("normal")),super(t,e),this.castShadow=!0,this.receiveShadow=!0,this.matrixAutoUpdate=!1}dispose(){const{geometry:e}=this;e.dispose()}getColor(e){const{geometry:t}=this,n=t.getAttribute("color");return Xa.fromBufferAttribute(n,e).convertLinearToSRGB()}raycast(e,t){const{geometry:n,matrixWorld:i,parent:r}=this;if(!r?.visible||!n.boundingSphere)return;if(Ka.copy(n.boundingSphere),Ka.applyMatrix4(i),!e.ray.intersectsSphere(Ka))return;const a=n.getAttribute("instance");for(let r=0,s=n.instanceCount;r<s;r++)$a.fromBufferAttribute(a,r),Ja.matrixWorld.multiplyMatrices(i,Za.makeTranslation($a.x,$a.y,$a.z)),Ja.raycast(e,qa),qa.forEach((e=>{e.object=this,e.instanceId=r,t.push(e)})),qa.length=0}update({voxels:e}){const{geometry:t}=this,n=new Va(e,6,1);t.setAttribute("instance",new Ca(n,3,0)),t.setAttribute("color",new Ca(n,3,3)),t.instanceCount=t._maxInstanceCount=n.count}}class ts extends ha{triangles;voxels;version=0;constructor({geometry:e,materials:t,position:n}){super(),this.position.copy(n),this.updateMatrixWorld(),this.matrixAutoUpdate=!1,this.triangles=new ja(t.triangles),this.add(this.triangles),this.voxels=new es(t.voxels),this.add(this.voxels),this.update(e)}dispose(){const{triangles:e,voxels:t}=this;e.dispose(),t.dispose()}update(e){if(!e)return void(this.visible=!1);const{triangles:t,voxels:n}=this;t.update(e),n.update(e),n.geometry.boundingBox=t.geometry.boundingBox,n.geometry.boundingSphere=t.geometry.boundingSphere,this.visible=!0}}class ns{chunkSize;data;constructor(e=32){this.chunkSize=e,this.data=new Map}get(e,t,n){const{chunkSize:i}=this,r=`${e}:${t}:${n}`;let a=this.data.get(r);return a||(a=new Uint32Array(i*i*i),this.data.set(r,a)),a}save(){}}class is{instances;queue;constructor({buffer:e,concurrency:t=navigator.hardwareConcurrency||1,options:n,program:i,script:r}){this.queue=[],i().then((i=>{this.instances=Array.from({length:t},(()=>{const t=new r;t.buffer=new Uint32Array(e),t.isBusy=!0,t.run=({buffers:e,resolve:n})=>{t.isBusy=!0,t.resolve=n;const i=e[0].length;e.forEach(((e,n)=>{t.buffer.set(e,i*n)})),t.postMessage(t.buffer,[t.buffer.buffer])};const a=()=>{t.removeEventListener("message",a),t.addEventListener("message",s);const e=this.queue.shift();e?t.run(e):t.isBusy=!1},s=({data:{buffer:e,data:n}})=>{t.buffer=e;const{resolve:i}=t;delete t.resolve,i(n);const r=this.queue.shift();r?t.run(r):t.isBusy=!1};return t.addEventListener("message",a),t.postMessage({options:n,program:i}),t}))}))}dispose(){const{instances:e}=this;e&&e.forEach((e=>e.terminate()))}run(e){const{instances:t,queue:n}=this;return new Promise((i=>{if(!t)return void n.push({buffers:e,resolve:i});let r;for(let e=0,n=t.length;e<n;e++)if(!t[e].isBusy){r=t[e];break}r?r.run({buffers:e,resolve:i}):n.push({buffers:e,resolve:i})}))}}function rs(e){return function(e,t,n,i){function r(e,t,n){var i=n?WebAssembly.instantiateStreaming:WebAssembly.instantiate,r=n?WebAssembly.compileStreaming:WebAssembly.compile;return t?i(e,t):r(e)}var a=null,s="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node;if(s)a=Buffer.from(n,"base64");else{var A=globalThis.atob(n),o=A.length;a=new Uint8Array(new ArrayBuffer(o));for(var l=0;l<o;l++)a[l]=A.charCodeAt(l)}return r(a,i,!1)}(0,0,"",e)}var as=null;try{var ss="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");as=ss.Worker}catch(e){}var As,os,ls,cs,hs,us,ds,ps=(As="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0fSxwcm9ncmFtOm99fSk9PnsoKHttZW1vcnk6ZSxwcm9ncmFtOnN9KT0+e2NvbnN0IHI9TWF0aC5jZWlsKGUucmVkdWNlKCgoZSx7dHlwZTpzLHNpemU6cn0pPT5lK3Iqcy5CWVRFU19QRVJfRUxFTUVOVCksMCkvNjU1MzYpKzIsdD1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOnIsbWF4aW11bTpyfSk7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHMse2Vudjp7bWVtb3J5OnR9fSkudGhlbigocz0+KHttZW1vcnk6ZS5yZWR1Y2UoKChlLHtpZDpyLHR5cGU6byxzaXplOm19KT0+e2NvbnN0IG49cy5leHBvcnRzLm1hbGxvYyhtKm8uQllURVNfUEVSX0VMRU1FTlQpO3JldHVybiBlW3JdPXthZGRyZXNzOm4sdmlldzpuZXcgbyh0LmJ1ZmZlcixuLG0pfSxlfSkse30pLHJ1bjpzLmV4cG9ydHMucnVufSkpKX0pKHttZW1vcnk6W3tpZDoiY2h1bmtzIix0eXBlOlVpbnQzMkFycmF5LHNpemU6dCp0KnQqOH0se2lkOiJjb3VudHMiLHR5cGU6SW50MzJBcnJheSxzaXplOjJ9LHtpZDoidmVydGljZXMiLHR5cGU6RmxvYXQzMkFycmF5LHNpemU6dCp0KnQqMyo5KjV9LHtpZDoidm94ZWxzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOnQqdCp0Ki41KjZ9LHtpZDoiYm91bmRzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOjZ9XSxwcm9ncmFtOm99KS50aGVuKCgoe21lbW9yeTpvLHJ1bjptfSk9PntlPXtjaHVua1NpemU6dCxtZW1vcnk6byxydW46bX0sc2VsZi5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzKSxzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHIpLHNlbGYucG9zdE1lc3NhZ2UoITApfSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpO2NvbnN0IHI9KHtkYXRhOnN9KT0+e2UubWVtb3J5LmNodW5rcy52aWV3LnNldChzKSxlLnJ1bihlLm1lbW9yeS5jaHVua3MuYWRkcmVzcyxlLm1lbW9yeS5jb3VudHMuYWRkcmVzcyxlLm1lbW9yeS52ZXJ0aWNlcy5hZGRyZXNzLGUubWVtb3J5LnZveGVscy5hZGRyZXNzLGUubWVtb3J5LmJvdW5kcy5hZGRyZXNzLGUuY2h1bmtTaXplKTtjb25zdFtyLHRdPWUubWVtb3J5LmNvdW50cy52aWV3O2lmKDA9PT1yKXJldHVybiB2b2lkIHNlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6ITF9LFtzLmJ1ZmZlcl0pO2NvbnN0IG89ZS5tZW1vcnkuYm91bmRzLnZpZXcuc2xpY2UoMCksbT1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMypyKjkpLG49ZS5tZW1vcnkudm94ZWxzLnZpZXcuc2xpY2UoMCw2KnQpO3NlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6e2JvdW5kczpvLHZlcnRpY2VzOm0sdm94ZWxzOm59fSxbcy5idWZmZXIsby5idWZmZXIsbS5idWZmZXIsbi5idWZmZXJdKX19KCk7Cgo=",null,!1,"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)?(cs=void 0===(os=null)?null:os,hs=function(e,t){return Buffer.from(e,"base64").toString(t?"utf16":"utf8")}(As,void 0!==(ls=!1)&&ls),us=hs.indexOf("\n",10)+1,ds=hs.substring(us)+(cs?"//# sourceMappingURL="+cs:""),function(e){return new as(ds,Object.assign({},e,{eval:!0}))}):function(e,t,n){var i;return function(t){return i=i||function(e,t,n){var i=void 0===t?null:t,r=function(e,t){var n=atob(e);if(t){for(var i=new Uint8Array(n.length),r=0,a=n.length;r<a;++r)i[r]=n.charCodeAt(r);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return n}(e,void 0!==n&&n),a=r.indexOf("\n",10)+1,s=r.substring(a)+(i?"//# sourceMappingURL="+i:""),A=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(A)}(e,null,false),new Worker(i,t)}}(As));const ms="function"==typeof self.queueMicrotask?self.queueMicrotask:e=>{Promise.resolve().then(e).catch((e=>setTimeout((()=>{throw e}))))};const gs={type:"change"},fs={type:"start"},_s={type:"end"};function vs(e){const t=new Ht;return t.color.setScalar(e),t}const xs=new ge;class ys{static NoiseType=Object.freeze({OpenSimplex2:"OpenSimplex2",OpenSimplex2S:"OpenSimplex2S",Cellular:"Cellular",Perlin:"Perlin",ValueCubic:"ValueCubic",Value:"Value"});static RotationType3D=Object.freeze({None:"None",ImproveXYPlanes:"ImproveXYPlanes",ImproveXZPlanes:"ImproveXZPlanes"});static FractalType=Object.freeze({None:"None",FBm:"FBm",Ridged:"Ridged",PingPong:"PingPong",DomainWarpProgressive:"DomainWarpProgressive",DomainWarpIndependent:"DomainWarpIndependent"});static CellularDistanceFunction=Object.freeze({Euclidean:"Euclidean",EuclideanSq:"EuclideanSq",Manhattan:"Manhattan",Hybrid:"Hybrid"});static CellularReturnType=Object.freeze({CellValue:"CellValue",Distance:"Distance",Distance2:"Distance2",Distance2Add:"Distance2Add",Distance2Sub:"Distance2Sub",Distance2Mul:"Distance2Mul",Distance2Div:"Distance2Div"});static DomainWarpType=Object.freeze({OpenSimplex2:"OpenSimplex2",OpenSimplex2Reduced:"OpenSimplex2Reduced",BasicGrid:"BasicGrid"});static TransformType3D=Object.freeze({None:"None",ImproveXYPlanes:"ImproveXYPlanes",ImproveXZPlanes:"ImproveXZPlanes",DefaultOpenSimplex2:"DefaultOpenSimplex2"});_Seed=1337;_Frequency=.01;_NoiseType=ys.NoiseType.OpenSimplex2;_RotationType3D=ys.RotationType3D.None;_TransformType3D=ys.TransformType3D.DefaultOpenSimplex2;_DomainWarpAmp=1;_FractalType=ys.FractalType.None;_Octaves=3;_Lacunarity=2;_Gain=.5;_WeightedStrength=0;_PingPongStrength=2;_FractalBounding=1/1.75;_CellularDistanceFunction=ys.CellularDistanceFunction.EuclideanSq;_CellularReturnType=ys.CellularReturnType.Distance;_CellularJitterModifier=1;_DomainWarpType=ys.DomainWarpType.OpenSimplex2;_WarpTransformType3D=ys.TransformType3D.DefaultOpenSimplex2;constructor(e){void 0!==e&&(this._Seed=e)}SetSeed(e){this._Seed=e}SetFrequency(e){this._Frequency=e}SetNoiseType(e){this._NoiseType=e,this._UpdateTransformType3D()}SetRotationType3D(e){this._RotationType3D=e,this._UpdateTransformType3D(),this._UpdateWarpTransformType3D()}SetFractalType(e){this._FractalType=e}SetFractalOctaves(e){this._Octaves=e,this._CalculateFractalBounding()}SetFractalLacunarity(e){this._Lacunarity=e}SetFractalGain(e){this._Gain=e,this._CalculateFractalBounding()}SetFractalWeightedStrength(e){this._WeightedStrength=e}SetFractalPingPongStrength(e){this._PingPongStrength=e}SetCellularDistanceFunction(e){this._CellularDistanceFunction=e}SetCellularReturnType(e){this._CellularReturnType=e}SetCellularJitter(e){this._CellularJitterModifier=e}SetDomainWarpType(e){this._DomainWarpType=e,this._UpdateWarpTransformType3D()}SetDomainWarpAmp(e){this._DomainWarpAmp=e}GetNoise(e,t,n){let i=(e,t)=>{switch(e*=this._Frequency,t*=this._Frequency,this._NoiseType){case ys.NoiseType.OpenSimplex2:case ys.NoiseType.OpenSimplex2S:let n=(e+t)*(.5*(1.7320508075688772-1));e+=n,t+=n}switch(this._FractalType){default:return this._GenNoiseSingleR2(this._Seed,e,t);case ys.FractalType.FBm:return this._GenFractalFBmR2(e,t);case ys.FractalType.Ridged:return this._GenFractalRidgedR2(e,t);case ys.FractalType.PingPong:return this._GenFractalPingPongR2(e,t)}},r=(e,t,n)=>{switch(e*=this._Frequency,t*=this._Frequency,n*=this._Frequency,this._TransformType3D){case ys.TransformType3D.ImproveXYPlanes:{let i=e+t,r=-.211324865405187*i;e+=r-(n*=.577350269189626),t+=r-n,n+=.577350269189626*i;break}case ys.TransformType3D.ImproveXZPlanes:{let i=e+n,r=-.211324865405187*i;e+=r-(t*=.577350269189626),n+=r-t,t+=.577350269189626*i;break}case ys.TransformType3D.DefaultOpenSimplex2:let i=(e+t+n)*(2/3);e=i-e,t=i-t,n=i-n}switch(this._FractalType){default:return this._GenNoiseSingleR3(this._Seed,e,t,n);case ys.FractalType.FBm:return this._GenFractalFBmR3(e,t,n);case ys.FractalType.Ridged:return this._GenFractalRidgedR3(e,t,n);case ys.FractalType.PingPong:return this._GenFractalPingPongR3(e,t,n)}};return 2===arguments.length?i(e,t):3===arguments.length?r(e,t,n):void 0}DomainWrap(e){switch(this._FractalType){default:this._DomainWarpSingle(e);break;case ys.FractalType.DomainWarpProgressive:this._DomainWarpFractalProgressive(e);break;case ys.FractalType.DomainWarpIndependent:this._DomainWarpFractalIndependent(e)}}_Gradients2D=[.130526192220052,.99144486137381,.38268343236509,.923879532511287,.608761429008721,.793353340291235,.793353340291235,.608761429008721,.923879532511287,.38268343236509,.99144486137381,.130526192220051,.99144486137381,-.130526192220051,.923879532511287,-.38268343236509,.793353340291235,-.60876142900872,.608761429008721,-.793353340291235,.38268343236509,-.923879532511287,.130526192220052,-.99144486137381,-.130526192220052,-.99144486137381,-.38268343236509,-.923879532511287,-.608761429008721,-.793353340291235,-.793353340291235,-.608761429008721,-.923879532511287,-.38268343236509,-.99144486137381,-.130526192220052,-.99144486137381,.130526192220051,-.923879532511287,.38268343236509,-.793353340291235,.608761429008721,-.608761429008721,.793353340291235,-.38268343236509,.923879532511287,-.130526192220052,.99144486137381,.130526192220052,.99144486137381,.38268343236509,.923879532511287,.608761429008721,.793353340291235,.793353340291235,.608761429008721,.923879532511287,.38268343236509,.99144486137381,.130526192220051,.99144486137381,-.130526192220051,.923879532511287,-.38268343236509,.793353340291235,-.60876142900872,.608761429008721,-.793353340291235,.38268343236509,-.923879532511287,.130526192220052,-.99144486137381,-.130526192220052,-.99144486137381,-.38268343236509,-.923879532511287,-.608761429008721,-.793353340291235,-.793353340291235,-.608761429008721,-.923879532511287,-.38268343236509,-.99144486137381,-.130526192220052,-.99144486137381,.130526192220051,-.923879532511287,.38268343236509,-.793353340291235,.608761429008721,-.608761429008721,.793353340291235,-.38268343236509,.923879532511287,-.130526192220052,.99144486137381,.130526192220052,.99144486137381,.38268343236509,.923879532511287,.608761429008721,.793353340291235,.793353340291235,.608761429008721,.923879532511287,.38268343236509,.99144486137381,.130526192220051,.99144486137381,-.130526192220051,.923879532511287,-.38268343236509,.793353340291235,-.60876142900872,.608761429008721,-.793353340291235,.38268343236509,-.923879532511287,.130526192220052,-.99144486137381,-.130526192220052,-.99144486137381,-.38268343236509,-.923879532511287,-.608761429008721,-.793353340291235,-.793353340291235,-.608761429008721,-.923879532511287,-.38268343236509,-.99144486137381,-.130526192220052,-.99144486137381,.130526192220051,-.923879532511287,.38268343236509,-.793353340291235,.608761429008721,-.608761429008721,.793353340291235,-.38268343236509,.923879532511287,-.130526192220052,.99144486137381,.130526192220052,.99144486137381,.38268343236509,.923879532511287,.608761429008721,.793353340291235,.793353340291235,.608761429008721,.923879532511287,.38268343236509,.99144486137381,.130526192220051,.99144486137381,-.130526192220051,.923879532511287,-.38268343236509,.793353340291235,-.60876142900872,.608761429008721,-.793353340291235,.38268343236509,-.923879532511287,.130526192220052,-.99144486137381,-.130526192220052,-.99144486137381,-.38268343236509,-.923879532511287,-.608761429008721,-.793353340291235,-.793353340291235,-.608761429008721,-.923879532511287,-.38268343236509,-.99144486137381,-.130526192220052,-.99144486137381,.130526192220051,-.923879532511287,.38268343236509,-.793353340291235,.608761429008721,-.608761429008721,.793353340291235,-.38268343236509,.923879532511287,-.130526192220052,.99144486137381,.130526192220052,.99144486137381,.38268343236509,.923879532511287,.608761429008721,.793353340291235,.793353340291235,.608761429008721,.923879532511287,.38268343236509,.99144486137381,.130526192220051,.99144486137381,-.130526192220051,.923879532511287,-.38268343236509,.793353340291235,-.60876142900872,.608761429008721,-.793353340291235,.38268343236509,-.923879532511287,.130526192220052,-.99144486137381,-.130526192220052,-.99144486137381,-.38268343236509,-.923879532511287,-.608761429008721,-.793353340291235,-.793353340291235,-.608761429008721,-.923879532511287,-.38268343236509,-.99144486137381,-.130526192220052,-.99144486137381,.130526192220051,-.923879532511287,.38268343236509,-.793353340291235,.608761429008721,-.608761429008721,.793353340291235,-.38268343236509,.923879532511287,-.130526192220052,.99144486137381,.38268343236509,.923879532511287,.923879532511287,.38268343236509,.923879532511287,-.38268343236509,.38268343236509,-.923879532511287,-.38268343236509,-.923879532511287,-.923879532511287,-.38268343236509,-.923879532511287,.38268343236509,-.38268343236509,.923879532511287];_RandVecs2D=[-.2700222198,-.9628540911,.3863092627,-.9223693152,.04444859006,-.999011673,-.5992523158,-.8005602176,-.7819280288,.6233687174,.9464672271,.3227999196,-.6514146797,-.7587218957,.9378472289,.347048376,-.8497875957,-.5271252623,-.879042592,.4767432447,-.892300288,-.4514423508,-.379844434,-.9250503802,-.9951650832,.0982163789,.7724397808,-.6350880136,.7573283322,-.6530343002,-.9928004525,-.119780055,-.0532665713,.9985803285,.9754253726,-.2203300762,-.7665018163,.6422421394,.991636706,.1290606184,-.994696838,.1028503788,-.5379205513,-.84299554,.5022815471,-.8647041387,.4559821461,-.8899889226,-.8659131224,-.5001944266,.0879458407,-.9961252577,-.5051684983,.8630207346,.7753185226,-.6315704146,-.6921944612,.7217110418,-.5191659449,-.8546734591,.8978622882,-.4402764035,-.1706774107,.9853269617,-.9353430106,-.3537420705,-.9992404798,.03896746794,-.2882064021,-.9575683108,-.9663811329,.2571137995,-.8759714238,-.4823630009,-.8303123018,-.5572983775,.05110133755,-.9986934731,-.8558373281,-.5172450752,.09887025282,.9951003332,.9189016087,.3944867976,-.2439375892,-.9697909324,-.8121409387,-.5834613061,-.9910431363,.1335421355,.8492423985,-.5280031709,-.9717838994,-.2358729591,.9949457207,.1004142068,.6241065508,-.7813392434,.662910307,.7486988212,-.7197418176,.6942418282,-.8143370775,-.5803922158,.104521054,-.9945226741,-.1065926113,-.9943027784,.445799684,-.8951327509,.105547406,.9944142724,-.992790267,.1198644477,-.8334366408,.552615025,.9115561563,-.4111755999,.8285544909,-.5599084351,.7217097654,-.6921957921,.4940492677,-.8694339084,-.3652321272,-.9309164803,-.9696606758,.2444548501,.08925509731,-.996008799,.5354071276,-.8445941083,-.1053576186,.9944343981,-.9890284586,.1477251101,.004856104961,.9999882091,.9885598478,.1508291331,.9286129562,-.3710498316,-.5832393863,-.8123003252,.3015207509,.9534596146,-.9575110528,.2883965738,.9715802154,-.2367105511,.229981792,.9731949318,.955763816,-.2941352207,.740956116,.6715534485,-.9971513787,-.07542630764,.6905710663,-.7232645452,-.290713703,-.9568100872,.5912777791,-.8064679708,-.9454592212,-.325740481,.6664455681,.74555369,.6236134912,.7817328275,.9126993851,-.4086316587,-.8191762011,.5735419353,-.8812745759,-.4726046147,.9953313627,.09651672651,.9855650846,-.1692969699,-.8495980887,.5274306472,.6174853946,-.7865823463,.8508156371,.52546432,.9985032451,-.05469249926,.1971371563,-.9803759185,.6607855748,-.7505747292,-.03097494063,.9995201614,-.6731660801,.739491331,-.7195018362,-.6944905383,.9727511689,.2318515979,.9997059088,-.0242506907,.4421787429,-.8969269532,.9981350961,-.061043673,-.9173660799,-.3980445648,-.8150056635,-.5794529907,-.8789331304,.4769450202,.0158605829,.999874213,-.8095464474,.5870558317,-.9165898907,-.3998286786,-.8023542565,.5968480938,-.5176737917,.8555780767,-.8154407307,-.5788405779,.4022010347,-.9155513791,-.9052556868,-.4248672045,.7317445619,.6815789728,-.5647632201,-.8252529947,-.8403276335,-.5420788397,-.9314281527,.363925262,.5238198472,.8518290719,.7432803869,-.6689800195,-.985371561,-.1704197369,.4601468731,.88784281,.825855404,.5638819483,.6182366099,.7859920446,.8331502863,-.553046653,.1500307506,.9886813308,-.662330369,-.7492119075,-.668598664,.743623444,.7025606278,.7116238924,-.5419389763,-.8404178401,-.3388616456,.9408362159,.8331530315,.5530425174,-.2989720662,-.9542618632,.2638522993,.9645630949,.124108739,-.9922686234,-.7282649308,-.6852956957,.6962500149,.7177993569,-.9183535368,.3957610156,-.6326102274,-.7744703352,-.9331891859,-.359385508,-.1153779357,-.9933216659,.9514974788,-.3076565421,-.08987977445,-.9959526224,.6678496916,.7442961705,.7952400393,-.6062947138,-.6462007402,-.7631674805,-.2733598753,.9619118351,.9669590226,-.254931851,-.9792894595,.2024651934,-.5369502995,-.8436138784,-.270036471,-.9628500944,-.6400277131,.7683518247,-.7854537493,-.6189203566,.06005905383,-.9981948257,-.02455770378,.9996984141,-.65983623,.751409442,-.6253894466,-.7803127835,-.6210408851,-.7837781695,.8348888491,.5504185768,-.1592275245,.9872419133,.8367622488,.5475663786,-.8675753916,-.4973056806,-.2022662628,-.9793305667,.9399189937,.3413975472,.9877404807,-.1561049093,-.9034455656,.4287028224,.1269804218,-.9919052235,-.3819600854,.924178821,.9754625894,.2201652486,-.3204015856,-.9472818081,-.9874760884,.1577687387,.02535348474,-.9996785487,.4835130794,-.8753371362,-.2850799925,-.9585037287,-.06805516006,-.99768156,-.7885244045,-.6150034663,.3185392127,-.9479096845,.8880043089,.4598351306,.6476921488,-.7619021462,.9820241299,.1887554194,.9357275128,-.3527237187,-.8894895414,.4569555293,.7922791302,.6101588153,.7483818261,.6632681526,-.7288929755,-.6846276581,.8729032783,-.4878932944,.8288345784,.5594937369,.08074567077,.9967347374,.9799148216,-.1994165048,-.580730673,-.8140957471,-.4700049791,-.8826637636,.2409492979,.9705377045,.9437816757,-.3305694308,-.8927998638,-.4504535528,-.8069622304,.5906030467,.06258973166,.9980393407,-.9312597469,.3643559849,.5777449785,.8162173362,-.3360095855,-.941858566,.697932075,-.7161639607,-.002008157227,-.9999979837,-.1827294312,-.9831632392,-.6523911722,.7578824173,-.4302626911,-.9027037258,-.9985126289,-.05452091251,-.01028102172,-.9999471489,-.4946071129,.8691166802,-.2999350194,.9539596344,.8165471961,.5772786819,.2697460475,.962931498,-.7306287391,-.6827749597,-.7590952064,-.6509796216,-.907053853,.4210146171,-.5104861064,-.8598860013,.8613350597,.5080373165,.5007881595,-.8655698812,-.654158152,.7563577938,-.8382755311,-.545246856,.6940070834,.7199681717,.06950936031,.9975812994,.1702942185,-.9853932612,.2695973274,.9629731466,.5519612192,-.8338697815,.225657487,-.9742067022,.4215262855,-.9068161835,.4881873305,-.8727388672,-.3683854996,-.9296731273,-.9825390578,.1860564427,.81256471,.5828709909,.3196460933,-.9475370046,.9570913859,.2897862643,-.6876655497,-.7260276109,-.9988770922,-.047376731,-.1250179027,.992154486,-.8280133617,.560708367,.9324863769,-.3612051451,.6394653183,.7688199442,-.01623847064,-.9998681473,-.9955014666,-.09474613458,-.81453315,.580117012,.4037327978,-.9148769469,.9944263371,.1054336766,-.1624711654,.9867132919,-.9949487814,-.100383875,-.6995302564,.7146029809,.5263414922,-.85027327,-.5395221479,.841971408,.6579370318,.7530729462,.01426758847,-.9998982128,-.6734383991,.7392433447,.639412098,-.7688642071,.9211571421,.3891908523,-.146637214,-.9891903394,-.782318098,.6228791163,-.5039610839,-.8637263605,-.7743120191,-.6328039957];_Gradients3D=[0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,1,0,1,0,-1,0,1,0,1,0,-1,0,-1,0,-1,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,0,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,1,0,1,0,-1,0,1,0,1,0,-1,0,-1,0,-1,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,0,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,1,0,1,0,-1,0,1,0,1,0,-1,0,-1,0,-1,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,0,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,1,0,1,0,-1,0,1,0,1,0,-1,0,-1,0,-1,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,0,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,1,0,1,0,-1,0,1,0,1,0,-1,0,-1,0,-1,0,1,1,0,0,-1,1,0,0,1,-1,0,0,-1,-1,0,0,1,1,0,0,0,-1,1,0,-1,1,0,0,0,-1,-1,0];_RandVecs3D=[-.7292736885,-.6618439697,.1735581948,0,.790292081,-.5480887466,-.2739291014,0,.7217578935,.6226212466,-.3023380997,0,.565683137,-.8208298145,-.0790000257,0,.760049034,-.5555979497,-.3370999617,0,.3713945616,.5011264475,.7816254623,0,-.1277062463,-.4254438999,-.8959289049,0,-.2881560924,-.5815838982,.7607405838,0,.5849561111,-.662820239,-.4674352136,0,.3307171178,.0391653737,.94291689,0,.8712121778,-.4113374369,-.2679381538,0,.580981015,.7021915846,.4115677815,0,.503756873,.6330056931,-.5878203852,0,.4493712205,.601390195,.6606022552,0,-.6878403724,.09018890807,-.7202371714,0,-.5958956522,-.6469350577,.475797649,0,-.5127052122,.1946921978,-.8361987284,0,-.9911507142,-.05410276466,-.1212153153,0,-.2149721042,.9720882117,-.09397607749,0,-.7518650936,-.5428057603,.3742469607,0,.5237068895,.8516377189,-.02107817834,0,.6333504779,.1926167129,-.7495104896,0,-.06788241606,.3998305789,.9140719259,0,-.5538628599,-.4729896695,-.6852128902,0,-.7261455366,-.5911990757,.3509933228,0,-.9229274737,-.1782808786,.3412049336,0,-.6968815002,.6511274338,.3006480328,0,.9608044783,-.2098363234,-.1811724921,0,.06817146062,-.9743405129,.2145069156,0,-.3577285196,-.6697087264,-.6507845481,0,-.1868621131,.7648617052,-.6164974636,0,-.6541697588,.3967914832,.6439087246,0,.6993340405,-.6164538506,.3618239211,0,-.1546665739,.6291283928,.7617583057,0,-.6841612949,-.2580482182,-.6821542638,0,.5383980957,.4258654885,.7271630328,0,-.5026987823,-.7939832935,-.3418836993,0,.3202971715,.2834415347,.9039195862,0,.8683227101,-.0003762656404,-.4959995258,0,.791120031,-.08511045745,.6057105799,0,-.04011016052,-.4397248749,.8972364289,0,.9145119872,.3579346169,-.1885487608,0,-.9612039066,-.2756484276,.01024666929,0,.6510361721,-.2877799159,-.7023778346,0,-.2041786351,.7365237271,.644859585,0,-.7718263711,.3790626912,.5104855816,0,-.3060082741,-.7692987727,.5608371729,0,.454007341,-.5024843065,.7357899537,0,.4816795475,.6021208291,-.6367380315,0,.6961980369,-.3222197429,.641469197,0,-.6532160499,-.6781148932,.3368515753,0,.5089301236,-.6154662304,-.6018234363,0,-.1635919754,-.9133604627,-.372840892,0,.52408019,-.8437664109,.1157505864,0,.5902587356,.4983817807,-.6349883666,0,.5863227872,.494764745,.6414307729,0,.6779335087,.2341345225,.6968408593,0,.7177054546,-.6858979348,.120178631,0,-.5328819713,-.5205125012,.6671608058,0,-.8654874251,-.0700727088,-.4960053754,0,-.2861810166,.7952089234,.5345495242,0,-.04849529634,.9810836427,-.1874115585,0,-.6358521667,.6058348682,.4781800233,0,.6254794696,-.2861619734,.7258696564,0,-.2585259868,.5061949264,-.8227581726,0,.02136306781,.5064016808,-.8620330371,0,.200111773,.8599263484,.4695550591,0,.4743561372,.6014985084,-.6427953014,0,.6622993731,-.5202474575,-.5391679918,0,.08084972818,-.6532720452,.7527940996,0,-.6893687501,.0592860349,.7219805347,0,-.1121887082,-.9673185067,.2273952515,0,.7344116094,.5979668656,-.3210532909,0,.5789393465,-.2488849713,.7764570201,0,.6988182827,.3557169806,-.6205791146,0,-.8636845529,-.2748771249,-.4224826141,0,-.4247027957,-.4640880967,.777335046,0,.5257722489,-.8427017621,.1158329937,0,.9343830603,.316302472,-.1639543925,0,-.1016836419,-.8057303073,-.5834887393,0,-.6529238969,.50602126,-.5635892736,0,-.2465286165,-.9668205684,-.06694497494,0,-.9776897119,-.2099250524,-.007368825344,0,.7736893337,.5734244712,.2694238123,0,-.6095087895,.4995678998,.6155736747,0,.5794535482,.7434546771,.3339292269,0,-.8226211154,.08142581855,.5627293636,0,-.510385483,.4703667658,.7199039967,0,-.5764971849,-.07231656274,-.8138926898,0,.7250628871,.3949971505,-.5641463116,0,-.1525424005,.4860840828,-.8604958341,0,-.5550976208,-.4957820792,.667882296,0,-.1883614327,.9145869398,.357841725,0,.7625556724,-.5414408243,-.3540489801,0,-.5870231946,-.3226498013,-.7424963803,0,.3051124198,.2262544068,-.9250488391,0,.6379576059,.577242424,-.5097070502,0,-.5966775796,.1454852398,-.7891830656,0,-.658330573,.6555487542,-.3699414651,0,.7434892426,.2351084581,.6260573129,0,.5562114096,.8264360377,-.0873632843,0,-.3028940016,-.8251527185,.4768419182,0,.1129343818,-.985888439,-.1235710781,0,.5937652891,-.5896813806,.5474656618,0,.6757964092,-.5835758614,-.4502648413,0,.7242302609,-.1152719764,.6798550586,0,-.9511914166,.0753623979,-.2992580792,0,.2539470961,-.1886339355,.9486454084,0,.571433621,-.1679450851,-.8032795685,0,-.06778234979,.3978269256,.9149531629,0,.6074972649,.733060024,-.3058922593,0,-.5435478392,.1675822484,.8224791405,0,-.5876678086,-.3380045064,-.7351186982,0,-.7967562402,.04097822706,-.6029098428,0,-.1996350917,.8706294745,.4496111079,0,-.02787660336,-.9106232682,-.4122962022,0,-.7797625996,-.6257634692,.01975775581,0,-.5211232846,.7401644346,-.4249554471,0,.8575424857,.4053272873,-.3167501783,0,.1045223322,.8390195772,-.5339674439,0,.3501822831,.9242524096,-.1520850155,0,.1987849858,.07647613266,.9770547224,0,.7845996363,.6066256811,-.1280964233,0,.09006737436,-.9750989929,-.2026569073,0,-.8274343547,-.542299559,.1458203587,0,-.3485797732,-.415802277,.840000362,0,-.2471778936,-.7304819962,-.6366310879,0,-.3700154943,.8577948156,.3567584454,0,.5913394901,-.548311967,-.5913303597,0,.1204873514,-.7626472379,-.6354935001,0,.616959265,.03079647928,.7863922953,0,.1258156836,-.6640829889,-.7369967419,0,-.6477565124,-.1740147258,-.7417077429,0,.6217889313,-.7804430448,-.06547655076,0,.6589943422,-.6096987708,.4404473475,0,-.2689837504,-.6732403169,-.6887635427,0,-.3849775103,.5676542638,.7277093879,0,.5754444408,.8110471154,-.1051963504,0,.9141593684,.3832947817,.131900567,0,-.107925319,.9245493968,.3654593525,0,.377977089,.3043148782,.8743716458,0,-.2142885215,-.8259286236,.5214617324,0,.5802544474,.4148098596,-.7008834116,0,-.1982660881,.8567161266,-.4761596756,0,-.03381553704,.3773180787,-.9254661404,0,-.6867922841,-.6656597827,.2919133642,0,.7731742607,-.2875793547,-.5652430251,0,-.09655941928,.9193708367,-.3813575004,0,.2715702457,-.9577909544,-.09426605581,0,.2451015704,-.6917998565,-.6792188003,0,.977700782,-.1753855374,.1155036542,0,-.5224739938,.8521606816,.02903615945,0,-.7734880599,-.5261292347,.3534179531,0,-.7134492443,-.269547243,.6467878011,0,.1644037271,.5105846203,-.8439637196,0,.6494635788,.05585611296,.7583384168,0,-.4711970882,.5017280509,-.7254255765,0,-.6335764307,-.2381686273,-.7361091029,0,-.9021533097,-.270947803,-.3357181763,0,-.3793711033,.872258117,.3086152025,0,-.6855598966,-.3250143309,.6514394162,0,.2900942212,-.7799057743,-.5546100667,0,-.2098319339,.85037073,.4825351604,0,-.4592603758,.6598504336,-.5947077538,0,.8715945488,.09616365406,-.4807031248,0,-.6776666319,.7118504878,-.1844907016,0,.7044377633,.312427597,.637304036,0,-.7052318886,-.2401093292,-.6670798253,0,.081921007,-.7207336136,-.6883545647,0,-.6993680906,-.5875763221,-.4069869034,0,-.1281454481,.6419895885,.7559286424,0,-.6337388239,-.6785471501,-.3714146849,0,.5565051903,-.2168887573,-.8020356851,0,-.5791554484,.7244372011,-.3738578718,0,.1175779076,-.7096451073,.6946792478,0,-.6134619607,.1323631078,.7785527795,0,.6984635305,-.02980516237,-.715024719,0,.8318082963,-.3930171956,.3919597455,0,.1469576422,.05541651717,-.9875892167,0,.708868575,-.2690503865,.6520101478,0,.2726053183,.67369766,-.68688995,0,-.6591295371,.3035458599,-.6880466294,0,.4815131379,-.7528270071,.4487723203,0,.9430009463,.1675647412,-.2875261255,0,.434802957,.7695304522,-.4677277752,0,.3931996188,.594473625,.7014236729,0,.7254336655,-.603925654,.3301814672,0,.7590235227,-.6506083235,.02433313207,0,-.8552768592,-.3430042733,.3883935666,0,-.6139746835,.6981725247,.3682257648,0,-.7465905486,-.5752009504,.3342849376,0,.5730065677,.810555537,-.1210916791,0,-.9225877367,-.3475211012,-.167514036,0,-.7105816789,-.4719692027,-.5218416899,0,-.08564609717,.3583001386,.929669703,0,-.8279697606,-.2043157126,.5222271202,0,.427944023,.278165994,.8599346446,0,.5399079671,-.7857120652,-.3019204161,0,.5678404253,-.5495413974,-.6128307303,0,-.9896071041,.1365639107,-.04503418428,0,-.6154342638,-.6440875597,.4543037336,0,.1074204368,-.7946340692,.5975094525,0,-.3595449969,-.8885529948,.28495784,0,-.2180405296,.1529888965,.9638738118,0,-.7277432317,-.6164050508,-.3007234646,0,.7249729114,-.00669719484,.6887448187,0,-.5553659455,-.5336586252,.6377908264,0,.5137558015,.7976208196,-.3160000073,0,-.3794024848,.9245608561,-.03522751494,0,.8229248658,.2745365933,-.4974176556,0,-.5404114394,.6091141441,.5804613989,0,.8036581901,-.2703029469,.5301601931,0,.6044318879,.6832968393,.4095943388,0,.06389988817,.9658208605,-.2512108074,0,.1087113286,.7402471173,-.6634877936,0,-.713427712,-.6926784018,.1059128479,0,.6458897819,-.5724548511,-.5050958653,0,-.6553931414,.7381471625,.159995615,0,.3910961323,.9188871375,-.05186755998,0,-.4879022471,-.5904376907,.6429111375,0,.6014790094,.7707441366,-.2101820095,0,-.5677173047,.7511360995,.3368851762,0,.7858573506,.226674665,.5753666838,0,-.4520345543,-.604222686,-.6561857263,0,.002272116345,.4132844051,-.9105991643,0,-.5815751419,-.5162925989,.6286591339,0,-.03703704785,.8273785755,.5604221175,0,-.5119692504,.7953543429,-.3244980058,0,-.2682417366,-.9572290247,-.1084387619,0,-.2322482736,-.9679131102,-.09594243324,0,.3554328906,-.8881505545,.2913006227,0,.7346520519,-.4371373164,.5188422971,0,.9985120116,.04659011161,-.02833944577,0,-.3727687496,-.9082481361,.1900757285,0,.91737377,-.3483642108,.1925298489,0,.2714911074,.4147529736,-.8684886582,0,.5131763485,-.7116334161,.4798207128,0,-.8737353606,.18886992,-.4482350644,0,.8460043821,-.3725217914,.3814499973,0,.8978727456,-.1780209141,-.4026575304,0,.2178065647,-.9698322841,-.1094789531,0,-.1518031304,-.7788918132,-.6085091231,0,-.2600384876,-.4755398075,-.8403819825,0,.572313509,-.7474340931,-.3373418503,0,-.7174141009,.1699017182,-.6756111411,0,-.684180784,.02145707593,-.7289967412,0,-.2007447902,.06555605789,-.9774476623,0,-.1148803697,-.8044887315,.5827524187,0,-.7870349638,.03447489231,.6159443543,0,-.2015596421,.6859872284,.6991389226,0,-.08581082512,-.10920836,-.9903080513,0,.5532693395,.7325250401,-.396610771,0,-.1842489331,-.9777375055,-.1004076743,0,.0775473789,-.9111505856,.4047110257,0,.1399838409,.7601631212,-.6344734459,0,.4484419361,-.845289248,.2904925424,0];_PrimeX=501125321;_PrimeY=1136930381;_PrimeZ=1720413743;static _Lerp(e,t,n){return e+n*(t-e)}static _InterpHermite(e){return e*e*(3-2*e)}static _InterpQuintic(e){return e*e*e*(e*(6*e-15)+10)}static _CubicLerp(e,t,n,i,r){let a=i-n-(e-t);return r*r*r*a+r*r*(e-t-a)+r*(n-e)+t}static _PingPong(e){return(e-=Math.trunc(.5*e*2))<1?e:2-e}_CalculateFractalBounding(){let e=Math.abs(this._Gain),t=e,n=1;for(let i=1;i<this._Octaves;i++)n+=t,t*=e;this._FractalBounding=1/n}_HashR2(e,t,n){let i=Math.trunc(e^t^n);return i=668265261*i>>>0,i}_HashR3(e,t,n,i){let r=Math.trunc(e^t^n^i);return r=668265261*r>>>0,r}_ValCoordR2(e,t,n){let i=this._HashR2(e,t,n);return i*=i,i^=i<<19,i*(1/2147483648)}_ValCoordR3(e,t,n,i){let r=this._HashR3(e,t,n,i);return r*=r,r^=r<<19,r*(1/2147483648)}_GradCoordR2(e,t,n,i,r){let a=this._HashR2(e,t,n);return a^=a>>15,a&=254,i*this._Gradients2D[a]+r*this._Gradients2D[1|a]}_GradCoordR3(e,t,n,i,r,a,s){let A=this._HashR3(e,t,n,i);return A^=A>>15,A&=252,r*this._Gradients3D[A]+a*this._Gradients3D[1|A]+s*this._Gradients3D[2|A]}_GenNoiseSingleR2(e,t,n){switch(this._NoiseType){case ys.NoiseType.OpenSimplex2:return this._SingleOpenSimplex2R2(e,t,n);case ys.NoiseType.OpenSimplex2S:return this._SingleOpenSimplex2SR2(e,t,n);case ys.NoiseType.Cellular:return this._SingleCellularR2(e,t,n);case ys.NoiseType.Perlin:return this._SinglePerlinR2(e,t,n);case ys.NoiseType.ValueCubic:return this._SingleValueCubicR2(e,t,n);case ys.NoiseType.Value:return this._SingleValueR2(e,t,n);default:return 0}}_GenNoiseSingleR3(e,t,n,i){switch(this._NoiseType){case ys.NoiseType.OpenSimplex2:return this._SingleOpenSimplex2R3(e,t,n,i);case ys.NoiseType.OpenSimplex2S:return this._SingleOpenSimplex2SR3(e,t,n,i);case ys.NoiseType.Cellular:return this._SingleCellularR3(e,t,n,i);case ys.NoiseType.Perlin:return this._SinglePerlinR3(e,t,n,i);case ys.NoiseType.ValueCubic:return this._SingleValueCubicR3(e,t,n,i);case ys.NoiseType.Value:return this._SingleValueR3(e,t,n,i);default:return 0}}_UpdateTransformType3D(){switch(this._RotationType3D){case ys.RotationType3D.ImproveXYPlanes:this._TransformType3D=ys.TransformType3D.ImproveXYPlanes;break;case ys.RotationType3D.ImproveXZPlanes:this._TransformType3D=ys.TransformType3D.ImproveXZPlanes;break;default:switch(this._NoiseType){case ys.NoiseType.OpenSimplex2:case ys.NoiseType.OpenSimplex2S:this._TransformType3D=ys.TransformType3D.DefaultOpenSimplex2;break;default:this._TransformType3D=ys.TransformType3D.None}}}_UpdateWarpTransformType3D(){switch(this._RotationType3D){case ys.RotationType3D.ImproveXYPlanes:this._WarpTransformType3D=ys.TransformType3D.ImproveXYPlanes;break;case ys.RotationType3D.ImproveXZPlanes:this._WarpTransformType3D=ys.TransformType3D.ImproveXZPlanes;break;default:switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:case ys.DomainWarpType.OpenSimplex2Reduced:this._WarpTransformType3D=ys.TransformType3D.DefaultOpenSimplex2;break;default:this._WarpTransformType3D=ys.TransformType3D.None}}}_GenFractalFBmR2(e,t){let n=this._Seed,i=0,r=this._FractalBounding;for(let a=0;a<this._Octaves;a++){let a=this._GenNoiseSingleR2(n++,e,t);i+=a*r,r*=ys._Lerp(1,.5*Math.min(a+1,2),this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,r*=this._Gain}return i}_GenFractalFBmR3(e,t,n){let i=this._Seed,r=0,a=this._FractalBounding;for(let s=0;s<this._Octaves;s++){let s=this._GenNoiseSingleR3(i++,e,t,n);r+=s*a,a*=ys._Lerp(1,.5*(s+1),this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,n*=this._Lacunarity,a*=this._Gain}return r}_GenFractalRidgedR2(e,t){let n=this._Seed,i=0,r=this._FractalBounding;for(let a=0;a<this._Octaves;a++){let a=Math.abs(this._GenNoiseSingleR2(n++,e,t));i+=(-2*a+1)*r,r*=ys._Lerp(1,1-a,this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,r*=this._Gain}return i}_GenFractalRidgedR3(e,t,n){let i=this._Seed,r=0,a=this._FractalBounding;for(let s=0;s<this._Octaves;s++){let s=Math.abs(this._GenNoiseSingleR3(i++,e,t,n));r+=(-2*s+1)*a,a*=ys._Lerp(1,1-s,this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,n*=this._Lacunarity,a*=this._Gain}return r}_GenFractalPingPongR2(e,t){let n=this._Seed,i=0,r=this._FractalBounding;for(let a=0;a<this._Octaves;a++){let a=ys._PingPong((this._GenNoiseSingleR2(n++,e,t)+1)*this._PingPongStrength);i+=2*(a-.5)*r,r*=ys._Lerp(1,a,this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,r*=this._Gain}return i}_GenFractalPingPongR3(e,t,n){let i=this._Seed,r=0,a=this._FractalBounding;for(let s=0;s<this._Octaves;s++){let s=ys._PingPong((this._GenNoiseSingleR3(i++,e,t,n)+1)*this._PingPongStrength);r+=2*(s-.5)*a,a*=ys._Lerp(1,s,this._WeightedStrength),e*=this._Lacunarity,t*=this._Lacunarity,n*=this._Lacunarity,a*=this._Gain}return r}_SingleOpenSimplex2R2(e,t,n){const i=.21132486540518713;let r,a,s,A=Math.floor(t),o=Math.floor(n),l=t-A,c=n-o,h=(l+c)*i,u=l-h,d=c-h;A*=this._PrimeX,o*=this._PrimeY;let p=.5-u*u-d*d;r=p<=0?0:p*p*(p*p)*this._GradCoordR2(e,A,o,u,d);let m=3.1547005383792506*h+(-.6666666666666666+p);if(m<=0)s=0;else{let t=u+(2*i-1),n=d+(2*i-1);s=m*m*(m*m)*this._GradCoordR2(e,A+this._PrimeX,o+this._PrimeY,t,n)}if(d>u){let t=u+i,n=d+(i-1),r=.5-t*t-n*n;a=r<=0?0:r*r*(r*r)*this._GradCoordR2(e,A,o+this._PrimeY,t,n)}else{let t=u+(i-1),n=d+i,r=.5-t*t-n*n;a=r<=0?0:r*r*(r*r)*this._GradCoordR2(e,A+this._PrimeX,o,t,n)}return 99.83685446303647*(r+a+s)}_SingleOpenSimplex2R3(e,t,n,i){let r=Math.round(t),a=Math.round(n),s=Math.round(i),A=t-r,o=n-a,l=i-s,c=Math.trunc(-1-o|1),h=Math.trunc(-1-A|1),u=Math.trunc(-1-l|1),d=h*-A,p=c*-o,m=u*-l;r*=this._PrimeX,a*=this._PrimeY,s*=this._PrimeZ;let g=0,f=.6-A*A-(o*o+l*l);for(let t=0;;t++){if(f>0&&(g+=f*f*(f*f)*this._GradCoordR3(e,r,a,s,A,o,l)),d>=p&&d>=m){let t=f+d+d;t>1&&(t-=1,g+=t*t*(t*t)*this._GradCoordR3(e,r-h*this._PrimeX,a,s,A+h,o,l))}else if(p>d&&p>=m){let t=f+p+p;t>1&&(t-=1,g+=t*t*(t*t)*this._GradCoordR3(e,r,a-c*this._PrimeY,s,A,o+c,l))}else{let t=f+m+m;t>1&&(t-=1,g+=t*t*(t*t)*this._GradCoordR3(e,r,a,s-u*this._PrimeZ,A,o,l+u))}if(1===t)break;d=.5-d,p=.5-p,m=.5-m,A=h*d,o=c*p,l=u*m,f+=.75-d-(p+m),r+=h>>1&this._PrimeX,a+=c>>1&this._PrimeY,s+=u>>1&this._PrimeZ,h=-h,c=-c,u=-u,e=~e}return 32.69428253173828*g}_SingleOpenSimplex2SR2(e,t,n){const i=.21132486540518713;let r=Math.floor(t),a=Math.floor(n),s=t-r,A=n-a;r*=this._PrimeX,a*=this._PrimeY;let o=r+this._PrimeX,l=a+this._PrimeY,c=(s+A)*i,h=s-c,u=A-c,d=2/3-h*h-u*u,p=d*d*(d*d)*this._GradCoordR2(e,r,a,h,u),m=3.1547005383792506*c+(-.6666666666666666+d),g=h-(1-2*i),f=u-(1-2*i);p+=m*m*(m*m)*this._GradCoordR2(e,o,l,g,f);let _=s-A;if(c>i){if(s+_>1){let t=h+(3*i-2),n=u+(3*i-1),s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r+(this._PrimeX<<1),a+this._PrimeY,t,n))}else{let t=h+i,n=u+(i-1),s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r,a+this._PrimeY,t,n))}if(A-_>1){let t=h+(3*i-1),n=u+(3*i-2),s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r+this._PrimeX,a+(this._PrimeY<<1),t,n))}else{let t=h+(i-1),n=u+i,s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r+this._PrimeX,a,t,n))}}else{if(s+_<0){let t=h+(1-i),n=u-i,s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r-this._PrimeX,a,t,n))}else{let t=h+(i-1),n=u+i,s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r+this._PrimeX,a,t,n))}if(A<_){let t=h-i,n=u-(i-1),s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r,a-this._PrimeY,t,n))}else{let t=h+i,n=u+(i-1),s=2/3-t*t-n*n;s>0&&(p+=s*s*(s*s)*this._GradCoordR2(e,r,a+this._PrimeY,t,n))}}return 18.24196194486065*p}_SingleOpenSimplex2SR3(e,t,n,i){let r=Math.floor(t),a=Math.floor(n),s=Math.floor(i),A=t-r,o=n-a,l=i-s;r*=this._PrimeX,a*=this._PrimeY,s*=this._PrimeZ;let c=e+1293373,h=Math.trunc(-.5-A),u=Math.trunc(-.5-o),d=Math.trunc(-.5-l),p=A+h,m=o+u,g=l+d,f=.75-p*p-m*m-g*g,_=f*f*(f*f)*this._GradCoordR3(e,r+(h&this._PrimeX),a+(u&this._PrimeY),s+(d&this._PrimeZ),p,m,g),v=A-.5,x=o-.5,y=l-.5,C=.75-v*v-x*x-y*y;_+=C*C*(C*C)*this._GradCoordR3(c,r+this._PrimeX,a+this._PrimeY,s+this._PrimeZ,v,x,y);let M=((1|h)<<1)*v,w=((1|u)<<1)*x,b=((1|d)<<1)*y,E=(-2-(h<<2))*v-1,S=(-2-(u<<2))*x-1,I=(-2-(d<<2))*y-1,T=!1,D=M+f;if(D>0){let t=p-(1|h);_+=D*D*(D*D)*this._GradCoordR3(e,r+(~h&this._PrimeX),a+(u&this._PrimeY),s+(d&this._PrimeZ),t,m,g)}else{let t=w+b+f;if(t>0){let n=p,i=m-(1|u),A=g-(1|d);_+=t*t*(t*t)*this._GradCoordR3(e,r+(h&this._PrimeX),a+(~u&this._PrimeY),s+(~d&this._PrimeZ),n,i,A)}let n=E+C;if(n>0){let e=(1|h)+v;_+=n*n*(n*n)*this._GradCoordR3(c,r+(h&2*this._PrimeX),a+this._PrimeY,s+this._PrimeZ,e,x,y),T=!0}}let B=!1,P=w+f;if(P>0){let t=p,n=m-(1|u);_+=P*P*(P*P)*this._GradCoordR3(e,r+(h&this._PrimeX),a+(~u&this._PrimeY),s+(d&this._PrimeZ),t,n,g)}else{let t=M+b+f;if(t>0){let n=p-(1|h),i=m,A=g-(1|d);_+=t*t*(t*t)*this._GradCoordR3(e,r+(~h&this._PrimeX),a+(u&this._PrimeY),s+(~d&this._PrimeZ),n,i,A)}let n=S+C;if(n>0){let e=v,t=(1|u)+x;_+=n*n*(n*n)*this._GradCoordR3(c,r+this._PrimeX,a+(u&this._PrimeY<<1),s+this._PrimeZ,e,t,y),B=!0}}let R=!1,L=b+f;if(L>0){let t=p,n=m,i=g-(1|d);_+=L*L*(L*L)*this._GradCoordR3(e,r+(h&this._PrimeX),a+(u&this._PrimeY),s+(~d&this._PrimeZ),t,n,i)}else{let t=M+w+f;if(t>0){let n=p-(1|h),i=m-(1|u);_+=t*t*(t*t)*this._GradCoordR3(e,r+(~h&this._PrimeX),a+(~u&this._PrimeY),s+(d&this._PrimeZ),n,i,g)}let n=I+C;if(n>0){let e=v,t=x,i=(1|d)+y;_+=n*n*(n*n)*this._GradCoordR3(c,r+this._PrimeX,a+this._PrimeY,s+(d&this._PrimeZ<<1),e,t,i),R=!0}}if(!T){let e=S+I+C;if(e>0){let t=v,n=(1|u)+x,i=(1|d)+y;_+=e*e*(e*e)*this._GradCoordR3(c,r+this._PrimeX,a+(u&this._PrimeY<<1),s+(d&this._PrimeZ<<1),t,n,i)}}if(!B){let e=E+I+C;if(e>0){let t=(1|h)+v,n=x,i=(1|d)+y;_+=e*e*(e*e)*this._GradCoordR3(c,r+(h&2*this._PrimeX),a+this._PrimeY,s+(d&this._PrimeZ<<1),t,n,i)}}if(!R){let e=E+S+C;if(e>0){let t=(1|h)+v,n=(1|u)+x;_+=e*e*(e*e)*this._GradCoordR3(c,r+(h&this._PrimeX<<1),a+(u&this._PrimeY<<1),s+this._PrimeZ,t,n,y)}}return 9.046026385208288*_}_SingleCellularR2(e,t,n){let i=Math.round(t),r=Math.round(n),a=Number.MAX_VALUE,s=Number.MAX_VALUE,A=0,o=.43701595*this._CellularJitterModifier,l=(i-1)*this._PrimeX,c=(r-1)*this._PrimeY;switch(this._CellularDistanceFunction){default:case ys.CellularDistanceFunction.Euclidean:case ys.CellularDistanceFunction.EuclideanSq:for(let h=i-1;h<=i+1;h++){let i=c;for(let c=r-1;c<=r+1;c++){let r=this._HashR2(e,l,i),u=510&r,d=h-t+this._RandVecs2D[u]*o,p=c-n+this._RandVecs2D[1|u]*o,m=d*d+p*p;s=Math.max(Math.min(s,m),a),m<a&&(a=m,A=r),i+=this._PrimeY}l+=this._PrimeX}break;case ys.CellularDistanceFunction.Manhattan:for(let h=i-1;h<=i+1;h++){let i=c;for(let c=r-1;c<=r+1;c++){let r=this._HashR2(e,l,i),u=510&r,d=h-t+this._RandVecs2D[u]*o,p=c-n+this._RandVecs2D[1|u]*o,m=Math.abs(d)+Math.abs(p);s=Math.max(Math.min(s,m),a),m<a&&(a=m,A=r),i+=this._PrimeY}l+=this._PrimeX}break;case ys.CellularDistanceFunction.Hybrid:for(let h=i-1;h<=i+1;h++){let i=c;for(let c=r-1;c<=r+1;c++){let r=this._HashR2(e,l,i),u=510&r,d=h-t+this._RandVecs2D[u]*o,p=c-n+this._RandVecs2D[1|u]*o,m=Math.abs(d)+Math.abs(p)+(d*d+p*p);s=Math.max(Math.min(s,m),a),m<a&&(a=m,A=r),i+=this._PrimeY}l+=this._PrimeX}}switch(this._CellularDistanceFunction===ys.CellularDistanceFunction.Euclidean&&this._CellularReturnType!==ys.CellularReturnType.CellValue&&(a=Math.sqrt(a),this._CellularReturnType!==ys.CellularReturnType.CellValue&&(s=Math.sqrt(s))),this._CellularReturnType){case ys.CellularReturnType.CellValue:return A*(1/2147483648);case ys.CellularReturnType.Distance:return a-1;case ys.CellularReturnType.Distance2:return s-1;case ys.CellularReturnType.Distance2Add:return.5*(s+a)-1;case ys.CellularReturnType.Distance2Sub:return s-a-1;case ys.CellularReturnType.Distance2Mul:return s*a*.5-1;case ys.CellularReturnType.Distance2Div:return a/s-1;default:return 0}}_SingleCellularR3(e,t,n,i){let r=Math.round(t),a=Math.round(n),s=Math.round(i),A=Number.MAX_VALUE,o=Number.MAX_VALUE,l=0,c=.39614353*this._CellularJitterModifier,h=(r-1)*this._PrimeX,u=(a-1)*this._PrimeY,d=(s-1)*this._PrimeZ;switch(this._CellularDistanceFunction){case ys.CellularDistanceFunction.Euclidean:case ys.CellularDistanceFunction.EuclideanSq:for(let p=r-1;p<=r+1;p++){let r=u;for(let u=a-1;u<=a+1;u++){let a=d;for(let d=s-1;d<=s+1;d++){let s=this._HashR3(e,h,r,a),m=1020&s,g=p-t+this._RandVecs3D[m]*c,f=u-n+this._RandVecs3D[1|m]*c,_=d-i+this._RandVecs3D[2|m]*c,v=g*g+f*f+_*_;o=Math.max(Math.min(o,v),A),v<A&&(A=v,l=s),a+=this._PrimeZ}r+=this._PrimeY}h+=this._PrimeX}break;case ys.CellularDistanceFunction.Manhattan:for(let p=r-1;p<=r+1;p++){let r=u;for(let u=a-1;u<=a+1;u++){let a=d;for(let d=s-1;d<=s+1;d++){let s=this._HashR3(e,h,r,a),m=1020&s,g=p-t+this._RandVecs3D[m]*c,f=u-n+this._RandVecs3D[1|m]*c,_=d-i+this._RandVecs3D[2|m]*c,v=Math.abs(g)+Math.abs(f)+Math.abs(_);o=Math.max(Math.min(o,v),A),v<A&&(A=v,l=s),a+=this._PrimeZ}r+=this._PrimeY}h+=this._PrimeX}break;case ys.CellularDistanceFunction.Hybrid:for(let p=r-1;p<=r+1;p++){let r=u;for(let u=a-1;u<=a+1;u++){let a=d;for(let d=s-1;d<=s+1;d++){let s=this._HashR3(e,h,r,a),m=1020&s,g=p-t+this._RandVecs3D[m]*c,f=u-n+this._RandVecs3D[1|m]*c,_=d-i+this._RandVecs3D[2|m]*c,v=Math.abs(g)+Math.abs(f)+Math.abs(_)+(g*g+f*f+_*_);o=Math.max(Math.min(o,v),A),v<A&&(A=v,l=s),a+=this._PrimeZ}r+=this._PrimeY}h+=this._PrimeX}}switch(this._CellularDistanceFunction===ys.CellularDistanceFunction.Euclidean&&this._CellularReturnType!==ys.CellularReturnType.CellValue&&(A=Math.sqrt(A),this._CellularReturnType!==ys.CellularReturnType.CellValue&&(o=Math.sqrt(o))),this._CellularReturnType){case ys.CellularReturnType.CellValue:return l*(1/2147483648);case ys.CellularReturnType.Distance:return A-1;case ys.CellularReturnType.Distance2:return o-1;case ys.CellularReturnType.Distance2Add:return.5*(o+A)-1;case ys.CellularReturnType.Distance2Sub:return o-A-1;case ys.CellularReturnType.Distance2Mul:return o*A*.5-1;case ys.CellularReturnType.Distance2Div:return A/o-1;default:return 0}}_SinglePerlinR2(e,t,n){let i=Math.floor(t),r=Math.floor(n),a=t-i,s=n-r,A=a-1,o=s-1,l=ys._InterpQuintic(a),c=ys._InterpQuintic(s);i*=this._PrimeX,r*=this._PrimeY;let h=i+this._PrimeX,u=r+this._PrimeY,d=ys._Lerp(this._GradCoordR2(e,i,r,a,s),this._GradCoordR2(e,h,r,A,s),l),p=ys._Lerp(this._GradCoordR2(e,i,u,a,o),this._GradCoordR2(e,h,u,A,o),l);return 1.4247691104677813*ys._Lerp(d,p,c)}_SinglePerlinR3(e,t,n,i){let r=Math.floor(t),a=Math.floor(n),s=Math.floor(i),A=t-r,o=n-a,l=i-s,c=A-1,h=o-1,u=l-1,d=ys._InterpQuintic(A),p=ys._InterpQuintic(o),m=ys._InterpQuintic(l);r*=this._PrimeX,a*=this._PrimeY,s*=this._PrimeZ;let g=r+this._PrimeX,f=a+this._PrimeY,_=s+this._PrimeZ,v=ys._Lerp(this._GradCoordR3(e,r,a,s,A,o,l),this._GradCoordR3(e,g,a,s,c,o,l),d),x=ys._Lerp(this._GradCoordR3(e,r,f,s,A,h,l),this._GradCoordR3(e,g,f,s,c,h,l),d),y=ys._Lerp(this._GradCoordR3(e,r,a,_,A,o,u),this._GradCoordR3(e,g,a,_,c,o,u),d),C=ys._Lerp(this._GradCoordR3(e,r,f,_,A,h,u),this._GradCoordR3(e,g,f,_,c,h,u),d),M=ys._Lerp(v,x,p),w=ys._Lerp(y,C,p);return.9649214148521423*ys._Lerp(M,w,m)}_SingleValueCubicR2(e,t,n){let i=Math.floor(t),r=Math.floor(n),a=t-i,s=n-r;i*=this._PrimeX,r*=this._PrimeY;let A=i-this._PrimeX,o=r-this._PrimeY,l=i+this._PrimeX,c=r+this._PrimeY,h=i+(this._PrimeX<<1),u=r+(this._PrimeY<<1);return ys._CubicLerp(ys._CubicLerp(this._ValCoordR2(e,A,o),this._ValCoordR2(e,i,o),this._ValCoordR2(e,l,o),this._ValCoordR2(e,h,o),a),ys._CubicLerp(this._ValCoordR2(e,A,r),this._ValCoordR2(e,i,r),this._ValCoordR2(e,l,r),this._ValCoordR2(e,h,r),a),ys._CubicLerp(this._ValCoordR2(e,A,c),this._ValCoordR2(e,i,c),this._ValCoordR2(e,l,c),this._ValCoordR2(e,h,c),a),ys._CubicLerp(this._ValCoordR2(e,A,u),this._ValCoordR2(e,i,u),this._ValCoordR2(e,l,u),this._ValCoordR2(e,h,u),a),s)*(1/2.25)}_SingleValueCubicR3(e,t,n,i){let r=Math.floor(t),a=Math.floor(n),s=Math.floor(i),A=t-r,o=n-a,l=i-s;r*=this._PrimeX,a*=this._PrimeY,s*=this._PrimeZ;let c=r-this._PrimeX,h=a-this._PrimeY,u=s-this._PrimeZ,d=r+this._PrimeX,p=a+this._PrimeY,m=s+this._PrimeZ,g=r+(this._PrimeX<<1),f=a+(this._PrimeY<<1),_=s+(this._PrimeZ<<1);return ys._CubicLerp(ys._CubicLerp(ys._CubicLerp(this._ValCoordR3(e,c,h,u),this._ValCoordR3(e,r,h,u),this._ValCoordR3(e,d,h,u),this._ValCoordR3(e,g,h,u),A),ys._CubicLerp(this._ValCoordR3(e,c,a,u),this._ValCoordR3(e,r,a,u),this._ValCoordR3(e,d,a,u),this._ValCoordR3(e,g,a,u),A),ys._CubicLerp(this._ValCoordR3(e,c,p,u),this._ValCoordR3(e,r,p,u),this._ValCoordR3(e,d,p,u),this._ValCoordR3(e,g,p,u),A),ys._CubicLerp(this._ValCoordR3(e,c,f,u),this._ValCoordR3(e,r,f,u),this._ValCoordR3(e,d,f,u),this._ValCoordR3(e,g,f,u),A),o),ys._CubicLerp(ys._CubicLerp(this._ValCoordR3(e,c,h,s),this._ValCoordR3(e,r,h,s),this._ValCoordR3(e,d,h,s),this._ValCoordR3(e,g,h,s),A),ys._CubicLerp(this._ValCoordR3(e,c,a,s),this._ValCoordR3(e,r,a,s),this._ValCoordR3(e,d,a,s),this._ValCoordR3(e,g,a,s),A),ys._CubicLerp(this._ValCoordR3(e,c,p,s),this._ValCoordR3(e,r,p,s),this._ValCoordR3(e,d,p,s),this._ValCoordR3(e,g,p,s),A),ys._CubicLerp(this._ValCoordR3(e,c,f,s),this._ValCoordR3(e,r,f,s),this._ValCoordR3(e,d,f,s),this._ValCoordR3(e,g,f,s),A),o),ys._CubicLerp(ys._CubicLerp(this._ValCoordR3(e,c,h,m),this._ValCoordR3(e,r,h,m),this._ValCoordR3(e,d,h,m),this._ValCoordR3(e,g,h,m),A),ys._CubicLerp(this._ValCoordR3(e,c,a,m),this._ValCoordR3(e,r,a,m),this._ValCoordR3(e,d,a,m),this._ValCoordR3(e,g,a,m),A),ys._CubicLerp(this._ValCoordR3(e,c,p,m),this._ValCoordR3(e,r,p,m),this._ValCoordR3(e,d,p,m),this._ValCoordR3(e,g,p,m),A),ys._CubicLerp(this._ValCoordR3(e,c,f,m),this._ValCoordR3(e,r,f,m),this._ValCoordR3(e,d,f,m),this._ValCoordR3(e,g,f,m),A),o),ys._CubicLerp(ys._CubicLerp(this._ValCoordR3(e,c,h,_),this._ValCoordR3(e,r,h,_),this._ValCoordR3(e,d,h,_),this._ValCoordR3(e,g,h,_),A),ys._CubicLerp(this._ValCoordR3(e,c,a,_),this._ValCoordR3(e,r,a,_),this._ValCoordR3(e,d,a,_),this._ValCoordR3(e,g,a,_),A),ys._CubicLerp(this._ValCoordR3(e,c,p,_),this._ValCoordR3(e,r,p,_),this._ValCoordR3(e,d,p,_),this._ValCoordR3(e,g,p,_),A),ys._CubicLerp(this._ValCoordR3(e,c,f,_),this._ValCoordR3(e,r,f,_),this._ValCoordR3(e,d,f,_),this._ValCoordR3(e,g,f,_),A),o),l)*(1/3.375)}_SingleValueR2(e,t,n){let i=Math.floor(t),r=Math.floor(n),a=ys._InterpHermite(t-i),s=ys._InterpHermite(n-r);i*=this._PrimeX,r*=this._PrimeY;let A=i+this._PrimeX,o=r+this._PrimeY,l=ys._Lerp(this._ValCoordR2(e,i,r),this._ValCoordR2(e,A,r),a),c=ys._Lerp(this._ValCoordR2(e,i,o),this._ValCoordR2(e,A,o),a);return ys._Lerp(l,c,s)}_SingleValueR3(e,t,n,i){let r=Math.floor(t),a=Math.floor(n),s=Math.floor(i),A=ys._InterpHermite(t-r),o=ys._InterpHermite(n-a),l=ys._InterpHermite(i-s);r*=this._PrimeX,a*=this._PrimeY,s*=this._PrimeZ;let c=r+this._PrimeX,h=a+this._PrimeY,u=s+this._PrimeZ,d=ys._Lerp(this._ValCoordR3(e,r,a,s),this._ValCoordR3(e,c,a,s),A),p=ys._Lerp(this._ValCoordR3(e,r,h,s),this._ValCoordR3(e,c,h,s),A),m=ys._Lerp(this._ValCoordR3(e,r,a,u),this._ValCoordR3(e,c,a,u),A),g=ys._Lerp(this._ValCoordR3(e,r,h,u),this._ValCoordR3(e,c,h,u),A),f=ys._Lerp(d,p,o),_=ys._Lerp(m,g,o);return ys._Lerp(f,_,l)}_DoSingleDomainWarp(){let e=(e,t,n,i,r,a)=>{switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:this._SingleDomainWarpOpenSimplex2Gradient(e,38.283687591552734*t,n,i,!1,r,a);break;case ys.DomainWarpType.OpenSimplex2Reduced:this._SingleDomainWarpOpenSimplex2Gradient(e,16*t,n,i,!0,r,a);break;case ys.DomainWarpType.BasicGrid:this._SingleDomainWarpBasicGrid(e,t,n,i,r,a)}},t=(e,t,n,i,r,a,s)=>{switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:this._SingleDomainWarpOpenSimplex2Gradient(e,32.69428253173828*t,n,i,!1,r,a,s);break;case ys.DomainWarpType.OpenSimplex2Reduced:this._SingleDomainWarpOpenSimplex2Gradient(e,7.71604938271605*t,n,i,!0,r,a,s);break;case ys.DomainWarpType.BasicGrid:this._SingleDomainWarpBasicGrid(e,t,n,i,r,a,s)}};return 6===arguments.length&&arguments[3]instanceof Cs?e(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]):7===arguments.length&&arguments[3]instanceof Ms?t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]):void 0}_DomainWarpSingle(){let e=e=>{let t=this._Seed,n=this._DomainWarpAmp*this._FractalBounding,i=this._Frequency,r=e.x,a=e.y,s=e.z;switch(this._WarpTransformType3D){case ys.TransformType3D.ImproveXYPlanes:{let e=r+a,t=-.211324865405187*e;s*=.577350269189626,r+=t-s,a=a+t-s,s+=.577350269189626*e}break;case ys.TransformType3D.ImproveXZPlanes:{let e=r+s,t=-.211324865405187*e;a*=.577350269189626,r+=t-a,s+=t-a,a+=.577350269189626*e}break;case ys.TransformType3D.DefaultOpenSimplex2:let e=(r+a+s)*(2/3);r=e-r,a=e-a,s=e-s}this._DoSingleDomainWarp(t,n,i,e,r,a,s)};return 1===arguments.length&&arguments[0]instanceof Cs?(e=>{let t=this._Seed,n=this._DomainWarpAmp*this._FractalBounding,i=this._Frequency,r=e.x,a=e.y;switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:case ys.DomainWarpType.OpenSimplex2Reduced:let e=(r+a)*(.5*(1.7320508075688772-1));r+=e,a+=e}this._DoSingleDomainWarp(t,n,i,e,r,a)})(arguments[0]):1===arguments.length&&arguments[0]instanceof Ms?e(arguments[0]):void 0}_DomainWarpFractalProgressive(){let e=e=>{let t=this._Seed,n=this._DomainWarpAmp*this._FractalBounding,i=this._Frequency;for(let r=0;r<this._Octaves;r++){let r=e.x,a=e.y;switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:case ys.DomainWarpType.OpenSimplex2Reduced:let e=(r+a)*(.5*(1.7320508075688772-1));r+=e,a+=e}this._DoSingleDomainWarp(t,n,i,e,r,a),t++,n*=this._Gain,i*=this._Lacunarity}},t=e=>{let t=this._Seed,n=this._DomainWarpAmp*this._FractalBounding,i=this._Frequency;for(let r=0;r<this._Octaves;r++){let r=e.x,a=e.y,s=e.z;switch(this._WarpTransformType3D){case ys.TransformType3D.ImproveXYPlanes:{let e=r+a,t=-.211324865405187*e;s*=.577350269189626,r+=t-s,a=a+t-s,s+=.577350269189626*e}break;case ys.TransformType3D.ImproveXZPlanes:{let e=r+s,t=-.211324865405187*e;a*=.577350269189626,r+=t-a,s+=t-a,a+=.577350269189626*e}break;case ys.TransformType3D.DefaultOpenSimplex2:{let e=(r+a+s)*(2/3);r=e-r,a=e-a,s=e-s}}this._DoSingleDomainWarp(t,n,i,e,r,a,s),t++,n*=this._Gain,i*=this._Lacunarity}};return 1===arguments.length&&arguments[0]instanceof Cs?e(arguments[0]):1===arguments.length&&arguments[0]instanceof Ms?t(arguments[0]):void 0}_DomainWarpFractalIndependent(){let e=e=>{let t=e.x,n=e.y;switch(this._DomainWarpType){case ys.DomainWarpType.OpenSimplex2:case ys.DomainWarpType.OpenSimplex2Reduced:let e=(t+n)*(.5*(1.7320508075688772-1));t+=e,n+=e}let i=this._Seed,r=this._DomainWarpAmp*this._FractalBounding,a=this._Frequency;for(let s=0;s<this._Octaves;s++)this._DoSingleDomainWarp(i,r,a,e,t,n),i++,r*=this._Gain,a*=this._Lacunarity},t=e=>{let t=e.x,n=e.y,i=e.z;switch(this._WarpTransformType3D){case ys.TransformType3D.ImproveXYPlanes:{let e=t+n,r=-.211324865405187*e;i*=.577350269189626,t+=r-i,n=n+r-i,i+=.577350269189626*e}break;case ys.TransformType3D.ImproveXZPlanes:{let e=t+i,r=-.211324865405187*e;n*=.577350269189626,t+=r-n,i+=r-n,n+=.577350269189626*e}break;case ys.TransformType3D.DefaultOpenSimplex2:{let e=(t+n+i)*(2/3);t=e-t,n=e-n,i=e-i}}let r=this._Seed,a=this._DomainWarpAmp*this._FractalBounding,s=this._Frequency;for(let A=0;A<this._Octaves;A++)this._DoSingleDomainWarp(r,a,s,e,t,n,i),r++,a*=this._Gain,s*=this._Lacunarity};return 1===arguments.length&&arguments[0]instanceof Cs?e(arguments[0]):1===arguments.length&&arguments[0]instanceof Ms?t(arguments[0]):void 0}_SingleDomainWarpBasicGrid(){let e=(e,t,n,i,r,a)=>{let s=r*n,A=a*n,o=Math.floor(s),l=Math.floor(A),c=ys._InterpHermite(s-o),h=ys._InterpHermite(A-l);o*=this._PrimeX,l*=this._PrimeY;let u=o+this._PrimeX,d=l+this._PrimeY,p=510&this._HashR2(e,o,l),m=510&this._HashR2(e,u,l),g=ys._Lerp(this._RandVecs2D[p],this._RandVecs2D[m],c),f=ys._Lerp(this._RandVecs2D[1|p],this._RandVecs2D[1|m],c);p=510&this._HashR2(e,o,d),m=510&this._HashR2(e,u,d);let _=ys._Lerp(this._RandVecs2D[p],this._RandVecs2D[m],c),v=ys._Lerp(this._RandVecs2D[1|p],this._RandVecs2D[1|m],c);i.x+=ys._Lerp(g,_,h)*t,i.y+=ys._Lerp(f,v,h)*t},t=(e,t,n,i,r,a,s)=>{let A=r*n,o=a*n,l=s*n,c=Math.floor(A),h=Math.floor(o),u=Math.floor(l),d=ys._InterpHermite(A-c),p=ys._InterpHermite(o-h),m=ys._InterpHermite(l-u);c*=this._PrimeX,h*=this._PrimeY,u*=this._PrimeZ;let g=c+this._PrimeX,f=h+this._PrimeY,_=u+this._PrimeZ,v=1020&this._HashR3(e,c,h,u),x=1020&this._HashR3(e,g,h,u),y=ys._Lerp(this._RandVecs3D[v],this._RandVecs3D[x],d),C=ys._Lerp(this._RandVecs3D[1|v],this._RandVecs3D[1|x],d),M=ys._Lerp(this._RandVecs3D[2|v],this._RandVecs3D[2|x],d);v=1020&this._HashR3(e,c,f,u),x=1020&this._HashR3(e,g,f,u);let w=ys._Lerp(this._RandVecs3D[v],this._RandVecs3D[x],d),b=ys._Lerp(this._RandVecs3D[1|v],this._RandVecs3D[1|x],d),E=ys._Lerp(this._RandVecs3D[2|v],this._RandVecs3D[2|x],d),S=ys._Lerp(y,w,p),I=ys._Lerp(C,b,p),T=ys._Lerp(M,E,p);v=1020&this._HashR3(e,c,h,_),x=1020&this._HashR3(e,g,h,_),y=ys._Lerp(this._RandVecs3D[v],this._RandVecs3D[x],d),C=ys._Lerp(this._RandVecs3D[1|v],this._RandVecs3D[1|x],d),M=ys._Lerp(this._RandVecs3D[2|v],this._RandVecs3D[2|x],d),v=1020&this._HashR3(e,c,f,_),x=1020&this._HashR3(e,g,f,_),w=ys._Lerp(this._RandVecs3D[v],this._RandVecs3D[x],d),b=ys._Lerp(this._RandVecs3D[1|v],this._RandVecs3D[1|x],d),E=ys._Lerp(this._RandVecs3D[2|v],this._RandVecs3D[2|x],d),i.x+=ys._Lerp(S,ys._Lerp(y,w,p),m)*t,i.y+=ys._Lerp(I,ys._Lerp(C,b,p),m)*t,i.z+=ys._Lerp(T,ys._Lerp(M,E,p),m)*t};6===arguments.length&&arguments[3]instanceof Cs&&e(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]),7===arguments.length&&arguments[3]instanceof Ms&&t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6])}_SingleDomainWarpOpenSimplex2Gradient(){let e=(e,t,n,i,r,a,s)=>{const A=.21132486540518713;a*=n,s*=n;let o,l,c=Math.floor(a),h=Math.floor(s),u=a-c,d=s-h,p=(u+d)*A,m=u-p,g=d-p;c*=this._PrimeX,h*=this._PrimeY,o=l=0;let f=.5-m;if(f>0){let t,n,i=f*f*(f*f);if(r){let i=510&this._HashR2(e,c,h);t=this._RandVecs2D[i],n=this._RandVecs2D[1|i]}else{let i=this._HashR2(e,c,h),r=254&i,a=i>>7&510,s=m*this._Gradients2D[r]+g*this._Gradients2D[1|r];t=s*this._RandVecs2D[a],n=s*this._RandVecs2D[1|a]}o+=i*t,l+=i*n}let _=3.1547005383792506*p+(-.6666666666666666+f);if(_>0){let t,n,i=m+(2*A-1),a=g+(2*A-1),s=_*_*(_*_);if(r){let i=510&this._HashR2(e,c+this._PrimeX,h+this._PrimeY);t=this._RandVecs2D[i],n=this._RandVecs2D[1|i]}else{let r=this._HashR2(e,c+this._PrimeX,h+this._PrimeY),s=254&r,A=r>>7&510,o=i*this._Gradients2D[s]+a*this._Gradients2D[1|s];t=o*this._RandVecs2D[A],n=o*this._RandVecs2D[1|A]}o+=s*t,l+=s*n}if(g>m){let t=m+A,n=g+(A-1),i=.5-t*t-n*n;if(i>0){let a,s,A=i*i*(i*i);if(r){let t=510&this._HashR2(e,c,h+this._PrimeY);a=this._RandVecs2D[t],s=this._RandVecs2D[1|t]}else{let i=this._HashR2(e,c,h+this._PrimeY),r=254&i,A=i>>7&510,o=t*this._Gradients2D[r]+n*this._Gradients2D[1|r];a=o*this._RandVecs2D[A],s=o*this._RandVecs2D[1|A]}o+=A*a,l+=A*s}}else{let t=m+(A-1),n=g+A,i=.5-t*t-n*n;if(i>0){let a,s,A=i*i*(i*i);if(r){let t=510&this._HashR2(e,c+this._PrimeX,h);a=this._RandVecs2D[t],s=this._RandVecs2D[1|t]}else{let i=this._HashR2(e,c+this._PrimeX,h),r=254&i,A=i>>7&510,o=t*this._Gradients2D[r]+n*this._Gradients2D[1|r];a=o*this._RandVecs2D[A],s=o*this._RandVecs2D[1|A]}o+=A*a,l+=A*s}}i.x+=o*t,i.y+=l*t},t=(e,t,n,i,r,a,s,A)=>{a*=n,s*=n,A*=n;let o,l,c,h=Math.round(a),u=Math.round(s),d=Math.round(A),p=a-h,m=s-u,g=A-d,f=-p-1|1,_=-m-1|1,v=-g-1|1,x=f*-p,y=_*-m,C=v*-g;h*=this._PrimeX,u*=this._PrimeY,d*=this._PrimeZ,o=l=c=0;let M=.6-p*p-(m*m+g*g);for(let t=0;;t++){if(M>0){let t,n,i,a=M*M*(M*M);if(r){let r=1020&this._HashR3(e,h,u,d);t=this._RandVecs3D[r],n=this._RandVecs3D[1|r],i=this._RandVecs3D[2|r]}else{let r=this._HashR3(e,h,u,d),a=252&r,s=r>>6&1020,A=p*this._Gradients3D[a]+m*this._Gradients3D[1|a]+g*this._Gradients3D[2|a];t=A*this._RandVecs3D[s],n=A*this._RandVecs3D[1|s],i=A*this._RandVecs3D[2|s]}o+=a*t,l+=a*n,c+=a*i}let n=M,i=h,a=u,s=d,A=p,w=m,b=g;if(x>=y&&x>=C?(A+=f,n=n+x+x,i-=f*this._PrimeX):y>x&&y>=C?(w+=_,n=n+y+y,a-=_*this._PrimeY):(b+=v,n=n+C+C,s-=v*this._PrimeZ),n>1){n-=1;let t,h,u,d=n*n*(n*n);if(r){let n=1020&this._HashR3(e,i,a,s);t=this._RandVecs3D[n],h=this._RandVecs3D[1|n],u=this._RandVecs3D[2|n]}else{let n=this._HashR3(e,i,a,s),r=252&n,o=n>>6&1020,l=A*this._Gradients3D[r]+w*this._Gradients3D[1|r]+b*this._Gradients3D[2|r];t=l*this._RandVecs3D[o],h=l*this._RandVecs3D[1|o],u=l*this._RandVecs3D[2|o]}o+=d*t,l+=d*h,c+=d*u}if(1===t)break;x=.5-x,y=.5-y,C=.5-C,p=f*x,m=_*y,g=v*C,M+=.75-x-(y+C),h+=f>>1&this._PrimeX,u+=_>>1&this._PrimeY,d+=v>>1&this._PrimeZ,f=-f,_=-_,v=-v,e+=1293373}i.x+=o*t,i.y+=l*t,i.z+=c*t};7===arguments.length&&e(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]),8===arguments.length&&t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7])}}class Cs{constructor(e,t){this.x=e,this.y=t}}class Ms{constructor(e,t,n){this.x=e,this.y=t,this.z=n}}var ws={},bs=Uint8Array,Es=Uint16Array,Ss=Uint32Array,Is=new bs([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ts=new bs([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ds=new bs([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Bs=function(e,t){for(var n=new Es(31),i=0;i<31;++i)n[i]=t+=1<<e[i-1];var r=new Ss(n[30]);for(i=1;i<30;++i)for(var a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},Ps=Bs(Is,2),Rs=Ps[0],Ls=Ps[1];Rs[28]=258,Ls[258]=28;for(var Ns=Bs(Ts,0),Us=Ns[0],Qs=Ns[1],Fs=new Es(32768),Os=0;Os<32768;++Os){var Gs=(43690&Os)>>>1|(21845&Os)<<1;Gs=(61680&(Gs=(52428&Gs)>>>2|(13107&Gs)<<2))>>>4|(3855&Gs)<<4,Fs[Os]=((65280&Gs)>>>8|(255&Gs)<<8)>>>1}var zs=function(e,t,n){for(var i=e.length,r=0,a=new Es(t);r<i;++r)e[r]&&++a[e[r]-1];var s,A=new Es(t);for(r=0;r<t;++r)A[r]=A[r-1]+a[r-1]<<1;if(n){s=new Es(1<<t);var o=15-t;for(r=0;r<i;++r)if(e[r])for(var l=r<<4|e[r],c=t-e[r],h=A[e[r]-1]++<<c,u=h|(1<<c)-1;h<=u;++h)s[Fs[h]>>>o]=l}else for(s=new Es(i),r=0;r<i;++r)e[r]&&(s[r]=Fs[A[e[r]-1]++]>>>15-e[r]);return s},ks=new bs(288);for(Os=0;Os<144;++Os)ks[Os]=8;for(Os=144;Os<256;++Os)ks[Os]=9;for(Os=256;Os<280;++Os)ks[Os]=7;for(Os=280;Os<288;++Os)ks[Os]=8;var Vs=new bs(32);for(Os=0;Os<32;++Os)Vs[Os]=5;var Hs=zs(ks,9,0),Ws=zs(ks,9,1),Ys=zs(Vs,5,0),js=zs(Vs,5,1),Xs=function(e){for(var t=e[0],n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},Js=function(e,t,n){var i=t/8|0;return(e[i]|e[i+1]<<8)>>(7&t)&n},qs=function(e,t){var n=t/8|0;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>(7&t)},Ks=function(e){return(e+7)/8|0},Zs=function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var i=new(2==e.BYTES_PER_ELEMENT?Es:4==e.BYTES_PER_ELEMENT?Ss:bs)(n-t);return i.set(e.subarray(t,n)),i},$s=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],eA=function(e,t,n){var i=new Error(t||$s[e]);if(i.code=e,Error.captureStackTrace&&Error.captureStackTrace(i,eA),!n)throw i;return i},tA=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8},nA=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8,e[i+2]|=n>>>16},iA=function(e,t){for(var n=[],i=0;i<e.length;++i)e[i]&&n.push({s:i,f:e[i]});var r=n.length,a=n.slice();if(!r)return[cA,0];if(1==r){var s=new bs(n[0].s+1);return s[n[0].s]=1,[s,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var A=n[0],o=n[1],l=0,c=1,h=2;for(n[0]={s:-1,f:A.f+o.f,l:A,r:o};c!=r-1;)A=n[n[l].f<n[h].f?l++:h++],o=n[l!=c&&n[l].f<n[h].f?l++:h++],n[c++]={s:-1,f:A.f+o.f,l:A,r:o};var u=a[0].s;for(i=1;i<r;++i)a[i].s>u&&(u=a[i].s);var d=new Es(u+1),p=rA(n[c-1],d,0);if(p>t){i=0;var m=0,g=p-t,f=1<<g;for(a.sort((function(e,t){return d[t.s]-d[e.s]||e.f-t.f}));i<r;++i){var _=a[i].s;if(!(d[_]>t))break;m+=f-(1<<p-d[_]),d[_]=t}for(m>>>=g;m>0;){var v=a[i].s;d[v]<t?m-=1<<t-d[v]++-1:++i}for(;i>=0&&m;--i){var x=a[i].s;d[x]==t&&(--d[x],++m)}p=t}return[new bs(d),p]},rA=function(e,t,n){return-1==e.s?Math.max(rA(e.l,t,n+1),rA(e.r,t,n+1)):t[e.s]=n},aA=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new Es(++t),i=0,r=e[0],a=1,s=function(e){n[i++]=e},A=1;A<=t;++A)if(e[A]==r&&A!=t)++a;else{if(!r&&a>2){for(;a>138;a-=138)s(32754);a>2&&(s(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(s(r),--a;a>6;a-=6)s(8304);a>2&&(s(a-3<<5|8208),a=0)}for(;a--;)s(r);a=1,r=e[A]}return[n.subarray(0,i),t]},sA=function(e,t){for(var n=0,i=0;i<t.length;++i)n+=e[i]*t[i];return n},AA=function(e,t,n){var i=n.length,r=Ks(t+2);e[r]=255&i,e[r+1]=i>>>8,e[r+2]=255^e[r],e[r+3]=255^e[r+1];for(var a=0;a<i;++a)e[r+a+4]=n[a];return 8*(r+4+i)},oA=function(e,t,n,i,r,a,s,A,o,l,c){tA(t,c++,n),++r[256];for(var h=iA(r,15),u=h[0],d=h[1],p=iA(a,15),m=p[0],g=p[1],f=aA(u),_=f[0],v=f[1],x=aA(m),y=x[0],C=x[1],M=new Es(19),w=0;w<_.length;++w)M[31&_[w]]++;for(w=0;w<y.length;++w)M[31&y[w]]++;for(var b=iA(M,7),E=b[0],S=b[1],I=19;I>4&&!E[Ds[I-1]];--I);var T,D,B,P,R=l+5<<3,L=sA(r,ks)+sA(a,Vs)+s,N=sA(r,u)+sA(a,m)+s+14+3*I+sA(M,E)+(2*M[16]+3*M[17]+7*M[18]);if(R<=L&&R<=N)return AA(t,c,e.subarray(o,o+l));if(tA(t,c,1+(N<L)),c+=2,N<L){T=zs(u,d,0),D=u,B=zs(m,g,0),P=m;var U=zs(E,S,0);tA(t,c,v-257),tA(t,c+5,C-1),tA(t,c+10,I-4),c+=14;for(w=0;w<I;++w)tA(t,c+3*w,E[Ds[w]]);c+=3*I;for(var Q=[_,y],F=0;F<2;++F){var O=Q[F];for(w=0;w<O.length;++w){var G=31&O[w];tA(t,c,U[G]),c+=E[G],G>15&&(tA(t,c,O[w]>>>5&127),c+=O[w]>>>12)}}}else T=Hs,D=ks,B=Ys,P=Vs;for(w=0;w<A;++w)if(i[w]>255){G=i[w]>>>18&31;nA(t,c,T[G+257]),c+=D[G+257],G>7&&(tA(t,c,i[w]>>>23&31),c+=Is[G]);var z=31&i[w];nA(t,c,B[z]),c+=P[z],z>3&&(nA(t,c,i[w]>>>5&8191),c+=Ts[z])}else nA(t,c,T[i[w]]),c+=D[i[w]];return nA(t,c,T[256]),c+D[256]},lA=new Ss([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),cA=new bs(0),hA=function(e,t,n,i,r,a){var s=e.length,A=new bs(i+s+5*(1+Math.ceil(s/7e3))+r),o=A.subarray(i,A.length-r),l=0;if(!t||s<8)for(var c=0;c<=s;c+=65535){var h=c+65535;h>=s&&(o[l>>3]=a),l=AA(o,l+1,e.subarray(c,h))}else{for(var u=lA[t-1],d=u>>>13,p=8191&u,m=(1<<n)-1,g=new Es(32768),f=new Es(m+1),_=Math.ceil(n/3),v=2*_,x=function(t){return(e[t]^e[t+1]<<_^e[t+2]<<v)&m},y=new Ss(25e3),C=new Es(288),M=new Es(32),w=0,b=0,E=(c=0,0),S=0,I=0;c<s;++c){var T=x(c),D=32767&c,B=f[T];if(g[D]=B,f[T]=D,S<=c){var P=s-c;if((w>7e3||E>24576)&&P>423){l=oA(e,o,0,y,C,M,b,E,I,c-I,l),E=w=b=0,I=c;for(var R=0;R<286;++R)C[R]=0;for(R=0;R<30;++R)M[R]=0}var L=2,N=0,U=p,Q=D-B&32767;if(P>2&&T==x(c-Q))for(var F=Math.min(d,P)-1,O=Math.min(32767,c),G=Math.min(258,P);Q<=O&&--U&&D!=B;){if(e[c+L]==e[c+L-Q]){for(var z=0;z<G&&e[c+z]==e[c+z-Q];++z);if(z>L){if(L=z,N=Q,z>F)break;var k=Math.min(Q,z-2),V=0;for(R=0;R<k;++R){var H=c-Q+R+32768&32767,W=H-g[H]+32768&32767;W>V&&(V=W,B=H)}}}Q+=(D=B)-(B=g[D])+32768&32767}if(N){y[E++]=268435456|Ls[L]<<18|Qs[N];var Y=31&Ls[L],j=31&Qs[N];b+=Is[Y]+Ts[j],++C[257+Y],++M[j],S=c+L,++w}else y[E++]=e[c],++C[e[c]]}}l=oA(e,o,a,y,C,M,b,E,I,c-I,l),!a&&7&l&&(l=AA(o,l+1,cA))}return Zs(A,0,i+Ks(l)+r)},uA=function(e,t,n,i,r){return hA(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,i,!r)},dA=function(e,t,n){for(var i=e(),r=e.toString(),a=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/\s+/g,"").split(","),s=0;s<i.length;++s){var A=i[s],o=a[s];if("function"==typeof A){t+=";"+o+"=";var l=A.toString();if(A.prototype)if(-1!=l.indexOf("[native code]")){var c=l.indexOf(" ",8)+1;t+=l.slice(c,l.indexOf("(",c))}else for(var h in t+=l,A.prototype)t+=";"+o+".prototype."+h+"="+A.prototype[h].toString();else t+=l}else n[o]=A}return[t,n]},pA=[],mA=function(e,t,n,i){var r;if(!pA[n]){for(var a="",s={},A=e.length-1,o=0;o<A;++o)a=(r=dA(e[o],a,s))[0],s=r[1];pA[n]=dA(e[A],a,s)}var l=function(e,t){var n={};for(var i in e)n[i]=e[i];for(var i in t)n[i]=t[i];return n}({},pA[n][1]);return function(e,t,n,i,r){var a=new Worker(ws[t]||(ws[t]=URL.createObjectURL(new Blob([e+';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:"text/javascript"}))));return a.onmessage=function(e){var t=e.data,n=t.$e$;if(n){var i=new Error(n[0]);i.code=n[1],i.stack=n[2],r(i,null)}else r(null,t)},a.postMessage(n,i),a}(pA[n][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+t.toString()+"}",n,l,function(e){var t=[];for(var n in e)e[n].buffer&&t.push((e[n]=new e[n].constructor(e[n])).buffer);return t}(l),i)},gA=function(){return[bs,Es,Ss,Is,Ts,Ds,Ls,Qs,Hs,ks,Ys,Vs,Fs,lA,cA,zs,tA,nA,iA,rA,aA,sA,AA,oA,Ks,Zs,hA,uA,vA,fA]},fA=function(e){return postMessage(e,[e.buffer])};function _A(e,t,n){return n||(n=t,t={}),"function"!=typeof n&&eA(7),function(e,t,n,i,r,a){var s=mA(n,i,r,(function(e,t){s.terminate(),a(e,t)}));return s.postMessage([e,t],t.consume?[e.buffer]:[]),function(){s.terminate()}}(e,t,[gA],(function(e){return fA(vA(e.data[0],e.data[1]))}),0,n)}function vA(e,t){return uA(e,t||{},0,0)}function xA(e,t){return function(e,t,n){var i=e.length;if(!i||n&&n.f&&!n.l)return t||new bs(0);var r=!t||n,a=!n||n.i;n||(n={}),t||(t=new bs(3*i));var s=function(e){var n=t.length;if(e>n){var i=new bs(Math.max(2*n,e));i.set(t),t=i}},A=n.f||0,o=n.p||0,l=n.b||0,c=n.l,h=n.d,u=n.m,d=n.n,p=8*i;do{if(!c){A=Js(e,o,1);var m=Js(e,o+1,3);if(o+=3,!m){var g=e[(S=Ks(o)+4)-4]|e[S-3]<<8,f=S+g;if(f>i){a&&eA(0);break}r&&s(l+g),t.set(e.subarray(S,f),l),n.b=l+=g,n.p=o=8*f,n.f=A;continue}if(1==m)c=Ws,h=js,u=9,d=5;else if(2==m){var _=Js(e,o,31)+257,v=Js(e,o+10,15)+4,x=_+Js(e,o+5,31)+1;o+=14;for(var y=new bs(x),C=new bs(19),M=0;M<v;++M)C[Ds[M]]=Js(e,o+3*M,7);o+=3*v;var w=Xs(C),b=(1<<w)-1,E=zs(C,w,1);for(M=0;M<x;){var S,I=E[Js(e,o,b)];if(o+=15&I,(S=I>>>4)<16)y[M++]=S;else{var T=0,D=0;for(16==S?(D=3+Js(e,o,3),o+=2,T=y[M-1]):17==S?(D=3+Js(e,o,7),o+=3):18==S&&(D=11+Js(e,o,127),o+=7);D--;)y[M++]=T}}var B=y.subarray(0,_),P=y.subarray(_);u=Xs(B),d=Xs(P),c=zs(B,u,1),h=zs(P,d,1)}else eA(1);if(o>p){a&&eA(0);break}}r&&s(l+131072);for(var R=(1<<u)-1,L=(1<<d)-1,N=o;;N=o){var U=(T=c[qs(e,o)&R])>>>4;if((o+=15&T)>p){a&&eA(0);break}if(T||eA(2),U<256)t[l++]=U;else{if(256==U){N=o,c=null;break}var Q=U-254;if(U>264){var F=Is[M=U-257];Q=Js(e,o,(1<<F)-1)+Rs[M],o+=F}var O=h[qs(e,o)&L],G=O>>>4;if(O||eA(3),o+=15&O,P=Us[G],G>3&&(F=Ts[G],P+=qs(e,o)&(1<<F)-1,o+=F),o>p){a&&eA(0);break}r&&s(l+131072);for(var z=l+Q;l<z;l+=4)t[l]=t[l-P],t[l+1]=t[l+1-P],t[l+2]=t[l+2-P],t[l+3]=t[l+3-P];l=z}}n.l=c,n.p=N,n.b=l,n.f=A,c&&(A=1,n.m=u,n.d=h,n.n=d)}while(!A);return l==t.length?t:Zs(t,0,l)}(e,t)}var yA="undefined"!=typeof TextDecoder&&new TextDecoder;try{yA.decode(cA,{stream:!0}),1}catch(e){}class CA{constructor(){this.pluginCallbacks=[],this.register((function(e){return new ZA(e)})),this.register((function(e){return new $A(e)})),this.register((function(e){return new no(e)})),this.register((function(e){return new io(e)})),this.register((function(e){return new ro(e)})),this.register((function(e){return new ao(e)})),this.register((function(e){return new eo(e)})),this.register((function(e){return new to(e)}))}register(e){return-1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return-1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){const r=new KA,a=[];for(let e=0,t=this.pluginCallbacks.length;e<t;e++)a.push(this.pluginCallbacks[e](r));r.setPlugins(a),r.write(e,t,i).catch(n)}parseAsync(e,t){const n=this;return new Promise((function(i,r){n.parse(e,i,r,t)}))}}const MA=0,wA=1,bA=2,EA=3,SA=4,IA=5121,TA=5123,DA=5126,BA=5125,PA=34962,RA=34963,LA=9728,NA=9729,UA=9984,QA=9985,FA=9986,OA=9987,GA=33071,zA=33648,kA=10497,VA={};VA[1003]=LA,VA[1004]=UA,VA[1005]=FA,VA[1006]=NA,VA[1007]=QA,VA[1008]=OA,VA[1001]=GA,VA[1e3]=kA,VA[1002]=zA;const HA={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},WA=new ge;function YA(e,t){return e.length===t.length&&e.every((function(e,n){return e===t[n]}))}function jA(e){return 4*Math.ceil(e/4)}function XA(e,t=0){const n=jA(e.byteLength);if(n!==e.byteLength){const i=new Uint8Array(n);if(i.set(new Uint8Array(e)),0!==t)for(let r=e.byteLength;r<n;r++)i[r]=t;return i.buffer}return e}function JA(){return"undefined"==typeof document&&"undefined"!=typeof OffscreenCanvas?new OffscreenCanvas(1,1):document.createElement("canvas")}function qA(e,t){if(void 0!==e.toBlob)return new Promise((n=>e.toBlob(n,t)));let n;return"image/jpeg"===t?n=.92:"image/webp"===t&&(n=.8),e.convertToBlob({type:t,quality:n})}class KA{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,t,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const i=this,r=i.buffers,a=i.json;n=i.options;const s=i.extensionsUsed,A=new Blob(r,{type:"application/octet-stream"}),o=Object.keys(s);if(o.length>0&&(a.extensionsUsed=o),a.buffers&&a.buffers.length>0&&(a.buffers[0].byteLength=A.size),!0===n.binary){const e=new FileReader;e.readAsArrayBuffer(A),e.onloadend=function(){const n=XA(e.result),i=new DataView(new ArrayBuffer(8));i.setUint32(0,n.byteLength,!0),i.setUint32(4,5130562,!0);const r=XA((s=JSON.stringify(a),(new TextEncoder).encode(s).buffer),32);var s;const A=new DataView(new ArrayBuffer(8));A.setUint32(0,r.byteLength,!0),A.setUint32(4,1313821514,!0);const o=new ArrayBuffer(12),l=new DataView(o);l.setUint32(0,1179937895,!0),l.setUint32(4,2,!0);const c=12+A.byteLength+r.byteLength+i.byteLength+n.byteLength;l.setUint32(8,c,!0);const h=new Blob([o,A,r,i,n],{type:"application/octet-stream"}),u=new FileReader;u.readAsArrayBuffer(h),u.onloadend=function(){t(u.result)}}}else if(a.buffers&&a.buffers.length>0){const e=new FileReader;e.readAsDataURL(A),e.onloadend=function(){const n=e.result;a.buffers[0].uri=n,t(a)}}else t(a)}serializeUserData(e,t){if(0===Object.keys(e.userData).length)return;const n=this.options,i=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(e.userData));if(n.includeCustomExtensions&&r.gltfExtensions){void 0===t.extensions&&(t.extensions={});for(const e in r.gltfExtensions)t.extensions[e]=r.gltfExtensions[e],i[e]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(t.extras=r)}catch(t){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+t.message)}}getUID(e,t=!1){if(!1===this.uids.has(e)){const t=new Map;t.set(!0,this.uid++),t.set(!1,this.uid++),this.uids.set(e,t)}return this.uids.get(e).get(t)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const t=new Te;for(let n=0,i=e.count;n<i;n++)if(Math.abs(t.fromBufferAttribute(e,n).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);const n=e.clone(),i=new Te;for(let e=0,t=n.count;e<t;e++)i.fromBufferAttribute(n,e),0===i.x&&0===i.y&&0===i.z?i.setX(1):i.normalize(),n.setXYZ(e,i.x,i.y,i.z);return t.attributesNormalized.set(e,n),n}applyTextureTransform(e,t){let n=!1;const i={};0===t.offset.x&&0===t.offset.y||(i.offset=t.offset.toArray(),n=!0),0!==t.rotation&&(i.rotation=t.rotation,n=!0),1===t.repeat.x&&1===t.repeat.y||(i.scale=t.repeat.toArray(),n=!0),n&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=i,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function n(e){return e.encoding===L?function(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}:function(e){return e}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.");const i=e?e.image:null,r=t?t.image:null,a=Math.max(i?i.width:0,r?r.width:0),s=Math.max(i?i.height:0,r?r.height:0),A=JA();A.width=a,A.height=s;const o=A.getContext("2d");o.fillStyle="#00ffff",o.fillRect(0,0,a,s);const l=o.getImageData(0,0,a,s);if(i){o.drawImage(i,0,0,a,s);const t=n(e),r=o.getImageData(0,0,a,s).data;for(let e=2;e<r.length;e+=4)l.data[e]=256*t(r[e]/256)}if(r){o.drawImage(r,0,0,a,s);const e=n(t),i=o.getImageData(0,0,a,s).data;for(let t=1;t<i.length;t+=4)l.data[t]=256*e(i[t]/256)}o.putImageData(l,0,0);const c=(e||t).clone();return c.source=new ve(A),c.encoding=R,c}processBuffer(e){const t=this.json,n=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),n.push(e),0}processBufferView(e,t,n,i,r){const a=this.json;let s;a.bufferViews||(a.bufferViews=[]),s=t===IA?1:t===TA?2:4;const A=jA(i*e.itemSize*s),o=new DataView(new ArrayBuffer(A));let l=0;for(let r=n;r<n+i;r++)for(let n=0;n<e.itemSize;n++){let i;e.itemSize>4?i=e.array[r*e.itemSize+n]:(0===n?i=e.getX(r):1===n?i=e.getY(r):2===n?i=e.getZ(r):3===n&&(i=e.getW(r)),!0===e.normalized&&(i=ee.normalize(i,e.array))),t===DA?o.setFloat32(l,i,!0):t===BA?o.setUint32(l,i,!0):t===TA?o.setUint16(l,i,!0):t===IA&&o.setUint8(l,i),l+=s}const c={buffer:this.processBuffer(o.buffer),byteOffset:this.byteOffset,byteLength:A};void 0!==r&&(c.target=r),r===PA&&(c.byteStride=e.itemSize*s),this.byteOffset+=A,a.bufferViews.push(c);return{id:a.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const t=this,n=t.json;return n.bufferViews||(n.bufferViews=[]),new Promise((function(i){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){const e=XA(r.result),a={buffer:t.processBuffer(e),byteOffset:t.byteOffset,byteLength:e.byteLength};t.byteOffset+=e.byteLength,i(n.bufferViews.push(a)-1)}}))}processAccessor(e,t,n,i){const r=this.json;let a;if(e.array.constructor===Float32Array)a=DA;else if(e.array.constructor===Uint32Array)a=BA;else if(e.array.constructor===Uint16Array)a=TA;else{if(e.array.constructor!==Uint8Array)throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");a=IA}if(void 0===n&&(n=0),void 0===i&&(i=e.count),0===i)return null;const s=function(e,t,n){const i={min:new Array(e.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(e.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let r=t;r<t+n;r++)for(let t=0;t<e.itemSize;t++){let n;e.itemSize>4?n=e.array[r*e.itemSize+t]:(0===t?n=e.getX(r):1===t?n=e.getY(r):2===t?n=e.getZ(r):3===t&&(n=e.getW(r)),!0===e.normalized&&(n=ee.normalize(n,e.array))),i.min[t]=Math.min(i.min[t],n),i.max[t]=Math.max(i.max[t],n)}return i}(e,n,i);let A;void 0!==t&&(A=e===t.index?RA:PA);const o=this.processBufferView(e,a,n,i,A),l={bufferView:o.id,byteOffset:o.byteOffset,componentType:a,count:i,max:s.max,min:s.min,type:{1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"}[e.itemSize]};return!0===e.normalized&&(l.normalized=!0),r.accessors||(r.accessors=[]),r.accessors.push(l)-1}processImage(e,t,n,i="image/png"){if(null!==e){const r=this,a=r.cache,s=r.json,A=r.options,o=r.pending;a.images.has(e)||a.images.set(e,{});const l=a.images.get(e),c=i+":flipY/"+n.toString();if(void 0!==l[c])return l[c];s.images||(s.images=[]);const h={mimeType:i},u=JA();u.width=Math.min(e.width,A.maxTextureSize),u.height=Math.min(e.height,A.maxTextureSize);const d=u.getContext("2d");if(!0===n&&(d.translate(0,u.height),d.scale(1,-1)),void 0!==e.data){t!==b&&console.error("GLTFExporter: Only RGBAFormat is supported."),(e.width>A.maxTextureSize||e.height>A.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const n=new Uint8ClampedArray(e.height*e.width*4);for(let t=0;t<n.length;t+=4)n[t+0]=e.data[t+0],n[t+1]=e.data[t+1],n[t+2]=e.data[t+2],n[t+3]=e.data[t+3];d.putImageData(new ImageData(n,e.width,e.height),0,0)}else d.drawImage(e,0,0,u.width,u.height);!0===A.binary?o.push(qA(u,i).then((e=>r.processBufferViewImage(e))).then((e=>{h.bufferView=e}))):void 0!==u.toDataURL?h.uri=u.toDataURL(i):o.push(qA(u,i).then((e=>(new FileReader).readAsDataURL(e))).then((e=>{h.uri=e})));const p=s.images.push(h)-1;return l[c]=p,p}throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const t=this.json;t.samplers||(t.samplers=[]);const n={magFilter:VA[e.magFilter],minFilter:VA[e.minFilter],wrapS:VA[e.wrapS],wrapT:VA[e.wrapT]};return t.samplers.push(n)-1}processTexture(e){const t=this.cache,n=this.json;if(t.textures.has(e))return t.textures.get(e);n.textures||(n.textures=[]);let i=e.userData.mimeType;"image/webp"===i&&(i="image/png");const r={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,i)};e.name&&(r.name=e.name),this._invokeAll((function(t){t.writeTexture&&t.writeTexture(e,r)}));const a=n.textures.push(r)-1;return t.textures.set(e,a),a}processMaterial(e){const t=this.cache,n=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const i={pbrMetallicRoughness:{}};!0!==e.isMeshStandardMaterial&&!0!==e.isMeshBasicMaterial&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=e.color.toArray().concat([e.opacity]);if(YA(r,[1,1,1,1])||(i.pbrMetallicRoughness.baseColorFactor=r),e.isMeshStandardMaterial?(i.pbrMetallicRoughness.metallicFactor=e.metalness,i.pbrMetallicRoughness.roughnessFactor=e.roughness):(i.pbrMetallicRoughness.metallicFactor=.5,i.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const t=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),n={index:this.processTexture(t)};this.applyTextureTransform(n,t),i.pbrMetallicRoughness.metallicRoughnessTexture=n}if(e.map){const t={index:this.processTexture(e.map)};this.applyTextureTransform(t,e.map),i.pbrMetallicRoughness.baseColorTexture=t}if(e.emissive){const t=e.emissive.clone().multiplyScalar(e.emissiveIntensity),n=Math.max(t.r,t.g,t.b);if(n>1&&(t.multiplyScalar(1/n),console.warn("THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited")),n>0&&(i.emissiveFactor=t.toArray()),e.emissiveMap){const t={index:this.processTexture(e.emissiveMap)};this.applyTextureTransform(t,e.emissiveMap),i.emissiveTexture=t}}if(e.normalMap){const t={index:this.processTexture(e.normalMap)};e.normalScale&&1!==e.normalScale.x&&(t.scale=e.normalScale.x),this.applyTextureTransform(t,e.normalMap),i.normalTexture=t}if(e.aoMap){const t={index:this.processTexture(e.aoMap),texCoord:1};1!==e.aoMapIntensity&&(t.strength=e.aoMapIntensity),this.applyTextureTransform(t,e.aoMap),i.occlusionTexture=t}e.transparent?i.alphaMode="BLEND":e.alphaTest>0&&(i.alphaMode="MASK",i.alphaCutoff=e.alphaTest),2===e.side&&(i.doubleSided=!0),""!==e.name&&(i.name=e.name),this.serializeUserData(e,i),this._invokeAll((function(t){t.writeMaterial&&t.writeMaterial(e,i)}));const a=n.materials.push(i)-1;return t.materials.set(e,a),a}processMesh(e){const t=this.cache,n=this.json,i=[e.geometry.uuid];if(Array.isArray(e.material))for(let t=0,n=e.material.length;t<n;t++)i.push(e.material[t].uuid);else i.push(e.material.uuid);const r=i.join(":");if(t.meshes.has(r))return t.meshes.get(r);const a=e.geometry;let s;s=e.isLineSegments?wA:e.isLineLoop?bA:e.isLine?EA:e.isPoints?MA:e.material.wireframe?wA:SA;const A={},o={},l=[],c=[],h={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},u=a.getAttribute("normal");void 0===u||this.isNormalizedNormalAttribute(u)||(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),a.setAttribute("normal",this.createNormalizedNormalAttribute(u)));let d=null;for(let e in a.attributes){if("morph"===e.slice(0,5))continue;const n=a.attributes[e];e=h[e]||e.toUpperCase();if(/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(e)||(e="_"+e),t.attributes.has(this.getUID(n))){o[e]=t.attributes.get(this.getUID(n));continue}d=null;const i=n.array;"JOINTS_0"!==e||i instanceof Uint16Array||i instanceof Uint8Array||(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),d=new jt(new Uint16Array(i),n.itemSize,n.normalized));const r=this.processAccessor(d||n,a);null!==r&&(o[e]=r,t.attributes.set(this.getUID(n),r))}if(void 0!==u&&a.setAttribute("normal",u),0===Object.keys(o).length)return null;if(void 0!==e.morphTargetInfluences&&e.morphTargetInfluences.length>0){const n=[],i=[],r={};if(void 0!==e.morphTargetDictionary)for(const t in e.morphTargetDictionary)r[e.morphTargetDictionary[t]]=t;for(let s=0;s<e.morphTargetInfluences.length;++s){const A={};let o=!1;for(const e in a.morphAttributes){if("position"!==e&&"normal"!==e){o||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),o=!0);continue}const n=a.morphAttributes[e][s],i=e.toUpperCase(),r=a.attributes[e];if(t.attributes.has(this.getUID(n,!0))){A[i]=t.attributes.get(this.getUID(n,!0));continue}const l=n.clone();if(!a.morphTargetsRelative)for(let e=0,t=n.count;e<t;e++)for(let t=0;t<n.itemSize;t++)0===t&&l.setX(e,n.getX(e)-r.getX(e)),1===t&&l.setY(e,n.getY(e)-r.getY(e)),2===t&&l.setZ(e,n.getZ(e)-r.getZ(e)),3===t&&l.setW(e,n.getW(e)-r.getW(e));A[i]=this.processAccessor(l,a),t.attributes.set(this.getUID(r,!0),A[i])}c.push(A),n.push(e.morphTargetInfluences[s]),void 0!==e.morphTargetDictionary&&i.push(r[s])}A.weights=n,i.length>0&&(A.extras={},A.extras.targetNames=i)}const p=Array.isArray(e.material);if(p&&0===a.groups.length)return null;const m=p?e.material:[e.material],g=p?a.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let e=0,n=g.length;e<n;e++){const n={mode:s,attributes:o};if(this.serializeUserData(a,n),c.length>0&&(n.targets=c),null!==a.index){let i=this.getUID(a.index);void 0===g[e].start&&void 0===g[e].count||(i+=":"+g[e].start+":"+g[e].count),t.attributes.has(i)?n.indices=t.attributes.get(i):(n.indices=this.processAccessor(a.index,a,g[e].start,g[e].count),t.attributes.set(i,n.indices)),null===n.indices&&delete n.indices}const i=this.processMaterial(m[g[e].materialIndex]);null!==i&&(n.material=i),l.push(n)}A.primitives=l,n.meshes||(n.meshes=[]),this._invokeAll((function(t){t.writeMesh&&t.writeMesh(e,A)}));const f=n.meshes.push(A)-1;return t.meshes.set(r,f),f}processCamera(e){const t=this.json;t.cameras||(t.cameras=[]);const n=e.isOrthographicCamera,i={type:n?"orthographic":"perspective"};return n?i.orthographic={xmag:2*e.right,ymag:2*e.top,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:i.perspective={aspectRatio:e.aspect,yfov:ee.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},""!==e.name&&(i.name=e.type),t.cameras.push(i)-1}processAnimation(e,t){const n=this.json,i=this.nodeMap;n.animations||(n.animations=[]);const r=(e=CA.Utils.mergeMorphTargetTracks(e.clone(),t)).tracks,a=[],s=[];for(let e=0;e<r.length;++e){const n=r[e],A=ka.parseTrackName(n.name);let o=ka.findNode(t,A.nodeName);const l=HA[A.propertyName];if("bones"===A.objectName&&(o=!0===o.isSkinnedMesh?o.skeleton.getBoneByName(A.objectIndex):void 0),!o||!l)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',n.name),null;const c=1;let h,u=n.values.length/n.times.length;l===HA.morphTargetInfluences&&(u/=o.morphTargetInfluences.length),!0===n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline?(h="CUBICSPLINE",u/=3):h=2300===n.getInterpolation()?"STEP":"LINEAR",s.push({input:this.processAccessor(new jt(n.times,c)),output:this.processAccessor(new jt(n.values,u)),interpolation:h}),a.push({sampler:s.length-1,target:{node:i.get(o),path:l}})}return n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:s,channels:a}),n.animations.length-1}processSkin(e){const t=this.json,n=this.nodeMap,i=t.nodes[n.get(e)],r=e.skeleton;if(void 0===r)return null;const a=e.skeleton.bones[0];if(void 0===a)return null;const s=[],A=new Float32Array(16*r.bones.length),o=new at;for(let t=0;t<r.bones.length;++t)s.push(n.get(r.bones[t])),o.copy(r.boneInverses[t]),o.multiply(e.bindMatrix).toArray(A,16*t);void 0===t.skins&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new jt(A,16)),joints:s,skeleton:n.get(a)});return i.skin=t.skins.length-1}processNode(e){const t=this.json,n=this.options,i=this.nodeMap;t.nodes||(t.nodes=[]);const r={};if(n.trs){const t=e.quaternion.toArray(),n=e.position.toArray(),i=e.scale.toArray();YA(t,[0,0,0,1])||(r.rotation=t),YA(n,[0,0,0])||(r.translation=n),YA(i,[1,1,1])||(r.scale=i)}else e.matrixAutoUpdate&&e.updateMatrix(),!1===YA(e.matrix.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])&&(r.matrix=e.matrix.elements);if(""!==e.name&&(r.name=String(e.name)),this.serializeUserData(e,r),e.isMesh||e.isLine||e.isPoints){const t=this.processMesh(e);null!==t&&(r.mesh=t)}else e.isCamera&&(r.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const t=[];for(let i=0,r=e.children.length;i<r;i++){const r=e.children[i];if(r.visible||!1===n.onlyVisible){const e=this.processNode(r);null!==e&&t.push(e)}}t.length>0&&(r.children=t)}this._invokeAll((function(t){t.writeNode&&t.writeNode(e,r)}));const a=t.nodes.push(r)-1;return i.set(e,a),a}processScene(e){const t=this.json,n=this.options;t.scenes||(t.scenes=[],t.scene=0);const i={};""!==e.name&&(i.name=e.name),t.scenes.push(i);const r=[];for(let t=0,i=e.children.length;t<i;t++){const i=e.children[t];if(i.visible||!1===n.onlyVisible){const e=this.processNode(i);null!==e&&r.push(e)}}r.length>0&&(i.nodes=r),this.serializeUserData(e,i)}processObjects(e){const t=new va;t.name="AuxScene";for(let n=0;n<e.length;n++)t.children.push(e[n]);this.processScene(t)}processInput(e){const t=this.options;e=e instanceof Array?e:[e],this._invokeAll((function(t){t.beforeParse&&t.beforeParse(e)}));const n=[];for(let t=0;t<e.length;t++)e[t]instanceof va?this.processScene(e[t]):n.push(e[t]);n.length>0&&this.processObjects(n);for(let e=0;e<this.skins.length;++e)this.processSkin(this.skins[e]);for(let n=0;n<t.animations.length;++n)this.processAnimation(t.animations[n],e[0]);this._invokeAll((function(t){t.afterParse&&t.afterParse(e)}))}_invokeAll(e){for(let t=0,n=this.plugins.length;t<n;t++)e(this.plugins[t])}}class ZA{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight)return void console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);const n=this.writer,i=n.json,r=n.extensionsUsed,a={};e.name&&(a.name=e.name),a.color=e.color.toArray(),a.intensity=e.intensity,e.isDirectionalLight?a.type="directional":e.isPointLight?(a.type="point",e.distance>0&&(a.range=e.distance)):e.isSpotLight&&(a.type="spot",e.distance>0&&(a.range=e.distance),a.spot={},a.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,a.spot.outerConeAngle=e.angle),void 0!==e.decay&&2!==e.decay&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),!e.target||e.target.parent===e&&0===e.target.position.x&&0===e.target.position.y&&-1===e.target.position.z||console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(i.extensions=i.extensions||{},i.extensions[this.name]={lights:[]},r[this.name]=!0);const s=i.extensions[this.name].lights;s.push(a),t.extensions=t.extensions||{},t.extensions[this.name]={light:s.length-1}}}class $A{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,t){if(!e.isMeshBasicMaterial)return;const n=this.writer.extensionsUsed;t.extensions=t.extensions||{},t.extensions[this.name]={},n[this.name]=!0,t.pbrMetallicRoughness.metallicFactor=0,t.pbrMetallicRoughness.roughnessFactor=.9}}class eo{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||0===e.clearcoat)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.clearcoatFactor=e.clearcoat,e.clearcoatMap){const t={index:n.processTexture(e.clearcoatMap)};n.applyTextureTransform(t,e.clearcoatMap),r.clearcoatTexture=t}if(r.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const t={index:n.processTexture(e.clearcoatRoughnessMap)};n.applyTextureTransform(t,e.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=t}if(e.clearcoatNormalMap){const t={index:n.processTexture(e.clearcoatNormalMap)};n.applyTextureTransform(t,e.clearcoatNormalMap),r.clearcoatNormalTexture=t}t.extensions=t.extensions||{},t.extensions[this.name]=r,i[this.name]=!0}}class to{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||0===e.iridescence)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.iridescenceFactor=e.iridescence,e.iridescenceMap){const t={index:n.processTexture(e.iridescenceMap)};n.applyTextureTransform(t,e.iridescenceMap),r.iridescenceTexture=t}if(r.iridescenceIor=e.iridescenceIOR,r.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap){const t={index:n.processTexture(e.iridescenceThicknessMap)};n.applyTextureTransform(t,e.iridescenceThicknessMap),r.iridescenceThicknessTexture=t}t.extensions=t.extensions||{},t.extensions[this.name]=r,i[this.name]=!0}}class no{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||0===e.transmission)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.transmissionFactor=e.transmission,e.transmissionMap){const t={index:n.processTexture(e.transmissionMap)};n.applyTextureTransform(t,e.transmissionMap),r.transmissionTexture=t}t.extensions=t.extensions||{},t.extensions[this.name]=r,i[this.name]=!0}}class io{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||0===e.transmission)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.thicknessFactor=e.thickness,e.thicknessMap){const t={index:n.processTexture(e.thicknessMap)};n.applyTextureTransform(t,e.thicknessMap),r.thicknessTexture=t}r.attenuationDistance=e.attenuationDistance,r.attenuationColor=e.attenuationColor.toArray(),t.extensions=t.extensions||{},t.extensions[this.name]=r,i[this.name]=!0}}class ro{constructor(e){this.writer=e,this.name="KHR_materials_ior"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||1.5===e.ior)return;const n=this.writer.extensionsUsed,i={};i.ior=e.ior,t.extensions=t.extensions||{},t.extensions[this.name]=i,n[this.name]=!0}}class ao{constructor(e){this.writer=e,this.name="KHR_materials_specular"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||1===e.specularIntensity&&e.specularColor.equals(WA)&&!e.specularIntensityMap&&!e.specularColorTexture)return;const n=this.writer,i=n.extensionsUsed,r={};if(e.specularIntensityMap){const t={index:n.processTexture(e.specularIntensityMap)};n.applyTextureTransform(t,e.specularIntensityMap),r.specularTexture=t}if(e.specularColorMap){const t={index:n.processTexture(e.specularColorMap)};n.applyTextureTransform(t,e.specularColorMap),r.specularColorTexture=t}r.specularFactor=e.specularIntensity,r.specularColorFactor=e.specularColor.toArray(),t.extensions=t.extensions||{},t.extensions[this.name]=r,i[this.name]=!0}}CA.Utils={insertKeyframe:function(e,t){const n=.001,i=e.getValueSize(),r=new e.TimeBufferType(e.times.length+1),a=new e.ValueBufferType(e.values.length+i),s=e.createInterpolant(new e.ValueBufferType(i));let A;if(0===e.times.length){r[0]=t;for(let e=0;e<i;e++)a[e]=0;A=0}else if(t<e.times[0]){if(Math.abs(e.times[0]-t)<n)return 0;r[0]=t,r.set(e.times,1),a.set(s.evaluate(t),0),a.set(e.values,i),A=0}else if(t>e.times[e.times.length-1]){if(Math.abs(e.times[e.times.length-1]-t)<n)return e.times.length-1;r[r.length-1]=t,r.set(e.times,0),a.set(e.values,0),a.set(s.evaluate(t),e.values.length),A=r.length-1}else for(let o=0;o<e.times.length;o++){if(Math.abs(e.times[o]-t)<n)return o;if(e.times[o]<t&&e.times[o+1]>t){r.set(e.times.slice(0,o+1),0),r[o+1]=t,r.set(e.times.slice(o+1),o+2),a.set(e.values.slice(0,(o+1)*i),0),a.set(s.evaluate(t),(o+1)*i),a.set(e.values.slice((o+1)*i),(o+2)*i),A=o+1;break}}return e.times=r,e.values=a,A},mergeMorphTargetTracks:function(e,t){const n=[],i={},r=e.tracks;for(let e=0;e<r.length;++e){let a=r[e];const s=ka.parseTrackName(a.name),A=ka.findNode(t,s.nodeName);if("morphTargetInfluences"!==s.propertyName||void 0===s.propertyIndex){n.push(a);continue}if(a.createInterpolant!==a.InterpolantFactoryMethodDiscrete&&a.createInterpolant!==a.InterpolantFactoryMethodLinear){if(a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),a=a.clone(),a.setInterpolation(2301)}const o=A.morphTargetInfluences.length,l=A.morphTargetDictionary[s.propertyIndex];if(void 0===l)throw new Error("THREE.GLTFExporter: Morph target name not found: "+s.propertyIndex);let c;if(void 0===i[A.uuid]){c=a.clone();const e=new c.ValueBufferType(o*c.times.length);for(let t=0;t<c.times.length;t++)e[t*o+l]=c.values[t];c.name=(s.nodeName||"")+".morphTargetInfluences",c.values=e,i[A.uuid]=c,n.push(c);continue}const h=a.createInterpolant(new a.ValueBufferType(1));c=i[A.uuid];for(let e=0;e<c.times.length;e++)c.values[e*o+l]=h.evaluate(c.times[e]);for(let e=0;e<a.times.length;e++){const t=this.insertKeyframe(c,a.times[e]);c.values[t*o+l]=a.values[e]}}return e.tracks=n,e}};const so=(e,t=24,n=24,i=0,r=0)=>()=>{const a=document.createElementNS("http://www.w3.org/2000/svg","svg");return a.setAttribute("fill","none"),a.setAttribute("viewBox",`${i} ${r} ${t} ${n}`),e.forEach((e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","path");Object.keys(e).forEach((n=>t.setAttribute(n,e[n]))),a.appendChild(t)})),a},Ao=so([{d:"M17 12L12 17M12 17L7 12M12 17V4M17 20H7",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}]),oo=so([{d:"M 34,39.1716L 34,22.4583L 28,28.0833L 28,22.5833L 36,15.0833L 44,22.5833L 44,28.0833L 38,22.4583L 38,38L 54.625,38L 49,32L 54.5,32L 62,40L 54.5,48L 49,48L 54.625,42L 36.8284,42L 25.8284,53L 34,53L 30,57L 19,57L 19,46L 23,42L 23,50.1716L 34,39.1716 Z",fill:"currentColor",strokeLinejoin:"round"}],60,60,8,8),lo=so([{d:"M17 11V8.5C17 7.67157 16.3284 7 15.5 7H5.5C4.67157 7 4 7.67157 4 8.5V16.5C4 17.3284 4.67157 18 5.5 18H15.5C16.3284 18 17 17.3284 17 16.5V14.5",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round"},{d:"M17 11L20.2764 9.3618C20.6088 9.19558 21 9.43733 21 9.80902V15.2785C21 15.6276 20.6513 15.8692 20.3244 15.7467L17 14.5",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round"}]),co=so([{d:"M15.0858 3.58579C14.7107 3.21071 14.202 3 13.6716 3H10.3284C9.79799 3 9.28929 3.21071 8.91421 3.58579L8.08579 4.41421C7.71071 4.78929 7.20201 5 6.67157 5H5C3.89543 5 3 5.89543 3 7L3 17C3 18.1046 3.89543 19 5 19H19C20.1046 19 21 18.1046 21 17V7C21 5.89543 20.1046 5 19 5H17.3284C16.798 5 16.2893 4.78929 15.9142 4.41421L15.0858 3.58579Z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},{d:"M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",fillRule:"evenodd",clipRule:"evenodd"}]);var ho;!function(e){e[e.camera=1]="camera",e[e.surface=2]="surface"}(ho||(ho={}));const uo={[ho.camera]:lo(),[ho.surface]:oo()},po={[ho.camera]:"Draw paralell to camera",[ho.surface]:"Draw paralell to surface"};Vn.skinning_pars_vertex+="\n  #ifdef USE_INSTANCED_POSITION\n  attribute vec3 instance;\n  #endif\n  #ifdef USE_OUTPUT_NORMAL\n  varying vec3 fragNormal;\n  #endif\n  #ifdef USE_OUTPUT_POSITION\n  varying vec3 fragPosition;\n  #endif\n",Vn.skinning_vertex+="\n  #ifdef USE_INSTANCED_POSITION\n  transformed += instance;\n  #endif\n  #ifdef USE_OUTPUT_NORMAL\n  vec3 outputNormal = vec3(normal);\n  #ifdef USE_INSTANCING\n    mat3 nm = mat3(instanceMatrix);\n    outputNormal /= vec3(dot(nm[0], nm[0]), dot(nm[1], nm[1]), dot(nm[2], nm[2]));\n    outputNormal = nm * outputNormal;\n  #endif\n  fragNormal = normalMatrix * outputNormal;\n  #endif\n  #ifdef USE_OUTPUT_POSITION\n  vec4 outputPosition = vec4(transformed, 1.0);\n  #ifdef USE_INSTANCING\n  outputPosition = instanceMatrix * outputPosition;\n  #endif\n  outputPosition = modelMatrix * outputPosition;\n  fragPosition = outputPosition.xyz;\n  #endif\n",Vn.clipping_planes_pars_fragment+="\n  #ifdef USE_OUTPUT_NORMAL\n  layout(location = 1) out vec4 pc_fragNormal;\n  varying vec3 fragNormal;\n  #endif\n  #ifdef USE_OUTPUT_POSITION\n  layout(location = 2) out vec4 pc_fragPosition;\n  varying vec3 fragPosition;\n  #endif\n",Vn.clipping_planes_fragment+="\n  #ifdef USE_OUTPUT_NORMAL\n  pc_fragNormal = vec4(normalize(fragNormal), 0.0);\n  #endif\n  #ifdef USE_OUTPUT_POSITION\n  pc_fragPosition = vec4(fragPosition, 0.0);\n  #endif\n";const mo=document.getElementById("viewport");if(!mo)throw new Error("Couldn't get viewport");mo.addEventListener("contextmenu",(e=>e.preventDefault())),mo.addEventListener("touchstart",(e=>e.preventDefault()));const go=new In(75,1,.1,1e3),fo=new _a({antialias:!1,powerPreference:"high-performance",stencil:!1});fo.setPixelRatio(window.devicePixelRatio||1);const _o=new va;_o.environment=new oi(fo).fromScene(new class extends va{constructor(){super();const e=new yn;e.deleteAttribute("uv");const t=new wa({side:1}),n=new wa,i=new La(16777215,5,28,2);i.position.set(.418,16.199,.3),this.add(i);const r=new vn(e,t);r.position.set(-.757,13.219,.717),r.scale.set(31.713,28.305,28.591),this.add(r);const a=new vn(e,n);a.position.set(-10.906,2.009,1.846),a.rotation.set(0,-.195,0),a.scale.set(2.328,7.905,4.651),this.add(a);const s=new vn(e,n);s.position.set(-5.607,-.754,-.758),s.rotation.set(0,.994,0),s.scale.set(1.97,1.534,3.955),this.add(s);const A=new vn(e,n);A.position.set(6.167,.857,7.803),A.rotation.set(0,.561,0),A.scale.set(3.927,6.285,3.687),this.add(A);const o=new vn(e,n);o.position.set(-2.017,.018,6.124),o.rotation.set(0,.333,0),o.scale.set(2.002,4.566,2.064),this.add(o);const l=new vn(e,n);l.position.set(2.291,-.756,-2.621),l.rotation.set(0,-.286,0),l.scale.set(1.546,1.552,1.496),this.add(l);const c=new vn(e,n);c.position.set(-2.193,-.369,-5.547),c.rotation.set(0,.516,0),c.scale.set(3.875,3.487,2.986),this.add(c);const h=new vn(e,vs(50));h.position.set(-16.116,14.37,8.208),h.scale.set(.1,2.428,2.739),this.add(h);const u=new vn(e,vs(50));u.position.set(-16.109,18.021,-8.207),u.scale.set(.1,2.425,2.751),this.add(u);const d=new vn(e,vs(17));d.position.set(14.904,12.198,-1.832),d.scale.set(.15,4.265,6.331),this.add(d);const p=new vn(e,vs(43));p.position.set(-.462,8.89,14.52),p.scale.set(4.38,5.441,.088),this.add(p);const m=new vn(e,vs(20));m.position.set(3.235,11.486,-12.541),m.scale.set(2.5,2,.1),this.add(m);const g=new vn(e,vs(100));g.position.set(0,20,0),g.scale.set(1,.1,1),this.add(g)}dispose(){const e=new Set;this.traverse((t=>{t.isMesh&&(e.add(t.geometry),e.add(t.material))}));for(const t of e)t.dispose()}},.04).texture;const vo=new class{target;screen;constructor({samples:e}){const t=new kn(2,2,1,1);t.deleteAttribute("normal"),t.deleteAttribute("uv"),this.target=new Se(window.innerWidth,window.innerHeight,3,{samples:e,type:M}),this.screen=new vn(t,new Ma({glslVersion:O,uniforms:{colorTexture:{value:this.target.texture[0]},normalTexture:{value:this.target.texture[1]},positionTexture:{value:this.target.texture[2]},resolution:{value:new te(this.target.width,this.target.height)},cameraNear:{value:0},cameraFar:{value:0},cameraPosition:{value:new Te},flipY:{value:0},intensity:{value:.8},thickness:{value:1},depthBias:{value:1},depthScale:{value:40},normalBias:{value:40},normalScale:{value:1}},vertexShader:"\n  precision highp int;\n  precision highp float;\n  in vec3 position;\n  out vec2 uv;\n  uniform int flipY;\n  void main() {\n    gl_Position = vec4(position.xy, 0, 1);\n    uv = position.xy * 0.5 + 0.5;\n    if (flipY == 1) {\n      uv.y = 1.0 - uv.y;\n    }\n  }\n",fragmentShader:"\n  precision highp int;\n  precision highp float;\n  in vec2 uv;\n  out vec4 fragColor;\n  uniform sampler2D colorTexture;\n  uniform sampler2D normalTexture;\n  uniform sampler2D positionTexture;\n  uniform vec2 resolution;\n  uniform float cameraNear;\n  uniform float cameraFar;\n  uniform vec3 cameraPosition;\n  uniform float intensity;\n  uniform float thickness;\n  uniform float depthBias;\n  uniform float depthScale;\n  uniform float normalBias;\n  uniform float normalScale;\n  #define saturate(a) clamp(a, 0.0, 1.0)\n  float getDepth(const in vec3 position) {\n    float depth = length(position - cameraPosition);\n    return (depth - cameraNear) / (cameraFar - cameraNear);\n  }\n  vec3 LinearToSRGB(const in vec3 value) {\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\n  }\n  vec3 SobelSample(const in sampler2D tex, const in vec2 uv, const in vec3 offset) {\n    vec3 pixelCenter = texture(tex, uv).rgb;\n    vec3 pixelLeft   = texture(tex, uv - offset.xz).rgb;\n    vec3 pixelRight  = texture(tex, uv + offset.xz).rgb;\n    vec3 pixelUp     = texture(tex, uv + offset.zy).rgb;\n    vec3 pixelDown   = texture(tex, uv - offset.zy).rgb;\n    return (\n      abs(pixelLeft    - pixelCenter)\n      + abs(pixelRight - pixelCenter)\n      + abs(pixelUp    - pixelCenter)\n      + abs(pixelDown  - pixelCenter)\n    );\n  }\n  float SobelSampleDepth(const in sampler2D tex, const in vec2 uv, const in vec3 offset) {\n    float pixelCenter = getDepth(texture(tex, uv).xyz);\n    float pixelLeft   = getDepth(texture(tex, uv - offset.xz).xyz);\n    float pixelRight  = getDepth(texture(tex, uv + offset.xz).xyz);\n    float pixelUp     = getDepth(texture(tex, uv + offset.zy).xyz);\n    float pixelDown   = getDepth(texture(tex, uv - offset.zy).xyz);\n    return (\n      abs(pixelLeft    - pixelCenter)\n      + abs(pixelRight - pixelCenter)\n      + abs(pixelUp    - pixelCenter)\n      + abs(pixelDown  - pixelCenter)\n    );\n  }\n  float edge(const in vec2 uv) {\n    vec3 offset = vec3((1.0 / resolution.x), (1.0 / resolution.y), 0.0) * thickness;\n    float sobelDepth = SobelSampleDepth(positionTexture, uv, offset);\n    sobelDepth = pow(saturate(sobelDepth) * depthScale, depthBias);\n    vec3 sobelNormalVec = SobelSample(normalTexture, uv, offset);\n    float sobelNormal = sobelNormalVec.x + sobelNormalVec.y + sobelNormalVec.z;\n    sobelNormal = pow(sobelNormal * normalScale, normalBias);\n    return saturate(max(sobelDepth, sobelNormal)) * intensity;\n  }\n  const vec3 background = vec3(0.06666666666666667, 0.13333333333333333, 0.2);\n  void main() {\n    vec3 color = texture(colorTexture, uv).rgb;\n    float depth = length(texture(positionTexture, uv).xyz * vec3(1.0, 0.5, 1.0));\n    float decay = (1.0 - exp(-0.02 * 0.02 * depth * depth));\n    color = mix(color, background, decay);\n    decay = (1.0 - exp(-0.015 * 0.015 * depth * depth));\n    color = mix(color, vec3(0.0), edge(uv) * (1.0 - decay));\n    fragColor = vec4(LinearToSRGB(color), 1.0);\n  }\n"})),this.screen.frustumCulled=!1,this.screen.matrixAutoUpdate=!1}setSize(e,t,n=!1,i=1){const{screen:r,target:a}=this;a.setSize(e,t),r.material.uniforms.resolution.value.set(e,t).divideScalar(i),r.material.uniforms.flipY.value=n?1:0}render(e,t,n,i=null){const{screen:r,target:a}=this;e.setClearColor(xs.setRGB(t.far,t.far,t.far),1),e.setRenderTarget(a),e.render(n,t);const{uniforms:s}=r.material;s.cameraNear.value=t.near,s.cameraFar.value=t.far,s.cameraPosition.value.setFromMatrixPosition(t.matrixWorld),e.setClearColor(xs.setRGB(0,0,0),1),e.setRenderTarget(i),e.render(r,t)}}({samples:4});let xo=!1;const yo=()=>{fo.setSize(window.innerWidth,window.innerHeight),vo.setSize(window.innerWidth,window.innerHeight),go.aspect=window.innerWidth/window.innerHeight,go.updateProjectionMatrix(),xo=!0};yo(),window.addEventListener("resize",yo),mo.appendChild(fo.domElement);const Co=(()=>{const e=new wa({envMapIntensity:.5,vertexColors:!0,metalness:.2,roughness:.8});e.defines={USE_OUTPUT_NORMAL:1,USE_OUTPUT_POSITION:1};const t=new wa({envMapIntensity:.5,vertexColors:!0});return t.defines={USE_INSTANCED_POSITION:1,USE_OUTPUT_NORMAL:1,USE_OUTPUT_POSITION:1},{triangles:e,voxels:t}})(),Mo=new class{chunkSize;data;noise;queue;constructor({chunkSize:e}){this.chunkSize=e,this.data=new Map,this.noise=new ys,this.noise.SetFrequency(.03),this.noise.SetFractalType(ys.FractalType.FBm),this.queue=new Map}generate(e,t,n){const{chunkSize:i,noise:r}=this,a=new Uint32Array(i*i*i);for(let s=0,A=0;A<i;A++)for(let o=0;o<i;o++)for(let l=0;l<i;l++,s++){const c=e*i+l,h=t*i+o,u=n*i+A;if(h<-8||h<8&&h<r.GetNoise(c,h,u)*Math.sqrt(c*c+u*u)*.1){const e=Math.floor(255-64*Math.random());a[s]=e/2<<24^e<<16^e<<8^32+Math.floor(128*Math.random())}}return a}get(e,t,n){const i=`${e}:${t}:${n}`;let r=this.data.get(i);if(!r){const a=localStorage.getItem(`chunk:${i}`);r=a?new Uint32Array(xA(new Uint8Array(atob(a).split("").map((e=>e.charCodeAt(0))))).buffer):this.generate(e,t,n),this.data.set(i,r)}return r}save(e,t,n){const{queue:i}=this,r=`${e}:${t}:${n}`,a=this.data.get(r);if(!a)return;const s=i.get(r);s&&(s.aborted=!0,clearTimeout(s.timer));const A={aborted:!1,timer:setTimeout((()=>_A(new Uint8Array(a.buffer),((e,t)=>{e||A.aborted||localStorage.setItem(`chunk:${r}`,btoa([...t].map((e=>String.fromCharCode(e))).join("")))}))),1e3)};i.set(r,A)}listStored(){return Object.keys(localStorage).filter((e=>"chunk:"===e.slice(0,6))).map((e=>{const[t,n,i]=e.slice(6).split(":");return{x:parseInt(t,10),y:parseInt(n,10),z:parseInt(i,10)}}))}}({chunkSize:32}),wo=new class extends ha{chunks;queue;materials;mesher;history;storage;constructor({history:e=!0,materials:t,storage:n=new ns}={}){super(),this.chunks=new Map,this.queue=new Map,this.materials={triangles:t?.triangles||new Ht({vertexColors:!0}),voxels:t?.voxels||new Ht({visible:!1})};const{chunkSize:i}=n;this.mesher=new is({buffer:i*i*i*8,options:{chunkSize:i},program:rs,script:ps}),this.history={enabled:e,last:-1,undo:[],redo:[]},this.storage=n}dispose(){const{chunks:e,mesher:t,queue:n}=this;e.forEach((e=>e.dispose())),t.dispose(),n.clear()}undo(){const{history:e}=this,t=e.undo.pop();t&&(e.last=-1,e.redo.push(t),this.update(t.map((({x:e,y:t,z:n,undo:i})=>({x:e,y:t,z:n,r:i>>8&255,g:i>>16&255,b:i>>24&255,value:255&i}))),-1,!0))}redo(){const{history:e}=this,t=e.redo.pop();t&&(e.last=-1,e.undo.push(t),this.update(t.map((({x:e,y:t,z:n,redo:i})=>({x:e,y:t,z:n,r:i>>8&255,g:i>>16&255,b:i>>24&255,value:255&i}))),-1,!0))}updateChunk(e,t,n){const{materials:i,mesher:r,storage:a}=this,{chunkSize:s}=a,A=`${e}:${t}:${n}`;let o=this.chunks.get(A);o||(o=new ts({materials:i,position:new Te(e*s+-.5*s,t*s+-.5*s,n*s+-.5*s)}),this.add(o),this.chunks.set(A,o));const l=[];for(let i=n-1;i<=n;i++)for(let n=t-1;n<=t;n++)for(let t=e-1;t<=e;t++)l.push(a.get(t,n,i));const c=++o.version;r.run(l).then((e=>{o?.version===c&&(o.update(e),this.dispatchEvent({type:"change"}))}))}update(e,t=-1,n=!1){const{history:i,queue:r,storage:a}=this,{chunkSize:s}=a,A=.5*s,o=!!r.size,l=new Map,c=e.reduce(((e,{x:t,y:n,z:i,value:o,r:c=0,g:h=0,b:u=0})=>{const d=Math.floor(t/s),p=Math.floor(n/s),m=Math.floor(i/s),g=t-d*s,f=n-p*s,_=i-m*s,v=_*s*s+f*s+g,x=a.get(d,p,m),y=x[v];if(void 0===o&&0==(o=255&y))return e;const C=u<<24^h<<16^c<<8^o;x[v]=C;for(let e=0;e<2;e++)for(let t=0;t<2;t++)for(let n=0;n<2;n++)if(g>=n*A-1&&g<=(n+1)*A&&f>=t*A-1&&f<=(t+1)*A&&_>=e*A-1&&_<=(e+1)*A){const i=d+n,a=p+t,s=m+e,A=`${i}:${a}:${s}`;r.has(A)||r.set(A,{x:i,y:a,z:s})}const M=`${d}:${p}:${m}`;return l.has(M)||l.set(M,{x:d,y:p,z:m}),e.push({x:t,y:n,z:i,undo:y,redo:C}),e}),[]);if(i.enabled&&!n){const e=i.undo[i.undo.length-1];-1!==t&&i.last===t&&e.length<1e4?c.forEach((t=>{const n=e.find((({x:e,y:n,z:i})=>e===t.x&&n===t.y&&i===t.z));n?n.redo=t.redo:e.push(t)})):i.undo.push(c),i.last=t,i.redo.length=0}l.forEach((({x:e,y:t,z:n})=>a.save(e,t,n))),!o&&r.size&&ms((()=>{r.forEach((({x:e,y:t,z:n})=>this.updateChunk(e,t,n))),r.clear()}))}}({materials:Co,storage:Mo});wo.addEventListener("change",(()=>{xo=!0})),_o.add(wo);const bo=[];{const e=Math.min(1+Mo.listStored().reduce(((e,{y:t})=>Math.max(e,t)),0),3);for(let t=-3;t<=3;t++)for(let n=0;n<=e;n++)for(let e=-3;e<=3;e++)bo.push({x:e,y:n,z:t,d:Math.sqrt(e*e+n*n+t*t)})}bo.sort((({d:e},{d:t})=>e-t)),bo.forEach((({x:e,y:t,z:n})=>wo.updateChunk(e,t,n))),go.position.set(0,16,32);const Eo=new class extends z{constructor(e,o){super(),this.object=e,this.domElement=o,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new Te,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:t,MIDDLE:n,RIGHT:i},this.touches={ONE:r,TWO:s},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return d.phi},this.getAzimuthalAngle=function(){return d.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",q),this._domElementKeyEvents=e},this.saveState=function(){l.target0.copy(l.target),l.position0.copy(l.object.position),l.zoom0=l.object.zoom},this.reset=function(){l.target.copy(l.target0),l.object.position.copy(l.position0),l.object.zoom=l.zoom0,l.object.updateProjectionMatrix(),l.dispatchEvent(gs),l.update(),h=c.NONE},this.update=function(){const t=new Te,n=(new Ie).setFromUnitVectors(e.up,new Te(0,1,0)),i=n.clone().invert(),r=new Te,a=new Ie,s=2*Math.PI;return function(){const e=l.object.position;t.copy(e).sub(l.target),t.applyQuaternion(n),d.setFromVector3(t),l.autoRotate&&h===c.NONE&&D(2*Math.PI/60/60*l.autoRotateSpeed),l.enableDamping?(d.theta+=p.theta*l.dampingFactor,d.phi+=p.phi*l.dampingFactor):(d.theta+=p.theta,d.phi+=p.phi);let A=l.minAzimuthAngle,o=l.maxAzimuthAngle;return isFinite(A)&&isFinite(o)&&(A<-Math.PI?A+=s:A>Math.PI&&(A-=s),o<-Math.PI?o+=s:o>Math.PI&&(o-=s),d.theta=A<=o?Math.max(A,Math.min(o,d.theta)):d.theta>(A+o)/2?Math.max(A,d.theta):Math.min(o,d.theta)),d.phi=Math.max(l.minPolarAngle,Math.min(l.maxPolarAngle,d.phi)),d.makeSafe(),d.radius*=m,d.radius=Math.max(l.minDistance,Math.min(l.maxDistance,d.radius)),!0===l.enableDamping?l.target.addScaledVector(g,l.dampingFactor):l.target.add(g),t.setFromSpherical(d),t.applyQuaternion(i),e.copy(l.target).add(t),l.object.lookAt(l.target),!0===l.enableDamping?(p.theta*=1-l.dampingFactor,p.phi*=1-l.dampingFactor,g.multiplyScalar(1-l.dampingFactor)):(p.set(0,0,0),g.set(0,0,0)),m=1,!!(f||r.distanceToSquared(l.object.position)>u||8*(1-a.dot(l.object.quaternion))>u)&&(l.dispatchEvent(gs),r.copy(l.object.position),a.copy(l.object.quaternion),f=!1,!0)}}(),this.dispose=function(){l.domElement.removeEventListener("contextmenu",K),l.domElement.removeEventListener("pointerdown",W),l.domElement.removeEventListener("pointercancel",X),l.domElement.removeEventListener("wheel",J),l.domElement.removeEventListener("pointermove",Y),l.domElement.removeEventListener("pointerup",j),null!==l._domElementKeyEvents&&l._domElementKeyEvents.removeEventListener("keydown",q)};const l=this,c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const u=1e-6,d=new Ya,p=new Ya;let m=1;const g=new Te;let f=!1;const _=new te,v=new te,x=new te,y=new te,C=new te,M=new te,w=new te,b=new te,E=new te,S=[],I={};function T(){return Math.pow(.95,l.zoomSpeed)}function D(e){p.theta-=e}function B(e){p.phi-=e}const P=function(){const e=new Te;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),g.add(e)}}(),R=function(){const e=new Te;return function(t,n){!0===l.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(l.object.up,e)),e.multiplyScalar(t),g.add(e)}}(),L=function(){const e=new Te;return function(t,n){const i=l.domElement;if(l.object.isPerspectiveCamera){const r=l.object.position;e.copy(r).sub(l.target);let a=e.length();a*=Math.tan(l.object.fov/2*Math.PI/180),P(2*t*a/i.clientHeight,l.object.matrix),R(2*n*a/i.clientHeight,l.object.matrix)}else l.object.isOrthographicCamera?(P(t*(l.object.right-l.object.left)/l.object.zoom/i.clientWidth,l.object.matrix),R(n*(l.object.top-l.object.bottom)/l.object.zoom/i.clientHeight,l.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),l.enablePan=!1)}}();function N(e){l.object.isPerspectiveCamera?m/=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom*e)),l.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function U(e){l.object.isPerspectiveCamera?m*=e:l.object.isOrthographicCamera?(l.object.zoom=Math.max(l.minZoom,Math.min(l.maxZoom,l.object.zoom/e)),l.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),l.enableZoom=!1)}function Q(e){_.set(e.clientX,e.clientY)}function F(e){y.set(e.clientX,e.clientY)}function O(){if(1===S.length)_.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);_.set(e,t)}}function G(){if(1===S.length)y.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);y.set(e,t)}}function z(){const e=S[0].pageX-S[1].pageX,t=S[0].pageY-S[1].pageY,n=Math.sqrt(e*e+t*t);w.set(0,n)}function k(e){if(1==S.length)v.set(e.pageX,e.pageY);else{const t=ee(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);v.set(n,i)}x.subVectors(v,_).multiplyScalar(l.rotateSpeed);const t=l.domElement;D(2*Math.PI*x.x/t.clientHeight),B(2*Math.PI*x.y/t.clientHeight),_.copy(v)}function V(e){if(1===S.length)C.set(e.pageX,e.pageY);else{const t=ee(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);C.set(n,i)}M.subVectors(C,y).multiplyScalar(l.panSpeed),L(M.x,M.y),y.copy(C)}function H(e){const t=ee(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);b.set(0,r),E.set(0,Math.pow(b.y/w.y,l.zoomSpeed)),N(E.y),w.copy(b)}function W(e){!1!==l.enabled&&(0===S.length&&(l.domElement.setPointerCapture(e.pointerId),l.domElement.addEventListener("pointermove",Y),l.domElement.addEventListener("pointerup",j)),function(e){S.push(e)}(e),"touch"===e.pointerType?function(e){switch($(e),S.length){case 1:switch(l.touches.ONE){case r:if(!1===l.enableRotate)return;O(),h=c.TOUCH_ROTATE;break;case a:if(!1===l.enablePan)return;G(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(l.touches.TWO){case s:if(!1===l.enableZoom&&!1===l.enablePan)return;l.enableZoom&&z(),l.enablePan&&G(),h=c.TOUCH_DOLLY_PAN;break;case A:if(!1===l.enableZoom&&!1===l.enableRotate)return;l.enableZoom&&z(),l.enableRotate&&O(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&l.dispatchEvent(fs)}(e):function(e){let r;switch(e.button){case 0:r=l.mouseButtons.LEFT;break;case 1:r=l.mouseButtons.MIDDLE;break;case 2:r=l.mouseButtons.RIGHT;break;default:r=-1}switch(r){case n:if(!1===l.enableZoom)return;!function(e){w.set(e.clientX,e.clientY)}(e),h=c.DOLLY;break;case t:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enablePan)return;F(e),h=c.PAN}else{if(!1===l.enableRotate)return;Q(e),h=c.ROTATE}break;case i:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===l.enableRotate)return;Q(e),h=c.ROTATE}else{if(!1===l.enablePan)return;F(e),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&l.dispatchEvent(fs)}(e))}function Y(e){!1!==l.enabled&&("touch"===e.pointerType?function(e){switch($(e),h){case c.TOUCH_ROTATE:if(!1===l.enableRotate)return;k(e),l.update();break;case c.TOUCH_PAN:if(!1===l.enablePan)return;V(e),l.update();break;case c.TOUCH_DOLLY_PAN:if(!1===l.enableZoom&&!1===l.enablePan)return;!function(e){l.enableZoom&&H(e),l.enablePan&&V(e)}(e),l.update();break;case c.TOUCH_DOLLY_ROTATE:if(!1===l.enableZoom&&!1===l.enableRotate)return;!function(e){l.enableZoom&&H(e),l.enableRotate&&k(e)}(e),l.update();break;default:h=c.NONE}}(e):function(e){switch(h){case c.ROTATE:if(!1===l.enableRotate)return;!function(e){v.set(e.clientX,e.clientY),x.subVectors(v,_).multiplyScalar(l.rotateSpeed);const t=l.domElement;D(2*Math.PI*x.x/t.clientHeight),B(2*Math.PI*x.y/t.clientHeight),_.copy(v),l.update()}(e);break;case c.DOLLY:if(!1===l.enableZoom)return;!function(e){b.set(e.clientX,e.clientY),E.subVectors(b,w),E.y>0?N(T()):E.y<0&&U(T()),w.copy(b),l.update()}(e);break;case c.PAN:if(!1===l.enablePan)return;!function(e){C.set(e.clientX,e.clientY),M.subVectors(C,y).multiplyScalar(l.panSpeed),L(M.x,M.y),y.copy(C),l.update()}(e)}}(e))}function j(e){Z(e),0===S.length&&(l.domElement.releasePointerCapture(e.pointerId),l.domElement.removeEventListener("pointermove",Y),l.domElement.removeEventListener("pointerup",j)),l.dispatchEvent(_s),h=c.NONE}function X(e){Z(e)}function J(e){!1!==l.enabled&&!1!==l.enableZoom&&h===c.NONE&&(e.preventDefault(),l.dispatchEvent(fs),function(e){e.deltaY<0?U(T()):e.deltaY>0&&N(T()),l.update()}(e),l.dispatchEvent(_s))}function q(e){!1!==l.enabled&&!1!==l.enablePan&&function(e){let t=!1;switch(e.code){case l.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?B(2*Math.PI*l.rotateSpeed/l.domElement.clientHeight):L(0,l.keyPanSpeed),t=!0;break;case l.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?B(-2*Math.PI*l.rotateSpeed/l.domElement.clientHeight):L(0,-l.keyPanSpeed),t=!0;break;case l.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?D(2*Math.PI*l.rotateSpeed/l.domElement.clientHeight):L(l.keyPanSpeed,0),t=!0;break;case l.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?D(-2*Math.PI*l.rotateSpeed/l.domElement.clientHeight):L(-l.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),l.update())}(e)}function K(e){!1!==l.enabled&&e.preventDefault()}function Z(e){delete I[e.pointerId];for(let t=0;t<S.length;t++)if(S[t].pointerId==e.pointerId)return void S.splice(t,1)}function $(e){let t=I[e.pointerId];void 0===t&&(t=new te,I[e.pointerId]=t),t.set(e.pageX,e.pageY)}function ee(e){const t=e.pointerId===S[0].pointerId?S[1]:S[0];return I[t.pointerId]}l.domElement.addEventListener("contextmenu",K),l.domElement.addEventListener("pointerdown",W),l.domElement.addEventListener("pointercancel",X),l.domElement.addEventListener("wheel",J,{passive:!1}),this.update()}}(go,mo);Eo.target.set(0,8,0),Eo.addEventListener("change",(()=>{xo=!0})),Eo.minDistance=4,Eo.maxDistance=96,Eo.mouseButtons.MIDDLE=void 0,Eo.enableDamping=!0,Eo.enablePan=Eo.enableRotate=!1,document.addEventListener("keyup",(({key:e})=>{" "===e&&(Eo.enablePan=Eo.enableRotate=!1)}));const So=new class{display;input;value;constructor(){const e=document.getElementById("brush");if(!e)throw new Error("Couldn't get UI container");const t={r:0,g:0,b:0},n=document.createElement("div");n.id="color",n.addEventListener("click",(()=>r.click()));const i=document.createElement("div");n.appendChild(i);const r=document.createElement("input");r.type="color",r.addEventListener("input",(()=>{const e=r.value.slice(1);6===e.length&&(t.r=parseInt(e.slice(0,2),16),t.g=parseInt(e.slice(2,4),16),t.b=parseInt(e.slice(4,6),16),i.style.backgroundColor=r.value)})),n.appendChild(r),e.appendChild(n),this.display=i,this.input=r,this.value=t,this.setValue(255,255,102)}setValue(e,t,n){const{input:i,display:r,value:a}=this;a.r=e,a.g=t,a.b=n,i.value=`#${("000000"+(a.r<<16^a.g<<8^a.b).toString(16)).slice(-6)}`,r.style.backgroundColor=i.value}},Io=new class{buttons;value=0;constructor(){const e=document.getElementById("brush");if(!e)throw new Error("Couldn't get UI container");const t=document.createElement("div");t.id="size",this.buttons=["Small","Medium","Large"].map(((e,n)=>{const i=document.createElement("div");i.className="action";const r=document.createElement("button"),a=document.createElement("span");a.style.height=(n+1)/3*80+"%",r.appendChild(a),r.addEventListener("click",(()=>this.setValue(n))),i.appendChild(r);const s=document.createElement("div");return s.className="tooltip",s.appendChild(document.createTextNode(`${e} brush`)),i.appendChild(s),t.appendChild(i),r})),e.appendChild(t),this.setValue(0)}setValue(e){const{buttons:t}=this;this.value=e,t.forEach(((t,n)=>{t.classList.remove("active"),n===e&&t.classList.add("active")})),this.value=e}},To=new class{button;tooltip;mode=ho.camera;constructor(){const e=document.getElementById("brush");if(!e)throw new Error("Couldn't get UI container");const t=document.createElement("div");t.className="action";const n=document.createElement("button"),i=document.createElement("div");i.className="tooltip",n.addEventListener("click",(()=>this.toggleMode())),t.appendChild(n),e.appendChild(t),t.appendChild(i),this.button=n,this.tooltip=i,this.setMode(this.mode)}setMode(e){const{button:t,tooltip:n}=this;this.mode=e,t.firstChild&&t.removeChild(t.firstChild),t.appendChild(uo[e]),n.firstChild&&n.removeChild(n.firstChild),n.appendChild(document.createTextNode(po[this.mode]))}toggleMode(){this.setMode(this.mode===ho.camera?ho.surface:ho.camera)}};Co.voxels.visible=!1,document.addEventListener("keydown",(e=>{const{ctrlKey:t,key:n,repeat:i,shiftKey:r}=e;i||" "!==n||(Eo.enablePan=Eo.enableRotate=!0),"backspace"===n.toLocaleLowerCase()&&t&&(e.preventDefault(),localStorage.clear(),location.reload()),i||"tab"!==n.toLocaleLowerCase()||(e.preventDefault(),Co.triangles.visible=!Co.triangles.visible,Co.voxels.visible=!Co.triangles.visible,xo=!0),t&&"z"===n.toLocaleLowerCase()&&(e.preventDefault(),r?wo.redo():wo.undo()),!i&&["1","2","3"].includes(n)&&Io.setValue(parseInt(n,10)-1),i||"e"!==n.toLocaleLowerCase()||To.toggleMode()}));const Do=new Te,Bo=new Te(.5,.5,.5),Po={action:0,isEnabled:!1,isEraser:!1,isPaint:!1,lastPosition:new Te,plane:new vn(new kn(1e4,1e4,1,1)),raycaster:new class{constructor(e,t,n=0,i=1/0){this.ray=new rt(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new gt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Wa(e,this,n,t),n.sort(Ha),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Wa(e[i],this,n,t);return n.sort(Ha),n}}(void 0,void 0,0,128)},Ro=new class extends z{pointer;constructor(e){super(),this.pointer={id:-1,button:-1,position:new te},this.pointerdown=this.pointerdown.bind(this),this.pointermove=this.pointermove.bind(this),this.pointerup=this.pointerup.bind(this),e.addEventListener("pointerdown",this.pointerdown),e.addEventListener("pointermove",this.pointermove),e.addEventListener("pointerup",this.pointerup)}getPointer({buttons:e,clientX:t,clientY:n,pointerId:i}){return this.pointer.id=i,this.pointer.button=e,this.pointer.position.set(t/window.innerWidth*2-1,-n/window.innerHeight*2+1),this.pointer}pointerdown(e){if(e.target.setPointerCapture(e.pointerId),-1===this.pointer.id){const t=this.getPointer(e);this.dispatchEvent({type:"dragstart",pointer:t,ctrlKey:e.ctrlKey,shiftKey:e.shiftKey})}}pointermove(e){e.pointerId===this.pointer.id&&("getCoalescedEvents"in e?e.getCoalescedEvents():[e]).forEach((e=>{const t=this.getPointer(e);this.dispatchEvent({type:"dragmove",pointer:t})}))}pointerup(e){if(e.target.releasePointerCapture(e.pointerId),e.pointerId===this.pointer.id){const t=this.getPointer(e);this.dispatchEvent({type:"dragend",pointer:t}),this.pointer.id=-1}}}(mo);Ro.addEventListener("dragstart",(({pointer:e,ctrlKey:t,shiftKey:n})=>{if(Eo.enablePan||t&&1!==e.button||n&&1!==e.button)return;const{plane:i,raycaster:r}=Po;r.setFromCamera(e.position,go);const a=r.intersectObject(wo,!0)[0];if(a&&a.face?.normal)if(4!==e.button){if(Po.action++,Po.isEnabled=!0,Po.isEraser=t||2===e.button,Po.isPaint=n,a.point.addScaledVector(a.face.normal,.25*(Po.isEraser||Po.isPaint?-1:1)).floor(),Lo(a.point),i.position.copy(a.point).add(Bo),To.mode===ho.surface)i.lookAt(Do.addVectors(i.position,a.face.normal));else i.quaternion.copy(go.quaternion);i.updateMatrixWorld()}else{const e=a.object.getColor(a.instanceId).getHex();So.setValue(e>>16&255,e>>8&255,255&e)}})),Ro.addEventListener("dragmove",(({pointer:e})=>{const{isEnabled:t,isPaint:n,lastPosition:i,plane:r,raycaster:a}=Po;if(!t)return;let s;a.setFromCamera(e.position,go),s=n?a.intersectObject(wo,!0)[0]:a.intersectObject(r)[0],s&&s.face?.normal&&(n&&s.point.addScaledVector(s.face.normal,.25*(Po.isEraser||Po.isPaint?-1:1)),s.point.floor(),i.equals(s.point)||n&&i.distanceTo(s.point)>8||Lo(s.point))})),Ro.addEventListener("dragend",(()=>{Po.isEnabled=!1}));const Lo=e=>{let t,n,i,r;Po.isEraser?t=0:(Po.isPaint||(t=64+Math.floor(192*Math.random())),n=So.value.r,i=So.value.g,r=So.value.b);const a=Io.value,{x:s,y:A,z:o}=e,l=[];for(let e=-a;e<=a;e++)for(let c=-a;c<=a;c++)for(let h=-a;h<=a;h++)l.push({x:s+h,y:A+c,z:o+e,r:n,g:i,b:r,value:t});wo.update(l,Po.action),Po.lastPosition.copy(e)};fo.setAnimationLoop((()=>{Eo.update(),xo&&(xo=!1,vo.render(fo,go,_o))})),new class{constructor(e){const t=document.getElementById("actions");if(!t)throw new Error("Couldn't get UI container");const n=new CA,i=document.createElement("a");i.download="sculpty.glb",i.style.display="none";const r=document.createElement("div");r.className="action";const a=document.createElement("button");a.appendChild(Ao()),a.addEventListener("click",(()=>n.parse(e.children.filter((({visible:e})=>e)).map((e=>{const t=e.children[0].clone();return t.position.copy(e.position),t.updateMatrix(),t})),(e=>{const t=new Blob([e]);i.href&&URL.revokeObjectURL(i.href),i.href=URL.createObjectURL(t),i.click()}),(()=>{}),{binary:!0}))),r.appendChild(a),r.appendChild(i);const s=document.createElement("div");s.className="tooltip",s.appendChild(document.createTextNode("Export GLTF")),r.appendChild(s),t.appendChild(r)}}(wo),new class{constructor(e,t,n,i,r=3840,a=2160){const s=document.getElementById("actions");if(!s)throw new Error("Couldn't get UI container");const A=document.createElement("canvas"),o=A.getContext("2d");if(!o)throw new Error("Couldn't get 2D context");const l=document.createElement("canvas"),c=l.getContext("2d");if(!c)throw new Error("Couldn't get 2D context");const h=document.createElement("a");h.download="sculpty.png",h.style.display="none";const u=new ImageData(r,a),d=new we(r,a),p=document.createElement("div");p.className="action";const m=document.createElement("button");m.appendChild(co()),m.addEventListener("click",(()=>{t.setSize(r,a),e.setSize(r,a,!0,2),n.aspect=r/a,n.updateProjectionMatrix(),e.render(t,n,i,d),t.setSize(window.innerWidth,window.innerHeight),e.setSize(window.innerWidth,window.innerHeight),n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix(),t.readRenderTargetPixels(d,0,0,r,a,u.data),A.width=r,A.height=a,o.putImageData(u,0,0),l.width=.5*r,l.height=.5*a,c.imageSmoothingQuality="high",c.drawImage(A,0,0,r,a,0,0,l.width,l.height),l.toBlob((e=>{e&&(h.href&&URL.revokeObjectURL(h.href),h.href=URL.createObjectURL(e),h.click())}))})),p.appendChild(m),p.appendChild(h);const g=document.createElement("div");g.className="tooltip",g.appendChild(document.createTextNode("Take snapshot")),p.appendChild(g),s.appendChild(p)}}(vo,fo,go,_o);const No=document.getElementById("ui");No&&(No.style.display="")}();
